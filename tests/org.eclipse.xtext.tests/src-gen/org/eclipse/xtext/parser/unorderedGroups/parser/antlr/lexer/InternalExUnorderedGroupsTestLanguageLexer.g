
/*
* generated by Xtext
*/
lexer grammar InternalExUnorderedGroupsTestLanguageLexer;


@header {
package org.eclipse.xtext.parser.unorderedGroups.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}




KEYWORD_22 : 'serialization';

KEYWORD_20 : 'bug302585';

KEYWORD_21 : 'datatypes';

KEYWORD_19 : 'nested';

KEYWORD_14 : '10';

KEYWORD_15 : '11';

KEYWORD_16 : '12';

KEYWORD_17 : '13';

KEYWORD_18 : '14';

KEYWORD_1 : '1';

KEYWORD_2 : '2';

KEYWORD_3 : '3';

KEYWORD_4 : '4';

KEYWORD_5 : '5';

KEYWORD_6 : '6';

KEYWORD_7 : '7';

KEYWORD_8 : '8';

KEYWORD_9 : '9';

KEYWORD_10 : 'a';

KEYWORD_11 : 'b';

KEYWORD_12 : 'c';

KEYWORD_13 : 'd';



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



