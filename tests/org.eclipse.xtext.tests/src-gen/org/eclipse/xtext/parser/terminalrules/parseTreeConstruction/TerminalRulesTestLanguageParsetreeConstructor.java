/*
 * generated by Xtext
 */
package org.eclipse.xtext.parser.terminalrules.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;

import org.eclipse.xtext.parser.terminalrules.services.TerminalRulesTestLanguageGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class TerminalRulesTestLanguageParsetreeConstructor extends org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor {
		
	@Inject
	private TerminalRulesTestLanguageGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Model ****************
 *
 * Model:
 * 	idValue=ID | intValue=INT | stringValue=STRING | richStringValue=RICH_STRING | mlCommentValue=ML_COMMENT |
 * 	slCommentValue=SL_COMMENT | wsValue=WS | anyValue=ANY_OTHER;
 *
 **/

// idValue=ID | intValue=INT | stringValue=STRING | richStringValue=RICH_STRING | mlCommentValue=ML_COMMENT |
// slCommentValue=SL_COMMENT | wsValue=WS | anyValue=ANY_OTHER
protected class Model_Alternatives extends AlternativesToken {

	public Model_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getModelAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_IdValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_IntValueAssignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Model_StringValueAssignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Model_RichStringValueAssignment_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Model_MlCommentValueAssignment_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Model_SlCommentValueAssignment_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Model_WsValueAssignment_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Model_AnyValueAssignment_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// idValue=ID
protected class Model_IdValueAssignment_0 extends AssignmentToken  {
	
	public Model_IdValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getIdValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("idValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("idValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getIdValueIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getIdValueIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// intValue=INT
protected class Model_IntValueAssignment_1 extends AssignmentToken  {
	
	public Model_IntValueAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getIntValueAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("intValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("intValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getIntValueINTTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getIntValueINTTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// stringValue=STRING
protected class Model_StringValueAssignment_2 extends AssignmentToken  {
	
	public Model_StringValueAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getStringValueAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("stringValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("stringValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getStringValueSTRINGTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getStringValueSTRINGTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// richStringValue=RICH_STRING
protected class Model_RichStringValueAssignment_3 extends AssignmentToken  {
	
	public Model_RichStringValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getRichStringValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("richStringValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("richStringValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getRichStringValueRICH_STRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getRichStringValueRICH_STRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// mlCommentValue=ML_COMMENT
protected class Model_MlCommentValueAssignment_4 extends AssignmentToken  {
	
	public Model_MlCommentValueAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getMlCommentValueAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mlCommentValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mlCommentValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getMlCommentValueML_COMMENTTerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getMlCommentValueML_COMMENTTerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// slCommentValue=SL_COMMENT
protected class Model_SlCommentValueAssignment_5 extends AssignmentToken  {
	
	public Model_SlCommentValueAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSlCommentValueAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("slCommentValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("slCommentValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getSlCommentValueSL_COMMENTTerminalRuleCall_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getSlCommentValueSL_COMMENTTerminalRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// wsValue=WS
protected class Model_WsValueAssignment_6 extends AssignmentToken  {
	
	public Model_WsValueAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getWsValueAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("wsValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("wsValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getWsValueWSTerminalRuleCall_6_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getWsValueWSTerminalRuleCall_6_0();
			return obj;
		}
		return null;
	}

}

// anyValue=ANY_OTHER
protected class Model_AnyValueAssignment_7 extends AssignmentToken  {
	
	public Model_AnyValueAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getAnyValueAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("anyValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("anyValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getAnyValueANY_OTHERTerminalRuleCall_7_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getAnyValueANY_OTHERTerminalRuleCall_7_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Model ****************/

}
