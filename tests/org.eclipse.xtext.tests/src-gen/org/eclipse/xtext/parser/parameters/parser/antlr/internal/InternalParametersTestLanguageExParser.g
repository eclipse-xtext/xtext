/*
 * generated by Xtext
 */
parser grammar InternalParametersTestLanguageExParser;

options {
	tokenVocab=InternalParametersTestLanguageExLexer;
	superClass=AbstractInternalAntlrParser;
	
}

@header {
package org.eclipse.xtext.parser.parameters.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.parser.parameters.services.ParametersTestLanguageExGrammarAccess;

}

@members {


	private ParametersTestLanguageExGrammarAccess grammarAccess;
	 	
	public InternalParametersTestLanguageExParser(TokenStream input, ParametersTestLanguageExGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "ParserRuleFragmentsEx";	
	} 
	   	   	
	@Override
	protected ParametersTestLanguageExGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleParserRuleFragmentsEx
entryRuleParserRuleFragmentsEx returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getParserRuleFragmentsExRule()); }
	 iv_ruleParserRuleFragmentsEx=ruleParserRuleFragmentsEx 
	 { $current=$iv_ruleParserRuleFragmentsEx.current; } 
	 EOF 
;

// Rule ParserRuleFragmentsEx
ruleParserRuleFragmentsEx returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getParserRuleFragmentsExAccess().getParserRuleParametersParserRuleCall()); 
    }
    this_ParserRuleParameters_0=ruleParserRuleParameters
    {
        $current = $this_ParserRuleParameters_0.current;
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleParserRuleParameters
entryRuleParserRuleParameters returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getParserRuleParametersRule()); }
	 iv_ruleParserRuleParameters=ruleParserRuleParameters 
	 { $current=$iv_ruleParserRuleParameters.current; } 
	 EOF 
;

// Rule ParserRuleParameters
ruleParserRuleParameters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParserRuleParametersAccess().getParserRuleParametersAction_0(),
            $current);
    }
)((
	otherlv_1=NumberSignDigitOne
    {
    	newLeafNode(otherlv_1, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitOneKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario1ParserRuleCall_1_0_1_0()); 
	    }
		lv_scenario_2_0=ruleScenario1[true]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_2_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario1");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	otherlv_3=NumberSignDigitTwo
    {
    	newLeafNode(otherlv_3, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitTwoKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario1ParserRuleCall_1_1_1_0()); 
	    }
		lv_scenario_4_0=ruleScenario1[false]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_4_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario1");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	otherlv_5=NumberSignDigitThree
    {
    	newLeafNode(otherlv_5, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitThreeKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario2ParserRuleCall_1_2_1_0()); 
	    }
		lv_scenario_6_0=ruleScenario2[true]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_6_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	otherlv_7=NumberSignDigitFour
    {
    	newLeafNode(otherlv_7, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitFourKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario2ParserRuleCall_1_3_1_0()); 
	    }
		lv_scenario_8_0=ruleScenario2[false]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_8_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((
NumberSignDigitFive
(
(
ruleScenario2[true]
)
)))=>(
	otherlv_9=NumberSignDigitFive
    {
    	newLeafNode(otherlv_9, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitFiveKeyword_1_4_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario2ParserRuleCall_1_4_0_1_0()); 
	    }
		lv_scenario_10_0=ruleScenario2[true]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_10_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario2");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((
NumberSignDigitSix
(
(
ruleScenario2[false]
)
)))=>(
	otherlv_11=NumberSignDigitSix
    {
    	newLeafNode(otherlv_11, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitSixKeyword_1_5_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario2ParserRuleCall_1_5_0_1_0()); 
	    }
		lv_scenario_12_0=ruleScenario2[false]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_12_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario2");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
	otherlv_13=NumberSignDigitSeven
    {
    	newLeafNode(otherlv_13, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitSevenKeyword_1_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario3ParserRuleCall_1_6_1_0()); 
	    }
		lv_scenario_14_0=ruleScenario3[true]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_14_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario3");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	otherlv_15=NumberSignDigitEight
    {
    	newLeafNode(otherlv_15, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitEightKeyword_1_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario3ParserRuleCall_1_7_1_0()); 
	    }
		lv_scenario_16_0=ruleScenario3[false]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_16_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario3");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	otherlv_17=NumberSignDigitNine
    {
    	newLeafNode(otherlv_17, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitNineKeyword_1_8_0());
    }
(((
(
ruleIdOrKeyword[true]
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario4ParserRuleCall_1_8_1_0_0()); 
	    }
		lv_scenario_18_0=ruleScenario4[true]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_18_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario4");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario2ParserRuleCall_1_8_1_1_0_0()); 
	    }
		lv_scenario_19_0=ruleScenario2[true]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_19_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario2");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_20=Keyword
    {
    	newLeafNode(otherlv_20, grammarAccess.getParserRuleParametersAccess().getKeywordKeyword_1_8_1_1_1());
    }
)?)))
    |(
	otherlv_21=NumberSignDigitOneDigitZero
    {
    	newLeafNode(otherlv_21, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitOneDigitZeroKeyword_1_9_0());
    }
(((
(
ruleIdOrKeyword[true]
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario4ParserRuleCall_1_9_1_0_0()); 
	    }
		lv_scenario_22_0=ruleScenario4[true]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_22_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario4");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario2ParserRuleCall_1_9_1_1_0_0()); 
	    }
		lv_scenario_23_0=ruleScenario2[false]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_23_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario2");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_24=Keyword
    {
    	newLeafNode(otherlv_24, grammarAccess.getParserRuleParametersAccess().getKeywordKeyword_1_9_1_1_1());
    }
)?)))
    |(
	otherlv_25=NumberSignDigitOneDigitOne
    {
    	newLeafNode(otherlv_25, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitOneDigitOneKeyword_1_10_0());
    }
(((
(
ruleIdOrKeyword[false]
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario4ParserRuleCall_1_10_1_0_0()); 
	    }
		lv_scenario_26_0=ruleScenario4[false]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_26_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario4");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario2ParserRuleCall_1_10_1_1_0_0()); 
	    }
		lv_scenario_27_0=ruleScenario2[true]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_27_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario2");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_28=Keyword
    {
    	newLeafNode(otherlv_28, grammarAccess.getParserRuleParametersAccess().getKeywordKeyword_1_10_1_1_1());
    }
)?)))
    |(
	otherlv_29=NumberSignDigitOneDigitTwo
    {
    	newLeafNode(otherlv_29, grammarAccess.getParserRuleParametersAccess().getNumberSignDigitOneDigitTwoKeyword_1_11_0());
    }
(((
(
ruleIdOrKeyword[false]
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario4ParserRuleCall_1_11_1_0_0()); 
	    }
		lv_scenario_30_0=ruleScenario4[false]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_30_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario4");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleParametersAccess().getScenarioScenario2ParserRuleCall_1_11_1_1_0_0()); 
	    }
		lv_scenario_31_0=ruleScenario2[false]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleParametersRule());
	        }
       		set(
       			$current, 
       			"scenario",
        		lv_scenario_31_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.Scenario2");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_32=Keyword
    {
    	newLeafNode(otherlv_32, grammarAccess.getParserRuleParametersAccess().getKeywordKeyword_1_11_1_1_1());
    }
)?)))))
;





// Entry rule entryRuleScenario1
entryRuleScenario1 returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getScenario1Rule()); }
	 iv_ruleScenario1=ruleScenario1[false] 
	 { $current=$iv_ruleScenario1.current; } 
	 EOF 
;

// Rule Scenario1
ruleScenario1 [boolean p_Param] returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(({p_Param}?=>((
(
		lv_first_0_0=RULE_ID
		{
			newLeafNode(lv_first_0_0, grammarAccess.getScenario1Access().getFirstIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenario1Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"first",
        		lv_first_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
)
    |({!p_Param}?=>((
(
		lv_second_1_0=RULE_ID
		{
			newLeafNode(lv_second_1_0, grammarAccess.getScenario1Access().getSecondIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenario1Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"second",
        		lv_second_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
))
;





// Entry rule entryRuleScenario2
entryRuleScenario2 returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getScenario2Rule()); }
	 iv_ruleScenario2=ruleScenario2[false] 
	 { $current=$iv_ruleScenario2.current; } 
	 EOF 
;

// Rule Scenario2
ruleScenario2 [boolean p_AllowKeyword] returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenario2Access().getFirstIdOrKeywordParserRuleCall_0()); 
	    }
		lv_first_0_0=ruleIdOrKeyword[$ruleScenario2.p_AllowKeyword]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenario2Rule());
	        }
       		set(
       			$current, 
       			"first",
        		lv_first_0_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.IdOrKeyword");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleScenario3
entryRuleScenario3 returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getScenario3Rule()); }
	 iv_ruleScenario3=ruleScenario3[false] 
	 { $current=$iv_ruleScenario3.current; } 
	 EOF 
;

// Rule Scenario3
ruleScenario3 [boolean p_AllowKeyword] returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
ruleIdOrKeyword[$ruleScenario3.p_AllowKeyword]
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getScenario3Access().getFirstIdOrKeywordParserRuleCall_0_0()); 
	    }
		lv_first_0_0=ruleIdOrKeyword[$ruleScenario3.p_AllowKeyword]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenario3Rule());
	        }
       		set(
       			$current, 
       			"first",
        		lv_first_0_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.IdOrKeyword");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_second_1_0=
	Keyword
    {
        newLeafNode(lv_second_1_0, grammarAccess.getScenario3Access().getSecondKeywordKeyword_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenario3Rule());
	        }
       		setWithLastConsumed($current, "second", lv_second_1_0, "keyword");
	    }

)
))
;





// Entry rule entryRuleScenario4
entryRuleScenario4 returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getScenario4Rule()); }
	 iv_ruleScenario4=ruleScenario4[false] 
	 { $current=$iv_ruleScenario4.current; } 
	 EOF 
;

// Rule Scenario4
ruleScenario4 [boolean p_AllowKeyword] returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
ruleIdOrKeyword[$ruleScenario4.p_AllowKeyword]
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getScenario4Access().getSecondIdOrKeywordParserRuleCall_0_0()); 
	    }
		lv_second_0_0=ruleIdOrKeyword[$ruleScenario4.p_AllowKeyword]		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenario4Rule());
	        }
       		set(
       			$current, 
       			"second",
        		lv_second_0_0, 
        		"org.eclipse.xtext.parser.parameters.ParametersTestLanguage.IdOrKeyword");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=Keyword
    {
    	newLeafNode(otherlv_1, grammarAccess.getScenario4Access().getKeywordKeyword_1());
    }
)
;





// Entry rule entryRuleIdOrKeyword
entryRuleIdOrKeyword returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getIdOrKeywordRule()); } 
	 iv_ruleIdOrKeyword=ruleIdOrKeyword[false] 
	 { $current=$iv_ruleIdOrKeyword.current.getText(); }  
	 EOF 
;

// Rule IdOrKeyword
ruleIdOrKeyword [boolean p_Keyword] returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(({p_Keyword}?=>(
	kw=Keyword 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrKeywordAccess().getKeywordKeyword_0_0()); 
    }
)
)
    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getIdOrKeywordAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





