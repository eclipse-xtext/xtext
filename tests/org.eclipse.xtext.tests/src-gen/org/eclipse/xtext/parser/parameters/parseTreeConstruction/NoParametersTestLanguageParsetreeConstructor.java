/*
 * generated by Xtext
 */
package org.eclipse.xtext.parser.parameters.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;

import org.eclipse.xtext.parser.parameters.services.NoParametersTestLanguageGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class NoParametersTestLanguageParsetreeConstructor extends org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor {
		
	@Inject
	private NoParametersTestLanguageGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Group(this, this, 0, inst);
			case 1: return new Scenario1_True_FirstAssignment(this, this, 1, inst);
			case 2: return new Scenario1_False_SecondAssignment(this, this, 2, inst);
			case 3: return new Scenario2_True_FirstAssignment(this, this, 3, inst);
			case 4: return new Scenario2_False_FirstAssignment(this, this, 4, inst);
			case 5: return new Scenario3_True_Alternatives(this, this, 5, inst);
			case 6: return new Scenario3_False_Alternatives(this, this, 6, inst);
			case 7: return new Scenario4_True_Group(this, this, 7, inst);
			case 8: return new Scenario4_False_Group(this, this, 8, inst);
			case 9: return new Scenario1_Alternatives(this, this, 9, inst);
			case 10: return new Scenario2_FirstAssignment(this, this, 10, inst);
			case 11: return new Scenario3_Alternatives(this, this, 11, inst);
			case 12: return new Scenario4_Group(this, this, 12, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule ParserRuleParameters ****************
 *
 * ParserRuleParameters:
 * 	{ParserRuleParameters} ('#1' scenario=Scenario1_True
 * 	| '#2' scenario=Scenario1_False
 * 	| '#3' scenario=Scenario2_True
 * 	| '#4' scenario=Scenario2_False
 * 	| => ('#5' scenario=Scenario2_True) | => ('#6' scenario=Scenario2_False) | '#7' scenario=Scenario3_True
 * 	| '#8' scenario=Scenario3_False
 * 	| '#9' (scenario=Scenario4_True | scenario=Scenario2_True 'keyword'?) | '#10' (scenario=Scenario4_True |
 * 	scenario=Scenario2_False 'keyword'?) | '#11' (scenario=Scenario4_False | scenario=Scenario2_True 'keyword'?) | '#12'
 * 	(scenario=Scenario4_False | scenario=Scenario2_False 'keyword'?));
 *
 **/

// {ParserRuleParameters} ('#1' scenario=Scenario1_True | '#2' scenario=Scenario1_False | '#3' scenario=Scenario2_True |
// '#4' scenario=Scenario2_False | => ('#5' scenario=Scenario2_True) | => ('#6' scenario=Scenario2_False) | '#7'
// scenario=Scenario3_True | '#8' scenario=Scenario3_False | '#9' (scenario=Scenario4_True | scenario=Scenario2_True
// 'keyword'?) | '#10' (scenario=Scenario4_True | scenario=Scenario2_False 'keyword'?) | '#11' (scenario=Scenario4_False |
// scenario=Scenario2_True 'keyword'?) | '#12' (scenario=Scenario4_False | scenario=Scenario2_False 'keyword'?))
protected class ParserRuleParameters_Group extends GroupToken {
	
	public ParserRuleParameters_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParserRuleParametersAccess().getParserRuleParametersAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {ParserRuleParameters}
protected class ParserRuleParameters_ParserRuleParametersAction_0 extends ActionToken  {

	public ParserRuleParameters_ParserRuleParametersAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getParserRuleParametersAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ('#1' scenario=Scenario1_True | '#2' scenario=Scenario1_False | '#3' scenario=Scenario2_True | '#4'
// scenario=Scenario2_False | => ('#5' scenario=Scenario2_True) | => ('#6' scenario=Scenario2_False) | '#7'
// scenario=Scenario3_True | '#8' scenario=Scenario3_False | '#9' (scenario=Scenario4_True | scenario=Scenario2_True
// 'keyword'?) | '#10' (scenario=Scenario4_True | scenario=Scenario2_False 'keyword'?) | '#11' (scenario=Scenario4_False |
// scenario=Scenario2_True 'keyword'?) | '#12' (scenario=Scenario4_False | scenario=Scenario2_False 'keyword'?))
protected class ParserRuleParameters_Alternatives_1 extends AlternativesToken {

	public ParserRuleParameters_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParserRuleParameters_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ParserRuleParameters_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ParserRuleParameters_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ParserRuleParameters_Group_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ParserRuleParameters_Group_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ParserRuleParameters_Group_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ParserRuleParameters_Group_1_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new ParserRuleParameters_Group_1_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new ParserRuleParameters_Group_1_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new ParserRuleParameters_Group_1_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new ParserRuleParameters_Group_1_11(lastRuleCallOrigin, this, 11, inst);
			default: return null;
		}	
	}

}

// '#1' scenario=Scenario1_True
protected class ParserRuleParameters_Group_1_0 extends GroupToken {
	
	public ParserRuleParameters_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#1'
protected class ParserRuleParameters_NumberSignDigitOneKeyword_1_0_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitOneKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitOneKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario1_True
protected class ParserRuleParameters_ScenarioAssignment_1_0_1 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_True_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario1_TrueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario1_TrueParserRuleCall_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitOneKeyword_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// '#2' scenario=Scenario1_False
protected class ParserRuleParameters_Group_1_1 extends GroupToken {
	
	public ParserRuleParameters_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#2'
protected class ParserRuleParameters_NumberSignDigitTwoKeyword_1_1_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitTwoKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitTwoKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario1_False
protected class ParserRuleParameters_ScenarioAssignment_1_1_1 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_False_SecondAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario1_FalseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario1_FalseParserRuleCall_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitTwoKeyword_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// '#3' scenario=Scenario2_True
protected class ParserRuleParameters_Group_1_2 extends GroupToken {
	
	public ParserRuleParameters_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#3'
protected class ParserRuleParameters_NumberSignDigitThreeKeyword_1_2_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitThreeKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitThreeKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario2_True
protected class ParserRuleParameters_ScenarioAssignment_1_2_1 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_True_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_TrueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario2_TrueParserRuleCall_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitThreeKeyword_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// '#4' scenario=Scenario2_False
protected class ParserRuleParameters_Group_1_3 extends GroupToken {
	
	public ParserRuleParameters_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#4'
protected class ParserRuleParameters_NumberSignDigitFourKeyword_1_3_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitFourKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitFourKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario2_False
protected class ParserRuleParameters_ScenarioAssignment_1_3_1 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_False_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_FalseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario2_FalseParserRuleCall_1_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitFourKeyword_1_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// => ('#5' scenario=Scenario2_True)
protected class ParserRuleParameters_Group_1_4 extends GroupToken {
	
	public ParserRuleParameters_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Group_1_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ('#5' scenario=Scenario2_True)
protected class ParserRuleParameters_Group_1_4_0 extends GroupToken {
	
	public ParserRuleParameters_Group_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#5'
protected class ParserRuleParameters_NumberSignDigitFiveKeyword_1_4_0_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitFiveKeyword_1_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitFiveKeyword_1_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario2_True
protected class ParserRuleParameters_ScenarioAssignment_1_4_0_1 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_True_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_TrueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario2_TrueParserRuleCall_1_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitFiveKeyword_1_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// => ('#6' scenario=Scenario2_False)
protected class ParserRuleParameters_Group_1_5 extends GroupToken {
	
	public ParserRuleParameters_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Group_1_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ('#6' scenario=Scenario2_False)
protected class ParserRuleParameters_Group_1_5_0 extends GroupToken {
	
	public ParserRuleParameters_Group_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_5_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#6'
protected class ParserRuleParameters_NumberSignDigitSixKeyword_1_5_0_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitSixKeyword_1_5_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitSixKeyword_1_5_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario2_False
protected class ParserRuleParameters_ScenarioAssignment_1_5_0_1 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_5_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_5_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_False_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_FalseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario2_FalseParserRuleCall_1_5_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitSixKeyword_1_5_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// '#7' scenario=Scenario3_True
protected class ParserRuleParameters_Group_1_6 extends GroupToken {
	
	public ParserRuleParameters_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#7'
protected class ParserRuleParameters_NumberSignDigitSevenKeyword_1_6_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitSevenKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitSevenKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario3_True
protected class ParserRuleParameters_ScenarioAssignment_1_6_1 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario3_True_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario3_TrueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario3_TrueParserRuleCall_1_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitSevenKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// '#8' scenario=Scenario3_False
protected class ParserRuleParameters_Group_1_7 extends GroupToken {
	
	public ParserRuleParameters_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#8'
protected class ParserRuleParameters_NumberSignDigitEightKeyword_1_7_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitEightKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitEightKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario3_False
protected class ParserRuleParameters_ScenarioAssignment_1_7_1 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario3_False_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario3_FalseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario3_FalseParserRuleCall_1_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitEightKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// '#9' (scenario=Scenario4_True | scenario=Scenario2_True 'keyword'?)
protected class ParserRuleParameters_Group_1_8 extends GroupToken {
	
	public ParserRuleParameters_Group_1_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Alternatives_1_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#9'
protected class ParserRuleParameters_NumberSignDigitNineKeyword_1_8_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitNineKeyword_1_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitNineKeyword_1_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (scenario=Scenario4_True | scenario=Scenario2_True 'keyword'?)
protected class ParserRuleParameters_Alternatives_1_8_1 extends AlternativesToken {

	public ParserRuleParameters_Alternatives_1_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getAlternatives_1_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_8_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParserRuleParameters_Group_1_8_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario4_True
protected class ParserRuleParameters_ScenarioAssignment_1_8_1_0 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_True_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario4_TrueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario4_TrueParserRuleCall_1_8_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitNineKeyword_1_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// scenario=Scenario2_True 'keyword'?
protected class ParserRuleParameters_Group_1_8_1_1 extends GroupToken {
	
	public ParserRuleParameters_Group_1_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_8_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario2_True
protected class ParserRuleParameters_ScenarioAssignment_1_8_1_1_0 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_True_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_TrueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario2_TrueParserRuleCall_1_8_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitNineKeyword_1_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// '#10' (scenario=Scenario4_True | scenario=Scenario2_False 'keyword'?)
protected class ParserRuleParameters_Group_1_9 extends GroupToken {
	
	public ParserRuleParameters_Group_1_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Alternatives_1_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#10'
protected class ParserRuleParameters_NumberSignDigitOneDigitZeroKeyword_1_9_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitOneDigitZeroKeyword_1_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitOneDigitZeroKeyword_1_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (scenario=Scenario4_True | scenario=Scenario2_False 'keyword'?)
protected class ParserRuleParameters_Alternatives_1_9_1 extends AlternativesToken {

	public ParserRuleParameters_Alternatives_1_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getAlternatives_1_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_9_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParserRuleParameters_Group_1_9_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario4_True
protected class ParserRuleParameters_ScenarioAssignment_1_9_1_0 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_9_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_9_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_True_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario4_TrueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario4_TrueParserRuleCall_1_9_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitOneDigitZeroKeyword_1_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// scenario=Scenario2_False 'keyword'?
protected class ParserRuleParameters_Group_1_9_1_1 extends GroupToken {
	
	public ParserRuleParameters_Group_1_9_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_9_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_9_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario2_False
protected class ParserRuleParameters_ScenarioAssignment_1_9_1_1_0 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_9_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_9_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_False_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_FalseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario2_FalseParserRuleCall_1_9_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitOneDigitZeroKeyword_1_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// '#11' (scenario=Scenario4_False | scenario=Scenario2_True 'keyword'?)
protected class ParserRuleParameters_Group_1_10 extends GroupToken {
	
	public ParserRuleParameters_Group_1_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Alternatives_1_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#11'
protected class ParserRuleParameters_NumberSignDigitOneDigitOneKeyword_1_10_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitOneDigitOneKeyword_1_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitOneDigitOneKeyword_1_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (scenario=Scenario4_False | scenario=Scenario2_True 'keyword'?)
protected class ParserRuleParameters_Alternatives_1_10_1 extends AlternativesToken {

	public ParserRuleParameters_Alternatives_1_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getAlternatives_1_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_10_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParserRuleParameters_Group_1_10_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario4_False
protected class ParserRuleParameters_ScenarioAssignment_1_10_1_0 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_10_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_10_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_False_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario4_FalseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario4_FalseParserRuleCall_1_10_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitOneDigitOneKeyword_1_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// scenario=Scenario2_True 'keyword'?
protected class ParserRuleParameters_Group_1_10_1_1 extends GroupToken {
	
	public ParserRuleParameters_Group_1_10_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_10_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_10_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario2_True
protected class ParserRuleParameters_ScenarioAssignment_1_10_1_1_0 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_10_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_10_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_True_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_TrueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario2_TrueParserRuleCall_1_10_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitOneDigitOneKeyword_1_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




// '#12' (scenario=Scenario4_False | scenario=Scenario2_False 'keyword'?)
protected class ParserRuleParameters_Group_1_11 extends GroupToken {
	
	public ParserRuleParameters_Group_1_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_Alternatives_1_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#12'
protected class ParserRuleParameters_NumberSignDigitOneDigitTwoKeyword_1_11_0 extends KeywordToken  {
	
	public ParserRuleParameters_NumberSignDigitOneDigitTwoKeyword_1_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getNumberSignDigitOneDigitTwoKeyword_1_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ParserRuleParametersAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (scenario=Scenario4_False | scenario=Scenario2_False 'keyword'?)
protected class ParserRuleParameters_Alternatives_1_11_1 extends AlternativesToken {

	public ParserRuleParameters_Alternatives_1_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getAlternatives_1_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_11_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParserRuleParameters_Group_1_11_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario4_False
protected class ParserRuleParameters_ScenarioAssignment_1_11_1_0 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_11_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_11_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_False_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario4_FalseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario4_FalseParserRuleCall_1_11_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitOneDigitTwoKeyword_1_11_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// scenario=Scenario2_False 'keyword'?
protected class ParserRuleParameters_Group_1_11_1_1 extends GroupToken {
	
	public ParserRuleParameters_Group_1_11_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getGroup_1_11_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleParameters_ScenarioAssignment_1_11_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// scenario=Scenario2_False
protected class ParserRuleParameters_ScenarioAssignment_1_11_1_1_0 extends AssignmentToken  {
	
	public ParserRuleParameters_ScenarioAssignment_1_11_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_11_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_False_FirstAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scenario",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scenario");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_FalseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleParametersAccess().getScenarioScenario2_FalseParserRuleCall_1_11_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleParameters_NumberSignDigitOneDigitTwoKeyword_1_11_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}






/************ end Rule ParserRuleParameters ****************/


/************ begin Rule Scenario1_True ****************
 *
 * Scenario1_True Scenario:
 * 	first=ID
 *
 **/

// first=ID
protected class Scenario1_True_FirstAssignment extends AssignmentToken  {
	
	public Scenario1_True_FirstAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_TrueAccess().getFirstAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario1_TrueRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("first",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("first");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario1_TrueAccess().getFirstIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getScenario1_TrueAccess().getFirstIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule Scenario1_True ****************/


/************ begin Rule Scenario1_False ****************
 *
 * Scenario1_False Scenario:
 * 	second=ID
 *
 **/

// second=ID
protected class Scenario1_False_SecondAssignment extends AssignmentToken  {
	
	public Scenario1_False_SecondAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_FalseAccess().getSecondAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario1_FalseRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("second",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("second");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario1_FalseAccess().getSecondIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getScenario1_FalseAccess().getSecondIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule Scenario1_False ****************/


/************ begin Rule Scenario2_True ****************
 *
 * Scenario2_True Scenario:
 * 	first=IdOrKeyword_True
 *
 **/

// first=IdOrKeyword_True
protected class Scenario2_True_FirstAssignment extends AssignmentToken  {
	
	public Scenario2_True_FirstAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_TrueAccess().getFirstAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_TrueRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("first",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("first");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario2_TrueAccess().getFirstIdOrKeyword_TrueParserRuleCall_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario2_TrueAccess().getFirstIdOrKeyword_TrueParserRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule Scenario2_True ****************/


/************ begin Rule Scenario2_False ****************
 *
 * Scenario2_False Scenario:
 * 	first=IdOrKeyword_False
 *
 **/

// first=IdOrKeyword_False
protected class Scenario2_False_FirstAssignment extends AssignmentToken  {
	
	public Scenario2_False_FirstAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_FalseAccess().getFirstAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_FalseRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("first",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("first");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario2_FalseAccess().getFirstIdOrKeyword_FalseParserRuleCall_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario2_FalseAccess().getFirstIdOrKeyword_FalseParserRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule Scenario2_False ****************/


/************ begin Rule Scenario3_True ****************
 *
 * Scenario3_True Scenario:
 * 	=> first=IdOrKeyword_True
 * 	| second='keyword'
 *
 **/

// => first=IdOrKeyword_True | second='keyword'
protected class Scenario3_True_Alternatives extends AlternativesToken {

	public Scenario3_True_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario3_TrueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario3_True_FirstAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario3_True_SecondAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario3_TrueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// => first=IdOrKeyword_True
protected class Scenario3_True_FirstAssignment_0 extends AssignmentToken  {
	
	public Scenario3_True_FirstAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario3_TrueAccess().getFirstAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("first",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("first");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario3_TrueAccess().getFirstIdOrKeyword_TrueParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario3_TrueAccess().getFirstIdOrKeyword_TrueParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// second='keyword'
protected class Scenario3_True_SecondAssignment_1 extends AssignmentToken  {
	
	public Scenario3_True_SecondAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario3_TrueAccess().getSecondAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("second",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("second");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getScenario3_TrueAccess().getSecondKeywordKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getScenario3_TrueAccess().getSecondKeywordKeyword_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Scenario3_True ****************/


/************ begin Rule Scenario3_False ****************
 *
 * Scenario3_False Scenario:
 * 	=> first=IdOrKeyword_False
 * 	| second='keyword'
 *
 **/

// => first=IdOrKeyword_False | second='keyword'
protected class Scenario3_False_Alternatives extends AlternativesToken {

	public Scenario3_False_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario3_FalseAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario3_False_FirstAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario3_False_SecondAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario3_FalseRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// => first=IdOrKeyword_False
protected class Scenario3_False_FirstAssignment_0 extends AssignmentToken  {
	
	public Scenario3_False_FirstAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario3_FalseAccess().getFirstAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("first",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("first");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario3_FalseAccess().getFirstIdOrKeyword_FalseParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario3_FalseAccess().getFirstIdOrKeyword_FalseParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// second='keyword'
protected class Scenario3_False_SecondAssignment_1 extends AssignmentToken  {
	
	public Scenario3_False_SecondAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario3_FalseAccess().getSecondAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("second",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("second");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getScenario3_FalseAccess().getSecondKeywordKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getScenario3_FalseAccess().getSecondKeywordKeyword_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Scenario3_False ****************/


/************ begin Rule Scenario4_True ****************
 *
 * Scenario4_True Scenario:
 * 	=> second=IdOrKeyword_True 'keyword'
 *
 **/

// => second=IdOrKeyword_True 'keyword'
protected class Scenario4_True_Group extends GroupToken {
	
	public Scenario4_True_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario4_TrueAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_True_KeywordKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario4_TrueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// => second=IdOrKeyword_True
protected class Scenario4_True_SecondAssignment_0 extends AssignmentToken  {
	
	public Scenario4_True_SecondAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario4_TrueAccess().getSecondAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("second",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("second");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario4_TrueAccess().getSecondIdOrKeyword_TrueParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario4_TrueAccess().getSecondIdOrKeyword_TrueParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// 'keyword'
protected class Scenario4_True_KeywordKeyword_1 extends KeywordToken  {
	
	public Scenario4_True_KeywordKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario4_TrueAccess().getKeywordKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_True_SecondAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario4_True ****************/


/************ begin Rule Scenario4_False ****************
 *
 * Scenario4_False Scenario:
 * 	=> second=IdOrKeyword_False 'keyword'
 *
 **/

// => second=IdOrKeyword_False 'keyword'
protected class Scenario4_False_Group extends GroupToken {
	
	public Scenario4_False_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario4_FalseAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_False_KeywordKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario4_FalseRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// => second=IdOrKeyword_False
protected class Scenario4_False_SecondAssignment_0 extends AssignmentToken  {
	
	public Scenario4_False_SecondAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario4_FalseAccess().getSecondAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("second",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("second");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario4_FalseAccess().getSecondIdOrKeyword_FalseParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario4_FalseAccess().getSecondIdOrKeyword_FalseParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// 'keyword'
protected class Scenario4_False_KeywordKeyword_1 extends KeywordToken  {
	
	public Scenario4_False_KeywordKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario4_FalseAccess().getKeywordKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_False_SecondAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario4_False ****************/




/************ begin Rule Scenario1 ****************
 *
 * Scenario1 <Param Scenario:
 * 	<Param> first=ID
 * 	| <!Param> second=ID
 *
 **/

// <Param> first=ID | <!Param> second=ID
protected class Scenario1_Alternatives extends AlternativesToken {

	public Scenario1_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario1Access().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_Group_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario1_Group_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// <Param> first=ID
protected class Scenario1_Group_0 extends GroupToken {
	
	public Scenario1_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario1Access().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_FirstAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// first=ID
protected class Scenario1_FirstAssignment_0_0 extends AssignmentToken  {
	
	public Scenario1_FirstAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1Access().getFirstAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("first",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("first");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario1Access().getFirstIDTerminalRuleCall_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getScenario1Access().getFirstIDTerminalRuleCall_0_0_0();
			return obj;
		}
		return null;
	}

}


// <!Param> second=ID
protected class Scenario1_Group_1 extends GroupToken {
	
	public Scenario1_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario1Access().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_SecondAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// second=ID
protected class Scenario1_SecondAssignment_1_0 extends AssignmentToken  {
	
	public Scenario1_SecondAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1Access().getSecondAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("second",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("second");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario1Access().getSecondIDTerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getScenario1Access().getSecondIDTerminalRuleCall_1_0_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule Scenario1 ****************/


/************ begin Rule Scenario2 ****************
 *
 * Scenario2 <AllowKeyword Scenario:
 * 	first=IdOrKeyword<AllowKeyword>
 *
 **/

// first=IdOrKeyword<AllowKeyword>
protected class Scenario2_FirstAssignment extends AssignmentToken  {
	
	public Scenario2_FirstAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2Access().getFirstAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2Rule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("first",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("first");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario2Access().getFirstIdOrKeywordParserRuleCall_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario2Access().getFirstIdOrKeywordParserRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule Scenario2 ****************/


/************ begin Rule Scenario3 ****************
 *
 * Scenario3 <AllowKeyword Scenario:
 * 	=> first=IdOrKeyword<AllowKeyword> | second='keyword'
 *
 **/

// => first=IdOrKeyword<AllowKeyword> | second='keyword'
protected class Scenario3_Alternatives extends AlternativesToken {

	public Scenario3_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario3Access().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario3_FirstAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario3_SecondAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario3Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// => first=IdOrKeyword<AllowKeyword>
protected class Scenario3_FirstAssignment_0 extends AssignmentToken  {
	
	public Scenario3_FirstAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario3Access().getFirstAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("first",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("first");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario3Access().getFirstIdOrKeywordParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario3Access().getFirstIdOrKeywordParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// second='keyword'
protected class Scenario3_SecondAssignment_1 extends AssignmentToken  {
	
	public Scenario3_SecondAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario3Access().getSecondAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("second",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("second");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getScenario3Access().getSecondKeywordKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getScenario3Access().getSecondKeywordKeyword_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Scenario3 ****************/


/************ begin Rule Scenario4 ****************
 *
 * Scenario4 <AllowKeyword Scenario:
 * 	=> second=IdOrKeyword<AllowKeyword> 'keyword'
 *
 **/

// => second=IdOrKeyword<AllowKeyword> 'keyword'
protected class Scenario4_Group extends GroupToken {
	
	public Scenario4_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario4Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_KeywordKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario4Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// => second=IdOrKeyword<AllowKeyword>
protected class Scenario4_SecondAssignment_0 extends AssignmentToken  {
	
	public Scenario4_SecondAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario4Access().getSecondAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("second",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("second");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getScenario4Access().getSecondIdOrKeywordParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getScenario4Access().getSecondIdOrKeywordParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// 'keyword'
protected class Scenario4_KeywordKeyword_1 extends KeywordToken  {
	
	public Scenario4_KeywordKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario4Access().getKeywordKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario4_SecondAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario4 ****************/


}
