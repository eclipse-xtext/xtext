/*
* generated by Xtext
*/
package org.eclipse.xtext.ui.tests.editor.contentassist.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;

import org.eclipse.xtext.ui.tests.editor.contentassist.services.Bug348427TestLanguageGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class Bug348427TestLanguageParsetreeConstructor extends org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor {
		
	@Inject
	private Bug348427TestLanguageGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Alternatives(this, this, 0, inst);
			case 1: return new Scenario1_1_Group(this, this, 1, inst);
			case 2: return new Scenario1_2_Group(this, this, 2, inst);
			case 3: return new Scenario1_3_Group(this, this, 3, inst);
			case 4: return new Scenario1_4_Group(this, this, 4, inst);
			case 5: return new Child1_1_Group(this, this, 5, inst);
			case 6: return new Child1_2_Group(this, this, 6, inst);
			case 7: return new Child1_3_Group(this, this, 7, inst);
			case 8: return new Scenario2_1_Group(this, this, 8, inst);
			case 9: return new Scenario2_2_Group(this, this, 9, inst);
			case 10: return new Scenario2_3_Group(this, this, 10, inst);
			case 11: return new Scenario2_4_Group(this, this, 11, inst);
			case 12: return new Scenario2_5_Group(this, this, 12, inst);
			case 13: return new Scenario2_6_Group(this, this, 13, inst);
			case 14: return new Scenario2_7_Group(this, this, 14, inst);
			case 15: return new Scenario2_8_Group(this, this, 15, inst);
			case 16: return new Child2_1_Group(this, this, 16, inst);
			case 17: return new Child2_2_Group(this, this, 17, inst);
			case 18: return new Child2_3_Group(this, this, 18, inst);
			case 19: return new Child2_4_Group(this, this, 19, inst);
			case 20: return new Child2_5_Group(this, this, 20, inst);
			case 21: return new Child2_6_Group(this, this, 21, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Model ****************
 *
 * Model:
 * 	element1=Scenario1_1 | element1=Scenario1_2 | element1=Scenario1_3 | element1=Scenario1_4 | element2=Scenario2_1 |
 * 	element2=Scenario2_2 | element2=Scenario2_3 | element2=Scenario2_4 | element2=Scenario2_5 | element2=Scenario2_6 |
 * 	element2=Scenario2_7 | element2=Scenario2_8;
 *
 **/

// element1=Scenario1_1 | element1=Scenario1_2 | element1=Scenario1_3 | element1=Scenario1_4 | element2=Scenario2_1 |
// element2=Scenario2_2 | element2=Scenario2_3 | element2=Scenario2_4 | element2=Scenario2_5 | element2=Scenario2_6 |
// element2=Scenario2_7 | element2=Scenario2_8
protected class Model_Alternatives extends AlternativesToken {

	public Model_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getModelAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Element1Assignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_Element1Assignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Model_Element1Assignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Model_Element1Assignment_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Model_Element2Assignment_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Model_Element2Assignment_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Model_Element2Assignment_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Model_Element2Assignment_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Model_Element2Assignment_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Model_Element2Assignment_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Model_Element2Assignment_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new Model_Element2Assignment_11(lastRuleCallOrigin, this, 11, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// element1=Scenario1_1
protected class Model_Element1Assignment_0 extends AssignmentToken  {
	
	public Model_Element1Assignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement1Assignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element1");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario1_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement1Scenario1_1ParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element1=Scenario1_2
protected class Model_Element1Assignment_1 extends AssignmentToken  {
	
	public Model_Element1Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement1Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element1");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario1_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement1Scenario1_2ParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element1=Scenario1_3
protected class Model_Element1Assignment_2 extends AssignmentToken  {
	
	public Model_Element1Assignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement1Assignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element1");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario1_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement1Scenario1_3ParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element1=Scenario1_4
protected class Model_Element1Assignment_3 extends AssignmentToken  {
	
	public Model_Element1Assignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement1Assignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_4_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element1");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario1_4Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement1Scenario1_4ParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element2=Scenario2_1
protected class Model_Element2Assignment_4 extends AssignmentToken  {
	
	public Model_Element2Assignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement2Assignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement2Scenario2_1ParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element2=Scenario2_2
protected class Model_Element2Assignment_5 extends AssignmentToken  {
	
	public Model_Element2Assignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement2Assignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement2Scenario2_2ParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element2=Scenario2_3
protected class Model_Element2Assignment_6 extends AssignmentToken  {
	
	public Model_Element2Assignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement2Assignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement2Scenario2_3ParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element2=Scenario2_4
protected class Model_Element2Assignment_7 extends AssignmentToken  {
	
	public Model_Element2Assignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement2Assignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_4_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_4Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement2Scenario2_4ParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element2=Scenario2_5
protected class Model_Element2Assignment_8 extends AssignmentToken  {
	
	public Model_Element2Assignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement2Assignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_5_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_5Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement2Scenario2_5ParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element2=Scenario2_6
protected class Model_Element2Assignment_9 extends AssignmentToken  {
	
	public Model_Element2Assignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement2Assignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_6_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_6Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement2Scenario2_6ParserRuleCall_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element2=Scenario2_7
protected class Model_Element2Assignment_10 extends AssignmentToken  {
	
	public Model_Element2Assignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement2Assignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_7_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_7Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement2Scenario2_7ParserRuleCall_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// element2=Scenario2_8
protected class Model_Element2Assignment_11 extends AssignmentToken  {
	
	public Model_Element2Assignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getElement2Assignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_8_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getScenario2_8Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getElement2Scenario2_8ParserRuleCall_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}


/************ end Rule Model ****************/


/************ begin Rule Scenario1_1 ****************
 *
 * Scenario1_1 returns Scenario1:
 * 	"1.1" (child+=Child1_1 | child+=Child1_2 | child+=Child1_3) "next";
 *
 **/

// "1.1" (child+=Child1_1 | child+=Child1_2 | child+=Child1_3) "next"
protected class Scenario1_1_Group extends GroupToken {
	
	public Scenario1_1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario1_1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_1_NextKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario1_1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "1.1"
protected class Scenario1_1_DigitOneFullStopDigitOneKeyword_0 extends KeywordToken  {
	
	public Scenario1_1_DigitOneFullStopDigitOneKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario1_1Access().getDigitOneFullStopDigitOneKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// child+=Child1_1 | child+=Child1_2 | child+=Child1_3
protected class Scenario1_1_Alternatives_1 extends AlternativesToken {

	public Scenario1_1_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario1_1Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_1_ChildAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario1_1_ChildAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario1_1_ChildAssignment_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child1_1
protected class Scenario1_1_ChildAssignment_1_0 extends AssignmentToken  {
	
	public Scenario1_1_ChildAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_1Access().getChildAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_1Access().getChildChild1_1ParserRuleCall_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_1_DigitOneFullStopDigitOneKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child1_2
protected class Scenario1_1_ChildAssignment_1_1 extends AssignmentToken  {
	
	public Scenario1_1_ChildAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_1Access().getChildAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_1Access().getChildChild1_2ParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_1_DigitOneFullStopDigitOneKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child1_3
protected class Scenario1_1_ChildAssignment_1_2 extends AssignmentToken  {
	
	public Scenario1_1_ChildAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_1Access().getChildAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_1Access().getChildChild1_3ParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_1_DigitOneFullStopDigitOneKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario1_1_NextKeyword_2 extends KeywordToken  {
	
	public Scenario1_1_NextKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario1_1Access().getNextKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_1_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario1_1 ****************/


/************ begin Rule Scenario1_2 ****************
 *
 * Scenario1_2 returns Scenario1:
 * 	"1.2" (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)+ "next";
 *
 **/

// "1.2" (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)+ "next"
protected class Scenario1_2_Group extends GroupToken {
	
	public Scenario1_2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario1_2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_2_NextKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario1_2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "1.2"
protected class Scenario1_2_DigitOneFullStopDigitTwoKeyword_0 extends KeywordToken  {
	
	public Scenario1_2_DigitOneFullStopDigitTwoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario1_2Access().getDigitOneFullStopDigitTwoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)+
protected class Scenario1_2_Alternatives_1 extends AlternativesToken {

	public Scenario1_2_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario1_2Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_2_ChildAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario1_2_ChildAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario1_2_ChildAssignment_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child1_1
protected class Scenario1_2_ChildAssignment_1_0 extends AssignmentToken  {
	
	public Scenario1_2_ChildAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_2Access().getChildAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_2Access().getChildChild1_1ParserRuleCall_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_2_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario1_2_DigitOneFullStopDigitTwoKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child1_2
protected class Scenario1_2_ChildAssignment_1_1 extends AssignmentToken  {
	
	public Scenario1_2_ChildAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_2Access().getChildAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_2Access().getChildChild1_2ParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_2_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario1_2_DigitOneFullStopDigitTwoKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child1_3
protected class Scenario1_2_ChildAssignment_1_2 extends AssignmentToken  {
	
	public Scenario1_2_ChildAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_2Access().getChildAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_2Access().getChildChild1_3ParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_2_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario1_2_DigitOneFullStopDigitTwoKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario1_2_NextKeyword_2 extends KeywordToken  {
	
	public Scenario1_2_NextKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario1_2Access().getNextKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_2_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario1_2 ****************/


/************ begin Rule Scenario1_3 ****************
 *
 * Scenario1_3 returns Scenario1:
 * 	{Scenario1} "1.3" (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)* "next";
 *
 **/

// {Scenario1} "1.3" (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)* "next"
protected class Scenario1_3_Group extends GroupToken {
	
	public Scenario1_3_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario1_3Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_3_NextKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario1_3Access().getScenario1Action_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Scenario1}
protected class Scenario1_3_Scenario1Action_0 extends ActionToken  {

	public Scenario1_3_Scenario1Action_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getScenario1_3Access().getScenario1Action_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "1.3"
protected class Scenario1_3_DigitOneFullStopDigitThreeKeyword_1 extends KeywordToken  {
	
	public Scenario1_3_DigitOneFullStopDigitThreeKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario1_3Access().getDigitOneFullStopDigitThreeKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_3_Scenario1Action_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)*
protected class Scenario1_3_Alternatives_2 extends AlternativesToken {

	public Scenario1_3_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario1_3Access().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_3_ChildAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario1_3_ChildAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario1_3_ChildAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child1_1
protected class Scenario1_3_ChildAssignment_2_0 extends AssignmentToken  {
	
	public Scenario1_3_ChildAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_3Access().getChildAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_3Access().getChildChild1_1ParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_3_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario1_3_DigitOneFullStopDigitThreeKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child1_2
protected class Scenario1_3_ChildAssignment_2_1 extends AssignmentToken  {
	
	public Scenario1_3_ChildAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_3Access().getChildAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_3Access().getChildChild1_2ParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_3_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario1_3_DigitOneFullStopDigitThreeKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child1_3
protected class Scenario1_3_ChildAssignment_2_2 extends AssignmentToken  {
	
	public Scenario1_3_ChildAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_3Access().getChildAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_3Access().getChildChild1_3ParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_3_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario1_3_DigitOneFullStopDigitThreeKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario1_3_NextKeyword_3 extends KeywordToken  {
	
	public Scenario1_3_NextKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario1_3Access().getNextKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_3_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario1_3_DigitOneFullStopDigitThreeKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario1_3 ****************/


/************ begin Rule Scenario1_4 ****************
 *
 * Scenario1_4 returns Scenario1:
 * 	{Scenario1} "1.4" (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)? "next";
 *
 **/

// {Scenario1} "1.4" (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)? "next"
protected class Scenario1_4_Group extends GroupToken {
	
	public Scenario1_4_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario1_4Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_4_NextKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario1_4Access().getScenario1Action_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Scenario1}
protected class Scenario1_4_Scenario1Action_0 extends ActionToken  {

	public Scenario1_4_Scenario1Action_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getScenario1_4Access().getScenario1Action_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "1.4"
protected class Scenario1_4_DigitOneFullStopDigitFourKeyword_1 extends KeywordToken  {
	
	public Scenario1_4_DigitOneFullStopDigitFourKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario1_4Access().getDigitOneFullStopDigitFourKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_4_Scenario1Action_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (child+=Child1_1 | child+=Child1_2 | child+=Child1_3)?
protected class Scenario1_4_Alternatives_2 extends AlternativesToken {

	public Scenario1_4_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario1_4Access().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_4_ChildAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario1_4_ChildAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario1_4_ChildAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child1_1
protected class Scenario1_4_ChildAssignment_2_0 extends AssignmentToken  {
	
	public Scenario1_4_ChildAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_4Access().getChildAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_4Access().getChildChild1_1ParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_4_DigitOneFullStopDigitFourKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child1_2
protected class Scenario1_4_ChildAssignment_2_1 extends AssignmentToken  {
	
	public Scenario1_4_ChildAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_4Access().getChildAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_4Access().getChildChild1_2ParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_4_DigitOneFullStopDigitFourKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child1_3
protected class Scenario1_4_ChildAssignment_2_2 extends AssignmentToken  {
	
	public Scenario1_4_ChildAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario1_4Access().getChildAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild1_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario1_4Access().getChildChild1_3ParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario1_4_DigitOneFullStopDigitFourKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario1_4_NextKeyword_3 extends KeywordToken  {
	
	public Scenario1_4_NextKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario1_4Access().getNextKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario1_4_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario1_4_DigitOneFullStopDigitFourKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario1_4 ****************/


/************ begin Rule Child1_1 ****************
 *
 * Child1_1 returns Child1:
 * 	name=ID ":" (bool?="bool" "keyword")? enumType= // this is not ok
 * 	EnumType "child1" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? enumType= // this is not ok
// EnumType "child1" "end"
protected class Child1_1_Group extends GroupToken {
	
	public Child1_1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild1_1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild1_1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child1_1_NameAssignment_0 extends AssignmentToken  {
	
	public Child1_1_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_1Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild1_1Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild1_1Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child1_1_ColonKeyword_1 extends KeywordToken  {
	
	public Child1_1_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_1Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child1_1_Group_2 extends GroupToken {
	
	public Child1_1_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild1_1Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child1_1_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child1_1_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_1Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild1_1Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child1_1_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child1_1_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_1Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// enumType= // this is not ok
// EnumType
protected class Child1_1_EnumTypeAssignment_3 extends AssignmentToken  {
	
	public Child1_1_EnumTypeAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_1Access().getEnumTypeAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child1_1_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("enumType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumType");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getChild1_1Access().getEnumTypeEnumTypeEnumRuleCall_3_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getChild1_1Access().getEnumTypeEnumTypeEnumRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// "child1"
protected class Child1_1_Child1Keyword_4 extends KeywordToken  {
	
	public Child1_1_Child1Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_1Access().getChild1Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_EnumTypeAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child1_1_EndKeyword_5 extends KeywordToken  {
	
	public Child1_1_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_1Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_1_Child1Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child1_1 ****************/


/************ begin Rule Child1_2 ****************
 *
 * Child1_2 returns Child1:
 * 	name=ID ":" (bool?="bool" "keyword")? enumType= // this is not ok
 * 	EnumType "child2" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? enumType= // this is not ok
// EnumType "child2" "end"
protected class Child1_2_Group extends GroupToken {
	
	public Child1_2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild1_2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild1_2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child1_2_NameAssignment_0 extends AssignmentToken  {
	
	public Child1_2_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_2Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild1_2Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild1_2Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child1_2_ColonKeyword_1 extends KeywordToken  {
	
	public Child1_2_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_2Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child1_2_Group_2 extends GroupToken {
	
	public Child1_2_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild1_2Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child1_2_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child1_2_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_2Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild1_2Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child1_2_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child1_2_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_2Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// enumType= // this is not ok
// EnumType
protected class Child1_2_EnumTypeAssignment_3 extends AssignmentToken  {
	
	public Child1_2_EnumTypeAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_2Access().getEnumTypeAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child1_2_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("enumType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumType");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getChild1_2Access().getEnumTypeEnumTypeEnumRuleCall_3_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getChild1_2Access().getEnumTypeEnumTypeEnumRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// "child2"
protected class Child1_2_Child2Keyword_4 extends KeywordToken  {
	
	public Child1_2_Child2Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_2Access().getChild2Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_EnumTypeAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child1_2_EndKeyword_5 extends KeywordToken  {
	
	public Child1_2_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_2Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_2_Child2Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child1_2 ****************/


/************ begin Rule Child1_3 ****************
 *
 * Child1_3 returns Child1:
 * 	name=ID ":" (bool?="bool" "keyword")? enumType= // this is not ok
 * 	EnumType "child3" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? enumType= // this is not ok
// EnumType "child3" "end"
protected class Child1_3_Group extends GroupToken {
	
	public Child1_3_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild1_3Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild1_3Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child1_3_NameAssignment_0 extends AssignmentToken  {
	
	public Child1_3_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_3Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild1_3Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild1_3Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child1_3_ColonKeyword_1 extends KeywordToken  {
	
	public Child1_3_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_3Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child1_3_Group_2 extends GroupToken {
	
	public Child1_3_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild1_3Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child1_3_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child1_3_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_3Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild1_3Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child1_3_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child1_3_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_3Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// enumType= // this is not ok
// EnumType
protected class Child1_3_EnumTypeAssignment_3 extends AssignmentToken  {
	
	public Child1_3_EnumTypeAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild1_3Access().getEnumTypeAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child1_3_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("enumType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("enumType");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getChild1_3Access().getEnumTypeEnumTypeEnumRuleCall_3_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getChild1_3Access().getEnumTypeEnumTypeEnumRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// "child3"
protected class Child1_3_Child3Keyword_4 extends KeywordToken  {
	
	public Child1_3_Child3Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_3Access().getChild3Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_EnumTypeAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child1_3_EndKeyword_5 extends KeywordToken  {
	
	public Child1_3_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild1_3Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child1_3_Child3Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child1_3 ****************/


/************ begin Rule Scenario2_1 ****************
 *
 * Scenario2_1 returns Scenario2:
 * 	"2.1" (child+=Child2_1 | child+=Child2_2 | child+=Child2_3) "next";
 *
 **/

// "2.1" (child+=Child2_1 | child+=Child2_2 | child+=Child2_3) "next"
protected class Scenario2_1_Group extends GroupToken {
	
	public Scenario2_1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario2_1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_1_NextKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "2.1"
protected class Scenario2_1_DigitTwoFullStopDigitOneKeyword_0 extends KeywordToken  {
	
	public Scenario2_1_DigitTwoFullStopDigitOneKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_1Access().getDigitTwoFullStopDigitOneKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// child+=Child2_1 | child+=Child2_2 | child+=Child2_3
protected class Scenario2_1_Alternatives_1 extends AlternativesToken {

	public Scenario2_1_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario2_1Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_1_ChildAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_1_ChildAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario2_1_ChildAssignment_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child2_1
protected class Scenario2_1_ChildAssignment_1_0 extends AssignmentToken  {
	
	public Scenario2_1_ChildAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_1Access().getChildAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_1Access().getChildChild2_1ParserRuleCall_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_1_DigitTwoFullStopDigitOneKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_2
protected class Scenario2_1_ChildAssignment_1_1 extends AssignmentToken  {
	
	public Scenario2_1_ChildAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_1Access().getChildAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_1Access().getChildChild2_2ParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_1_DigitTwoFullStopDigitOneKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_3
protected class Scenario2_1_ChildAssignment_1_2 extends AssignmentToken  {
	
	public Scenario2_1_ChildAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_1Access().getChildAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_1Access().getChildChild2_3ParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_1_DigitTwoFullStopDigitOneKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario2_1_NextKeyword_2 extends KeywordToken  {
	
	public Scenario2_1_NextKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_1Access().getNextKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_1_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario2_1 ****************/


/************ begin Rule Scenario2_2 ****************
 *
 * Scenario2_2 returns Scenario2:
 * 	"2.2" (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)+ "next";
 *
 **/

// "2.2" (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)+ "next"
protected class Scenario2_2_Group extends GroupToken {
	
	public Scenario2_2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario2_2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_2_NextKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "2.2"
protected class Scenario2_2_DigitTwoFullStopDigitTwoKeyword_0 extends KeywordToken  {
	
	public Scenario2_2_DigitTwoFullStopDigitTwoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_2Access().getDigitTwoFullStopDigitTwoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)+
protected class Scenario2_2_Alternatives_1 extends AlternativesToken {

	public Scenario2_2_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario2_2Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_2_ChildAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_2_ChildAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario2_2_ChildAssignment_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child2_1
protected class Scenario2_2_ChildAssignment_1_0 extends AssignmentToken  {
	
	public Scenario2_2_ChildAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_2Access().getChildAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_2Access().getChildChild2_1ParserRuleCall_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_2_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_2_DigitTwoFullStopDigitTwoKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_2
protected class Scenario2_2_ChildAssignment_1_1 extends AssignmentToken  {
	
	public Scenario2_2_ChildAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_2Access().getChildAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_2Access().getChildChild2_2ParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_2_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_2_DigitTwoFullStopDigitTwoKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_3
protected class Scenario2_2_ChildAssignment_1_2 extends AssignmentToken  {
	
	public Scenario2_2_ChildAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_2Access().getChildAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_2Access().getChildChild2_3ParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_2_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_2_DigitTwoFullStopDigitTwoKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario2_2_NextKeyword_2 extends KeywordToken  {
	
	public Scenario2_2_NextKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_2Access().getNextKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_2_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario2_2 ****************/


/************ begin Rule Scenario2_3 ****************
 *
 * Scenario2_3 returns Scenario2:
 * 	"2.3" (child+=Child2_4 | child+=Child2_5 | child+=Child2_6) "next";
 *
 **/

// "2.3" (child+=Child2_4 | child+=Child2_5 | child+=Child2_6) "next"
protected class Scenario2_3_Group extends GroupToken {
	
	public Scenario2_3_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario2_3Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_3_NextKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_3Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "2.3"
protected class Scenario2_3_DigitTwoFullStopDigitThreeKeyword_0 extends KeywordToken  {
	
	public Scenario2_3_DigitTwoFullStopDigitThreeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_3Access().getDigitTwoFullStopDigitThreeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// child+=Child2_4 | child+=Child2_5 | child+=Child2_6
protected class Scenario2_3_Alternatives_1 extends AlternativesToken {

	public Scenario2_3_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario2_3Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_3_ChildAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_3_ChildAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario2_3_ChildAssignment_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child2_4
protected class Scenario2_3_ChildAssignment_1_0 extends AssignmentToken  {
	
	public Scenario2_3_ChildAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_3Access().getChildAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_4Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_3Access().getChildChild2_4ParserRuleCall_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_3_DigitTwoFullStopDigitThreeKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_5
protected class Scenario2_3_ChildAssignment_1_1 extends AssignmentToken  {
	
	public Scenario2_3_ChildAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_3Access().getChildAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_5Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_3Access().getChildChild2_5ParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_3_DigitTwoFullStopDigitThreeKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_6
protected class Scenario2_3_ChildAssignment_1_2 extends AssignmentToken  {
	
	public Scenario2_3_ChildAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_3Access().getChildAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_6Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_3Access().getChildChild2_6ParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_3_DigitTwoFullStopDigitThreeKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario2_3_NextKeyword_2 extends KeywordToken  {
	
	public Scenario2_3_NextKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_3Access().getNextKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_3_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario2_3 ****************/


/************ begin Rule Scenario2_4 ****************
 *
 * Scenario2_4 returns Scenario2:
 * 	"2.4" (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)+ "next";
 *
 **/

// "2.4" (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)+ "next"
protected class Scenario2_4_Group extends GroupToken {
	
	public Scenario2_4_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario2_4Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_4_NextKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_4Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "2.4"
protected class Scenario2_4_DigitTwoFullStopDigitFourKeyword_0 extends KeywordToken  {
	
	public Scenario2_4_DigitTwoFullStopDigitFourKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_4Access().getDigitTwoFullStopDigitFourKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)+
protected class Scenario2_4_Alternatives_1 extends AlternativesToken {

	public Scenario2_4_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario2_4Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_4_ChildAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_4_ChildAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario2_4_ChildAssignment_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child2_4
protected class Scenario2_4_ChildAssignment_1_0 extends AssignmentToken  {
	
	public Scenario2_4_ChildAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_4Access().getChildAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_4Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_4Access().getChildChild2_4ParserRuleCall_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_4_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_4_DigitTwoFullStopDigitFourKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_5
protected class Scenario2_4_ChildAssignment_1_1 extends AssignmentToken  {
	
	public Scenario2_4_ChildAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_4Access().getChildAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_5Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_4Access().getChildChild2_5ParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_4_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_4_DigitTwoFullStopDigitFourKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_6
protected class Scenario2_4_ChildAssignment_1_2 extends AssignmentToken  {
	
	public Scenario2_4_ChildAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_4Access().getChildAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_6Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_4Access().getChildChild2_6ParserRuleCall_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_4_Alternatives_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_4_DigitTwoFullStopDigitFourKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario2_4_NextKeyword_2 extends KeywordToken  {
	
	public Scenario2_4_NextKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_4Access().getNextKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_4_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario2_4 ****************/


/************ begin Rule Scenario2_5 ****************
 *
 * Scenario2_5 returns Scenario2:
 * 	{Scenario2} "2.5" (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)? "next";
 *
 **/

// {Scenario2} "2.5" (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)? "next"
protected class Scenario2_5_Group extends GroupToken {
	
	public Scenario2_5_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario2_5Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_5_NextKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_5Access().getScenario2Action_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Scenario2}
protected class Scenario2_5_Scenario2Action_0 extends ActionToken  {

	public Scenario2_5_Scenario2Action_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getScenario2_5Access().getScenario2Action_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "2.5"
protected class Scenario2_5_DigitTwoFullStopDigitFiveKeyword_1 extends KeywordToken  {
	
	public Scenario2_5_DigitTwoFullStopDigitFiveKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_5Access().getDigitTwoFullStopDigitFiveKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_5_Scenario2Action_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)?
protected class Scenario2_5_Alternatives_2 extends AlternativesToken {

	public Scenario2_5_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario2_5Access().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_5_ChildAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_5_ChildAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario2_5_ChildAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child2_1
protected class Scenario2_5_ChildAssignment_2_0 extends AssignmentToken  {
	
	public Scenario2_5_ChildAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_5Access().getChildAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_5Access().getChildChild2_1ParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_5_DigitTwoFullStopDigitFiveKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_2
protected class Scenario2_5_ChildAssignment_2_1 extends AssignmentToken  {
	
	public Scenario2_5_ChildAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_5Access().getChildAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_5Access().getChildChild2_2ParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_5_DigitTwoFullStopDigitFiveKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_3
protected class Scenario2_5_ChildAssignment_2_2 extends AssignmentToken  {
	
	public Scenario2_5_ChildAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_5Access().getChildAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_5Access().getChildChild2_3ParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_5_DigitTwoFullStopDigitFiveKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario2_5_NextKeyword_3 extends KeywordToken  {
	
	public Scenario2_5_NextKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_5Access().getNextKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_5_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_5_DigitTwoFullStopDigitFiveKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario2_5 ****************/


/************ begin Rule Scenario2_6 ****************
 *
 * Scenario2_6 returns Scenario2:
 * 	{Scenario2} "2.6" (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)* "next";
 *
 **/

// {Scenario2} "2.6" (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)* "next"
protected class Scenario2_6_Group extends GroupToken {
	
	public Scenario2_6_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario2_6Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_6_NextKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_6Access().getScenario2Action_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Scenario2}
protected class Scenario2_6_Scenario2Action_0 extends ActionToken  {

	public Scenario2_6_Scenario2Action_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getScenario2_6Access().getScenario2Action_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "2.6"
protected class Scenario2_6_DigitTwoFullStopDigitSixKeyword_1 extends KeywordToken  {
	
	public Scenario2_6_DigitTwoFullStopDigitSixKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_6Access().getDigitTwoFullStopDigitSixKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_6_Scenario2Action_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (child+=Child2_1 | child+=Child2_2 | child+=Child2_3)*
protected class Scenario2_6_Alternatives_2 extends AlternativesToken {

	public Scenario2_6_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario2_6Access().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_6_ChildAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_6_ChildAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario2_6_ChildAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child2_1
protected class Scenario2_6_ChildAssignment_2_0 extends AssignmentToken  {
	
	public Scenario2_6_ChildAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_6Access().getChildAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_6Access().getChildChild2_1ParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_6_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_6_DigitTwoFullStopDigitSixKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_2
protected class Scenario2_6_ChildAssignment_2_1 extends AssignmentToken  {
	
	public Scenario2_6_ChildAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_6Access().getChildAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_6Access().getChildChild2_2ParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_6_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_6_DigitTwoFullStopDigitSixKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_3
protected class Scenario2_6_ChildAssignment_2_2 extends AssignmentToken  {
	
	public Scenario2_6_ChildAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_6Access().getChildAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_6Access().getChildChild2_3ParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_6_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_6_DigitTwoFullStopDigitSixKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario2_6_NextKeyword_3 extends KeywordToken  {
	
	public Scenario2_6_NextKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_6Access().getNextKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_6_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_6_DigitTwoFullStopDigitSixKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario2_6 ****************/


/************ begin Rule Scenario2_7 ****************
 *
 * Scenario2_7 returns Scenario2:
 * 	{Scenario2} "2.7" (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)? "next";
 *
 **/

// {Scenario2} "2.7" (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)? "next"
protected class Scenario2_7_Group extends GroupToken {
	
	public Scenario2_7_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario2_7Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_7_NextKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_7Access().getScenario2Action_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Scenario2}
protected class Scenario2_7_Scenario2Action_0 extends ActionToken  {

	public Scenario2_7_Scenario2Action_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getScenario2_7Access().getScenario2Action_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "2.7"
protected class Scenario2_7_DigitTwoFullStopDigitSevenKeyword_1 extends KeywordToken  {
	
	public Scenario2_7_DigitTwoFullStopDigitSevenKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_7Access().getDigitTwoFullStopDigitSevenKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_7_Scenario2Action_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)?
protected class Scenario2_7_Alternatives_2 extends AlternativesToken {

	public Scenario2_7_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario2_7Access().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_7_ChildAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_7_ChildAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario2_7_ChildAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child2_4
protected class Scenario2_7_ChildAssignment_2_0 extends AssignmentToken  {
	
	public Scenario2_7_ChildAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_7Access().getChildAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_4Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_7Access().getChildChild2_4ParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_7_DigitTwoFullStopDigitSevenKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_5
protected class Scenario2_7_ChildAssignment_2_1 extends AssignmentToken  {
	
	public Scenario2_7_ChildAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_7Access().getChildAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_5Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_7Access().getChildChild2_5ParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_7_DigitTwoFullStopDigitSevenKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_6
protected class Scenario2_7_ChildAssignment_2_2 extends AssignmentToken  {
	
	public Scenario2_7_ChildAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_7Access().getChildAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_6Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_7Access().getChildChild2_6ParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_7_DigitTwoFullStopDigitSevenKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario2_7_NextKeyword_3 extends KeywordToken  {
	
	public Scenario2_7_NextKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_7Access().getNextKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_7_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_7_DigitTwoFullStopDigitSevenKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario2_7 ****************/


/************ begin Rule Scenario2_8 ****************
 *
 * Scenario2_8 returns Scenario2:
 * 	{Scenario2} "2.8" (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)* "next";
 *
 **/

// {Scenario2} "2.8" (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)* "next"
protected class Scenario2_8_Group extends GroupToken {
	
	public Scenario2_8_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getScenario2_8Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_8_NextKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getScenario2_8Access().getScenario2Action_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Scenario2}
protected class Scenario2_8_Scenario2Action_0 extends ActionToken  {

	public Scenario2_8_Scenario2Action_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getScenario2_8Access().getScenario2Action_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "2.8"
protected class Scenario2_8_DigitTwoFullStopDigitEightKeyword_1 extends KeywordToken  {
	
	public Scenario2_8_DigitTwoFullStopDigitEightKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_8Access().getDigitTwoFullStopDigitEightKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_8_Scenario2Action_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (child+=Child2_4 | child+=Child2_5 | child+=Child2_6)*
protected class Scenario2_8_Alternatives_2 extends AlternativesToken {

	public Scenario2_8_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getScenario2_8Access().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_8_ChildAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_8_ChildAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Scenario2_8_ChildAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// child+=Child2_4
protected class Scenario2_8_ChildAssignment_2_0 extends AssignmentToken  {
	
	public Scenario2_8_ChildAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_8Access().getChildAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_4Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_8Access().getChildChild2_4ParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_8_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_8_DigitTwoFullStopDigitEightKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_5
protected class Scenario2_8_ChildAssignment_2_1 extends AssignmentToken  {
	
	public Scenario2_8_ChildAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_8Access().getChildAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_5Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_8Access().getChildChild2_5ParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_8_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_8_DigitTwoFullStopDigitEightKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// child+=Child2_6
protected class Scenario2_8_ChildAssignment_2_2 extends AssignmentToken  {
	
	public Scenario2_8_ChildAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getScenario2_8Access().getChildAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getChild2_6Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getScenario2_8Access().getChildChild2_6ParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Scenario2_8_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Scenario2_8_DigitTwoFullStopDigitEightKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "next"
protected class Scenario2_8_NextKeyword_3 extends KeywordToken  {
	
	public Scenario2_8_NextKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getScenario2_8Access().getNextKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Scenario2_8_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Scenario2_8_DigitTwoFullStopDigitEightKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Scenario2_8 ****************/


/************ begin Rule Child2_1 ****************
 *
 * Child2_1 returns Child2:
 * 	name=ID ":" (bool?="bool" "keyword")? string=("a" | "b") "child1" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? string=("a" | "b") "child1" "end"
protected class Child2_1_Group extends GroupToken {
	
	public Child2_1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild2_1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child2_1_NameAssignment_0 extends AssignmentToken  {
	
	public Child2_1_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_1Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_1Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild2_1Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child2_1_ColonKeyword_1 extends KeywordToken  {
	
	public Child2_1_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_1Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child2_1_Group_2 extends GroupToken {
	
	public Child2_1_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_1Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child2_1_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child2_1_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_1Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_1Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child2_1_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child2_1_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_1Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// string=("a" | "b")
protected class Child2_1_StringAssignment_3 extends AssignmentToken  {
	
	public Child2_1_StringAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_1Access().getStringAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_1_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_1Access().getStringAKeyword_3_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_1Access().getStringAKeyword_3_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_1Access().getStringBKeyword_3_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_1Access().getStringBKeyword_3_0_1();
			return obj;
		}
		return null;
	}

}

// "child1"
protected class Child2_1_Child1Keyword_4 extends KeywordToken  {
	
	public Child2_1_Child1Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_1Access().getChild1Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_StringAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child2_1_EndKeyword_5 extends KeywordToken  {
	
	public Child2_1_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_1Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_1_Child1Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child2_1 ****************/


/************ begin Rule Child2_2 ****************
 *
 * Child2_2 returns Child2:
 * 	name=ID ":" (bool?="bool" "keyword")? string=("a" | "b") "child2" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? string=("a" | "b") "child2" "end"
protected class Child2_2_Group extends GroupToken {
	
	public Child2_2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild2_2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child2_2_NameAssignment_0 extends AssignmentToken  {
	
	public Child2_2_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_2Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_2Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild2_2Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child2_2_ColonKeyword_1 extends KeywordToken  {
	
	public Child2_2_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_2Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child2_2_Group_2 extends GroupToken {
	
	public Child2_2_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_2Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child2_2_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child2_2_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_2Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_2Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child2_2_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child2_2_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_2Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// string=("a" | "b")
protected class Child2_2_StringAssignment_3 extends AssignmentToken  {
	
	public Child2_2_StringAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_2Access().getStringAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_2_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_2Access().getStringAKeyword_3_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_2Access().getStringAKeyword_3_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_2Access().getStringBKeyword_3_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_2Access().getStringBKeyword_3_0_1();
			return obj;
		}
		return null;
	}

}

// "child2"
protected class Child2_2_Child2Keyword_4 extends KeywordToken  {
	
	public Child2_2_Child2Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_2Access().getChild2Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_StringAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child2_2_EndKeyword_5 extends KeywordToken  {
	
	public Child2_2_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_2Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_2_Child2Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child2_2 ****************/


/************ begin Rule Child2_3 ****************
 *
 * Child2_3 returns Child2:
 * 	name=ID ":" (bool?="bool" "keyword")? string=("a" | "b") "child3" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? string=("a" | "b") "child3" "end"
protected class Child2_3_Group extends GroupToken {
	
	public Child2_3_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_3Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild2_3Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child2_3_NameAssignment_0 extends AssignmentToken  {
	
	public Child2_3_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_3Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_3Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild2_3Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child2_3_ColonKeyword_1 extends KeywordToken  {
	
	public Child2_3_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_3Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child2_3_Group_2 extends GroupToken {
	
	public Child2_3_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_3Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child2_3_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child2_3_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_3Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_3Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child2_3_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child2_3_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_3Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// string=("a" | "b")
protected class Child2_3_StringAssignment_3 extends AssignmentToken  {
	
	public Child2_3_StringAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_3Access().getStringAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_3_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_3Access().getStringAKeyword_3_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_3Access().getStringAKeyword_3_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_3Access().getStringBKeyword_3_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_3Access().getStringBKeyword_3_0_1();
			return obj;
		}
		return null;
	}

}

// "child3"
protected class Child2_3_Child3Keyword_4 extends KeywordToken  {
	
	public Child2_3_Child3Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_3Access().getChild3Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_StringAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child2_3_EndKeyword_5 extends KeywordToken  {
	
	public Child2_3_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_3Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_3_Child3Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child2_3 ****************/


/************ begin Rule Child2_4 ****************
 *
 * Child2_4 returns Child2:
 * 	name=ID ":" (bool?="bool" "keyword")? (string="a" | string="b") "child1" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? (string="a" | string="b") "child1" "end"
protected class Child2_4_Group extends GroupToken {
	
	public Child2_4_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_4Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild2_4Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child2_4_NameAssignment_0 extends AssignmentToken  {
	
	public Child2_4_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_4Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_4Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild2_4Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child2_4_ColonKeyword_1 extends KeywordToken  {
	
	public Child2_4_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_4Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child2_4_Group_2 extends GroupToken {
	
	public Child2_4_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_4Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child2_4_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child2_4_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_4Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_4Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child2_4_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child2_4_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_4Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// string="a" | string="b"
protected class Child2_4_Alternatives_3 extends AlternativesToken {

	public Child2_4_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getChild2_4Access().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_StringAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_4_StringAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// string="a"
protected class Child2_4_StringAssignment_3_0 extends AssignmentToken  {
	
	public Child2_4_StringAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_4Access().getStringAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_4_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_4Access().getStringAKeyword_3_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_4Access().getStringAKeyword_3_0_0();
			return obj;
		}
		return null;
	}

}

// string="b"
protected class Child2_4_StringAssignment_3_1 extends AssignmentToken  {
	
	public Child2_4_StringAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_4Access().getStringAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_4_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_4Access().getStringBKeyword_3_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_4Access().getStringBKeyword_3_1_0();
			return obj;
		}
		return null;
	}

}


// "child1"
protected class Child2_4_Child1Keyword_4 extends KeywordToken  {
	
	public Child2_4_Child1Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_4Access().getChild1Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child2_4_EndKeyword_5 extends KeywordToken  {
	
	public Child2_4_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_4Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_4_Child1Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child2_4 ****************/


/************ begin Rule Child2_5 ****************
 *
 * Child2_5 returns Child2:
 * 	name=ID ":" (bool?="bool" "keyword")? (string="a" | string="b") "child2" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? (string="a" | string="b") "child2" "end"
protected class Child2_5_Group extends GroupToken {
	
	public Child2_5_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_5Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild2_5Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child2_5_NameAssignment_0 extends AssignmentToken  {
	
	public Child2_5_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_5Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_5Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild2_5Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child2_5_ColonKeyword_1 extends KeywordToken  {
	
	public Child2_5_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_5Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child2_5_Group_2 extends GroupToken {
	
	public Child2_5_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_5Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child2_5_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child2_5_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_5Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_5Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child2_5_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child2_5_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_5Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// string="a" | string="b"
protected class Child2_5_Alternatives_3 extends AlternativesToken {

	public Child2_5_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getChild2_5Access().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_StringAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_5_StringAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// string="a"
protected class Child2_5_StringAssignment_3_0 extends AssignmentToken  {
	
	public Child2_5_StringAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_5Access().getStringAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_5_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_5Access().getStringAKeyword_3_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_5Access().getStringAKeyword_3_0_0();
			return obj;
		}
		return null;
	}

}

// string="b"
protected class Child2_5_StringAssignment_3_1 extends AssignmentToken  {
	
	public Child2_5_StringAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_5Access().getStringAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_5_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_5Access().getStringBKeyword_3_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_5Access().getStringBKeyword_3_1_0();
			return obj;
		}
		return null;
	}

}


// "child2"
protected class Child2_5_Child2Keyword_4 extends KeywordToken  {
	
	public Child2_5_Child2Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_5Access().getChild2Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child2_5_EndKeyword_5 extends KeywordToken  {
	
	public Child2_5_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_5Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_5_Child2Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child2_5 ****************/


/************ begin Rule Child2_6 ****************
 *
 * Child2_6 returns Child2:
 * 	name=ID ":" (bool?="bool" "keyword")? (string="a" | string="b") "child3" "end";
 *
 **/

// name=ID ":" (bool?="bool" "keyword")? (string="a" | string="b") "child3" "end"
protected class Child2_6_Group extends GroupToken {
	
	public Child2_6_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_6Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_EndKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChild2_6Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Child2_6_NameAssignment_0 extends AssignmentToken  {
	
	public Child2_6_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_6Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_6Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChild2_6Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class Child2_6_ColonKeyword_1 extends KeywordToken  {
	
	public Child2_6_ColonKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_6Access().getColonKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (bool?="bool" "keyword")?
protected class Child2_6_Group_2 extends GroupToken {
	
	public Child2_6_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChild2_6Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_KeywordKeyword_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bool?="bool"
protected class Child2_6_BoolAssignment_2_0 extends AssignmentToken  {
	
	public Child2_6_BoolAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_6Access().getBoolAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_ColonKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_6Access().getBoolBoolKeyword_2_0_0();
			return obj;
		}
		return null;
	}

}

// "keyword"
protected class Child2_6_KeywordKeyword_2_1 extends KeywordToken  {
	
	public Child2_6_KeywordKeyword_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_6Access().getKeywordKeyword_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_BoolAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// string="a" | string="b"
protected class Child2_6_Alternatives_3 extends AlternativesToken {

	public Child2_6_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getChild2_6Access().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_StringAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_6_StringAssignment_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// string="a"
protected class Child2_6_StringAssignment_3_0 extends AssignmentToken  {
	
	public Child2_6_StringAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_6Access().getStringAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_6_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_6Access().getStringAKeyword_3_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_6Access().getStringAKeyword_3_0_0();
			return obj;
		}
		return null;
	}

}

// string="b"
protected class Child2_6_StringAssignment_3_1 extends AssignmentToken  {
	
	public Child2_6_StringAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChild2_6Access().getStringAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Child2_6_ColonKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("string",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("string");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getChild2_6Access().getStringBKeyword_3_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getChild2_6Access().getStringBKeyword_3_1_0();
			return obj;
		}
		return null;
	}

}


// "child3"
protected class Child2_6_Child3Keyword_4 extends KeywordToken  {
	
	public Child2_6_Child3Keyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_6Access().getChild3Keyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "end"
protected class Child2_6_EndKeyword_5 extends KeywordToken  {
	
	public Child2_6_EndKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChild2_6Access().getEndKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Child2_6_Child3Keyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Child2_6 ****************/

}
