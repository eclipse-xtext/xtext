/*
 * generated by Xtext
 */
package org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.xtext.ui.tests.editor.contentassist.services.TwoParametersTestLanguageGrammarAccess;

public class TwoParametersTestLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private TwoParametersTestLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalTwoParametersTestLanguageParser createParser() {
		org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalTwoParametersTestLanguageParser result = new org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalTwoParametersTestLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getParserRuleParametersAccess().getAlternatives_1(), "rule__ParserRuleParameters__Alternatives_1");
					put(grammarAccess.getParserRuleParametersAccess().getAlternatives_1_8_1(), "rule__ParserRuleParameters__Alternatives_1_8_1");
					put(grammarAccess.getParserRuleParametersAccess().getAlternatives_1_9_1(), "rule__ParserRuleParameters__Alternatives_1_9_1");
					put(grammarAccess.getParserRuleParametersAccess().getAlternatives_1_10_1(), "rule__ParserRuleParameters__Alternatives_1_10_1");
					put(grammarAccess.getParserRuleParametersAccess().getAlternatives_1_11_1(), "rule__ParserRuleParameters__Alternatives_1_11_1");
					put(grammarAccess.getScenario6Access().getAlternatives(), "rule__Scenario6__Alternatives");
					put(grammarAccess.getScenario8Access().getAlternatives(), "rule__Scenario8__Alternatives");
					put(grammarAccess.getScenario10Access().getAlternatives(), "rule__Scenario10__Alternatives");
					put(grammarAccess.getIdOrKeyword2Access().getAlternatives(), "rule__IdOrKeyword2__Alternatives");
					put(grammarAccess.getScenario1Access().getAlternatives(), "rule__Scenario1__Alternatives");
					put(grammarAccess.getScenario3Access().getAlternatives(), "rule__Scenario3__Alternatives");
					put(grammarAccess.getScenario5Access().getAlternatives(), "rule__Scenario5__Alternatives");
					put(grammarAccess.getIdOrKeywordAccess().getAlternatives(), "rule__IdOrKeyword__Alternatives");
					put(grammarAccess.getParserRuleParametersAccess().getGroup(), "rule__ParserRuleParameters__Group__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_0(), "rule__ParserRuleParameters__Group_1_0__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_1(), "rule__ParserRuleParameters__Group_1_1__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_2(), "rule__ParserRuleParameters__Group_1_2__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_3(), "rule__ParserRuleParameters__Group_1_3__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_4(), "rule__ParserRuleParameters__Group_1_4__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_4_0(), "rule__ParserRuleParameters__Group_1_4_0__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_5(), "rule__ParserRuleParameters__Group_1_5__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_5_0(), "rule__ParserRuleParameters__Group_1_5_0__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_6(), "rule__ParserRuleParameters__Group_1_6__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_7(), "rule__ParserRuleParameters__Group_1_7__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_8(), "rule__ParserRuleParameters__Group_1_8__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_8_1_1(), "rule__ParserRuleParameters__Group_1_8_1_1__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_9(), "rule__ParserRuleParameters__Group_1_9__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_9_1_1(), "rule__ParserRuleParameters__Group_1_9_1_1__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_10(), "rule__ParserRuleParameters__Group_1_10__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_10_1_1(), "rule__ParserRuleParameters__Group_1_10_1_1__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_11(), "rule__ParserRuleParameters__Group_1_11__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_11_1_1(), "rule__ParserRuleParameters__Group_1_11_1_1__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_12(), "rule__ParserRuleParameters__Group_1_12__0");
					put(grammarAccess.getParserRuleParametersAccess().getGroup_1_13(), "rule__ParserRuleParameters__Group_1_13__0");
					put(grammarAccess.getScenario6Access().getGroup_0(), "rule__Scenario6__Group_0__0");
					put(grammarAccess.getScenario6Access().getGroup_1(), "rule__Scenario6__Group_1__0");
					put(grammarAccess.getScenario9Access().getGroup(), "rule__Scenario9__Group__0");
					put(grammarAccess.getScenario10Access().getGroup_0(), "rule__Scenario10__Group_0__0");
					put(grammarAccess.getScenario10Access().getGroup_1(), "rule__Scenario10__Group_1__0");
					put(grammarAccess.getScenario10Access().getGroup_2(), "rule__Scenario10__Group_2__0");
					put(grammarAccess.getScenario10Access().getGroup_2_2(), "rule__Scenario10__Group_2_2__0");
					put(grammarAccess.getIdOrKeyword2Access().getGroup_0(), "rule__IdOrKeyword2__Group_0__0");
					put(grammarAccess.getScenario1Access().getGroup_0(), "rule__Scenario1__Group_0__0");
					put(grammarAccess.getScenario1Access().getGroup_1(), "rule__Scenario1__Group_1__0");
					put(grammarAccess.getScenario4Access().getGroup(), "rule__Scenario4__Group__0");
					put(grammarAccess.getScenario5Access().getGroup_0(), "rule__Scenario5__Group_0__0");
					put(grammarAccess.getScenario5Access().getGroup_1(), "rule__Scenario5__Group_1__0");
					put(grammarAccess.getScenario5Access().getGroup_2(), "rule__Scenario5__Group_2__0");
					put(grammarAccess.getScenario5Access().getGroup_2_2(), "rule__Scenario5__Group_2_2__0");
					put(grammarAccess.getIdOrKeywordAccess().getGroup_0(), "rule__IdOrKeyword__Group_0__0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_0_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_0_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_1_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_1_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_2_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_2_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_3_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_3_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_4_0_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_4_0_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_5_0_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_5_0_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_6_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_6_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_7_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_7_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_8_1_0(), "rule__ParserRuleParameters__ScenarioAssignment_1_8_1_0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_8_1_1_0(), "rule__ParserRuleParameters__ScenarioAssignment_1_8_1_1_0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_9_1_0(), "rule__ParserRuleParameters__ScenarioAssignment_1_9_1_0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_9_1_1_0(), "rule__ParserRuleParameters__ScenarioAssignment_1_9_1_1_0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_10_1_0(), "rule__ParserRuleParameters__ScenarioAssignment_1_10_1_0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_10_1_1_0(), "rule__ParserRuleParameters__ScenarioAssignment_1_10_1_1_0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_11_1_0(), "rule__ParserRuleParameters__ScenarioAssignment_1_11_1_0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_11_1_1_0(), "rule__ParserRuleParameters__ScenarioAssignment_1_11_1_1_0");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_12_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_12_1");
					put(grammarAccess.getParserRuleParametersAccess().getScenarioAssignment_1_13_1(), "rule__ParserRuleParameters__ScenarioAssignment_1_13_1");
					put(grammarAccess.getScenario6Access().getFirstAssignment_0_0(), "rule__Scenario6__FirstAssignment_0_0");
					put(grammarAccess.getScenario6Access().getSecondAssignment_1_0(), "rule__Scenario6__SecondAssignment_1_0");
					put(grammarAccess.getScenario7Access().getFirstAssignment(), "rule__Scenario7__FirstAssignment");
					put(grammarAccess.getScenario8Access().getFirstAssignment_0(), "rule__Scenario8__FirstAssignment_0");
					put(grammarAccess.getScenario8Access().getSecondAssignment_1(), "rule__Scenario8__SecondAssignment_1");
					put(grammarAccess.getScenario9Access().getSecondAssignment_0(), "rule__Scenario9__SecondAssignment_0");
					put(grammarAccess.getScenario10Access().getFirstAssignment_2_3(), "rule__Scenario10__FirstAssignment_2_3");
					put(grammarAccess.getScenario10Access().getSecondAssignment_2_4(), "rule__Scenario10__SecondAssignment_2_4");
					put(grammarAccess.getScenario1Access().getFirstAssignment_0_0(), "rule__Scenario1__FirstAssignment_0_0");
					put(grammarAccess.getScenario1Access().getSecondAssignment_1_0(), "rule__Scenario1__SecondAssignment_1_0");
					put(grammarAccess.getScenario2Access().getFirstAssignment(), "rule__Scenario2__FirstAssignment");
					put(grammarAccess.getScenario3Access().getFirstAssignment_0(), "rule__Scenario3__FirstAssignment_0");
					put(grammarAccess.getScenario3Access().getSecondAssignment_1(), "rule__Scenario3__SecondAssignment_1");
					put(grammarAccess.getScenario4Access().getSecondAssignment_0(), "rule__Scenario4__SecondAssignment_0");
					put(grammarAccess.getScenario5Access().getFirstAssignment_2_3(), "rule__Scenario5__FirstAssignment_2_3");
					put(grammarAccess.getScenario5Access().getSecondAssignment_2_4(), "rule__Scenario5__SecondAssignment_2_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalTwoParametersTestLanguageParser typedParser = (org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalTwoParametersTestLanguageParser) parser;
			typedParser.entryRuleParserRuleParameters();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TwoParametersTestLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TwoParametersTestLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
