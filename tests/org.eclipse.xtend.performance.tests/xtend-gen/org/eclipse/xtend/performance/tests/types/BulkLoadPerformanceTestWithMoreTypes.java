/**
 * Copyright (c) 2013 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package org.eclipse.xtend.performance.tests.types;

import com.google.common.annotations.Beta;
import com.google.common.annotations.GwtCompatible;
import com.google.common.annotations.GwtIncompatible;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableList.Builder;
import com.google.common.collect.Iterables;
import com.google.inject.Inject;
import java.awt.Container;
import java.io.Serializable;
import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;
import java.lang.reflect.AnnotatedElement;
import java.lang.reflect.GenericDeclaration;
import java.lang.reflect.Type;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.AbstractCollection;
import java.util.AbstractList;
import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.NavigableMap;
import java.util.RandomAccess;
import java.util.SortedMap;
import java.util.TreeMap;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JSplitPane;
import javax.swing.JTextField;
import org.apache.log4j.Category;
import org.apache.log4j.Logger;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.notify.impl.BasicNotifierImpl;
import org.eclipse.emf.common.notify.impl.NotifierImpl;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.impl.ResourceImpl;
import org.eclipse.emf.mwe.core.WorkflowComponent;
import org.eclipse.emf.mwe.core.WorkflowComponentWithID;
import org.eclipse.emf.mwe.core.lib.AbstractWorkflowComponent;
import org.eclipse.emf.mwe.core.lib.AbstractWorkflowComponent2;
import org.eclipse.emf.mwe.utils.DirectoryCleaner;
import org.eclipse.emf.mwe.utils.StandaloneSetup;
import org.eclipse.emf.mwe2.runtime.IFactory;
import org.eclipse.emf.mwe2.runtime.workflow.AbstractCompositeWorkflowComponent;
import org.eclipse.emf.mwe2.runtime.workflow.IWorkflow;
import org.eclipse.emf.mwe2.runtime.workflow.IWorkflowComponent;
import org.eclipse.emf.mwe2.runtime.workflow.Workflow;
import org.eclipse.jdt.annotation.NonNull;
import org.eclipse.jdt.annotation.Nullable;
import org.eclipse.xtend.lib.Data;
import org.eclipse.xtend.lib.Property;
import org.eclipse.xtend.performance.tests.types.BulkLoadPerformanceTest;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.AbstractRule;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.common.types.JvmAnnotationTarget;
import org.eclipse.xtext.common.types.JvmComponentType;
import org.eclipse.xtext.common.types.JvmConstraintOwner;
import org.eclipse.xtext.common.types.JvmFormalParameter;
import org.eclipse.xtext.common.types.JvmGenericArrayTypeReference;
import org.eclipse.xtext.common.types.JvmIdentifiableElement;
import org.eclipse.xtext.common.types.JvmParameterizedTypeReference;
import org.eclipse.xtext.common.types.JvmSpecializedTypeReference;
import org.eclipse.xtext.common.types.JvmType;
import org.eclipse.xtext.common.types.JvmTypeConstraint;
import org.eclipse.xtext.common.types.JvmTypeParameter;
import org.eclipse.xtext.common.types.JvmTypeReference;
import org.eclipse.xtext.common.types.JvmWildcardTypeReference;
import org.eclipse.xtext.common.types.TypesPackage;
import org.eclipse.xtext.nodemodel.BidiIterable;
import org.eclipse.xtext.nodemodel.BidiTreeIterable;
import org.eclipse.xtext.nodemodel.ICompositeNode;
import org.eclipse.xtext.nodemodel.ILeafNode;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.nodemodel.util.NodeModelUtils;
import org.eclipse.xtext.parser.IParseResult;
import org.eclipse.xtext.parsetree.reconstr.impl.NodeIterator;
import org.eclipse.xtext.preferences.PreferenceKey;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.resource.XtextResourceSet;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.xbase.XAbstractFeatureCall;
import org.eclipse.xtext.xbase.XAbstractWhileExpression;
import org.eclipse.xtext.xbase.XAssignment;
import org.eclipse.xtext.xbase.XBinaryOperation;
import org.eclipse.xtext.xbase.XBlockExpression;
import org.eclipse.xtext.xbase.XCasePart;
import org.eclipse.xtext.xbase.XCatchClause;
import org.eclipse.xtext.xbase.XClosure;
import org.eclipse.xtext.xbase.XCollectionLiteral;
import org.eclipse.xtext.xbase.XConstructorCall;
import org.eclipse.xtext.xbase.XDoWhileExpression;
import org.eclipse.xtext.xbase.XExpression;
import org.eclipse.xtext.xbase.XFeatureCall;
import org.eclipse.xtext.xbase.XForLoopExpression;
import org.eclipse.xtext.xbase.XIfExpression;
import org.eclipse.xtext.xbase.XMemberFeatureCall;
import org.eclipse.xtext.xbase.XReturnExpression;
import org.eclipse.xtext.xbase.XSwitchExpression;
import org.eclipse.xtext.xbase.XThrowExpression;
import org.eclipse.xtext.xbase.XTryCatchFinallyExpression;
import org.eclipse.xtext.xbase.XTypeLiteral;
import org.eclipse.xtext.xbase.XVariableDeclaration;
import org.eclipse.xtext.xbase.XWhileExpression;
import org.eclipse.xtext.xbase.XbasePackage;
import org.eclipse.xtext.xbase.annotations.xAnnotations.XAnnotation;
import org.eclipse.xtext.xbase.annotations.xAnnotations.XAnnotationElementValuePair;
import org.eclipse.xtext.xbase.formatting.AbstractFormatter;
import org.eclipse.xtext.xbase.formatting.FormattingPreferenceValues;
import org.eclipse.xtext.xbase.formatting.IBasicFormatter;
import org.eclipse.xtext.xbase.lib.ArrayExtensions;
import org.eclipse.xtext.xbase.lib.ArrayLiterals;
import org.eclipse.xtext.xbase.lib.BigDecimalExtensions;
import org.eclipse.xtext.xbase.lib.BigIntegerExtensions;
import org.eclipse.xtext.xbase.lib.BooleanExtensions;
import org.eclipse.xtext.xbase.lib.ByteExtensions;
import org.eclipse.xtext.xbase.lib.CharacterExtensions;
import org.eclipse.xtext.xbase.lib.CollectionExtensions;
import org.eclipse.xtext.xbase.lib.CollectionLiterals;
import org.eclipse.xtext.xbase.lib.ComparableExtensions;
import org.eclipse.xtext.xbase.lib.DoubleExtensions;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.FloatExtensions;
import org.eclipse.xtext.xbase.lib.FunctionExtensions;
import org.eclipse.xtext.xbase.lib.Functions;
import org.eclipse.xtext.xbase.lib.Inline;
import org.eclipse.xtext.xbase.lib.InputOutput;
import org.eclipse.xtext.xbase.lib.IntegerExtensions;
import org.eclipse.xtext.xbase.lib.IntegerRange;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.eclipse.xtext.xbase.lib.ListExtensions;
import org.eclipse.xtext.xbase.lib.LongExtensions;
import org.eclipse.xtext.xbase.lib.MapExtensions;
import org.eclipse.xtext.xbase.lib.ObjectExtensions;
import org.eclipse.xtext.xbase.lib.Pair;
import org.eclipse.xtext.xbase.lib.ProcedureExtensions;
import org.eclipse.xtext.xbase.lib.Procedures;
import org.eclipse.xtext.xbase.lib.Pure;
import org.eclipse.xtext.xbase.lib.ShortExtensions;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import org.eclipse.xtext.xbase.lib.util.ToStringHelper;
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xtype.XFunctionTypeRef;

/**
 * @author Sebastian Zarnekow - Initial contribution and API
 */
@SuppressWarnings("all")
public class BulkLoadPerformanceTestWithMoreTypes extends BulkLoadPerformanceTest {
  protected List<Class<? extends Object>> getTypesToLoad() {
    final List<Class<?>> result = CollectionLiterals.<Class<? extends Object>>newArrayList();
    List<? extends Class<? extends Container>> _xlistliteral = null;
    Builder<Class<? extends Container>> _builder = ImmutableList.builder();
    _builder.add(JButton.class);
    _builder.add(JTextField.class);
    _builder.add(JFrame.class);
    _builder.add(JSpinner.class);
    _builder.add(JSplitPane.class);
    _builder.add(JPanel.class);
    _builder.add(JCheckBox.class);
    _xlistliteral = _builder.build();
    Iterables.<Class<? extends Object>>addAll(result, _xlistliteral);
    return result;
  }
  
  protected List<Class<? extends Object>> getMoreTypesToLoad() {
    final List<Class<?>> result = CollectionLiterals.<Class<? extends Object>>newArrayList();
    List<? extends Class<? extends Object>> _xlistliteral = null;
    Builder<Class<? extends Object>> _builder = ImmutableList.builder();
    _builder.add(Beta.class);
    _builder.add(GwtCompatible.class);
    _builder.add(GwtIncompatible.class);
    _builder.add(Inject.class);
    _builder.add(Serializable.class);
    _builder.add(Appendable.class);
    _builder.add(Boolean.class);
    _builder.add(Byte.class);
    _builder.add(CharSequence.class);
    _builder.add(Character.class);
    _builder.add(Class.class);
    _builder.add(Cloneable.class);
    _builder.add(Comparable.class);
    _builder.add(Double.class);
    _builder.add(Exception.class);
    _builder.add(Float.class);
    _builder.add(IllegalStateException.class);
    _builder.add(Integer.class);
    _builder.add(Iterable.class);
    _builder.add(Long.class);
    _builder.add(Math.class);
    _builder.add(Number.class);
    _builder.add(Object.class);
    _builder.add(Override.class);
    _builder.add(RuntimeException.class);
    _builder.add(Short.class);
    _builder.add(StackTraceElement.class);
    _builder.add(String.class);
    _builder.add(StringBuffer.class);
    _builder.add(StringBuilder.class);
    _builder.add(SuppressWarnings.class);
    _builder.add(Throwable.class);
    _builder.add(Void.class);
    _builder.add(Documented.class);
    _builder.add(ElementType.class);
    _builder.add(Retention.class);
    _builder.add(Target.class);
    _builder.add(AnnotatedElement.class);
    _builder.add(GenericDeclaration.class);
    _builder.add(Type.class);
    _builder.add(BigDecimal.class);
    _builder.add(BigInteger.class);
    _builder.add(AbstractCollection.class);
    _builder.add(AbstractList.class);
    _builder.add(AbstractMap.class);
    _builder.add(ArrayList.class);
    _builder.add(Collection.class);
    _builder.add(Comparator.class);
    _builder.add(Iterator.class);
    _builder.add(List.class);
    _builder.add(Map.class);
    _builder.add(NavigableMap.class);
    _builder.add(RandomAccess.class);
    _builder.add(SortedMap.class);
    _builder.add(TreeMap.class);
    _builder.add(Category.class);
    _builder.add(Logger.class);
    _builder.add(Notifier.class);
    _builder.add(BasicNotifierImpl.class);
    _builder.add(NotifierImpl.class);
    _builder.add(EList.class);
    _builder.add(TreeIterator.class);
    _builder.add(EAttribute.class);
    _builder.add(EObject.class);
    _builder.add(EReference.class);
    _builder.add(EStructuralFeature.class);
    _builder.add(Resource.class);
    _builder.add(ResourceImpl.class);
    _builder.add(WorkflowComponent.class);
    _builder.add(WorkflowComponentWithID.class);
    _builder.add(AbstractWorkflowComponent.class);
    _builder.add(AbstractWorkflowComponent2.class);
    _builder.add(DirectoryCleaner.class);
    _builder.add(StandaloneSetup.class);
    _builder.add(IFactory.class);
    _builder.add(AbstractCompositeWorkflowComponent.class);
    _builder.add(IWorkflow.class);
    _builder.add(IWorkflowComponent.class);
    _builder.add(Workflow.class);
    _builder.add(NonNull.class);
    _builder.add(Nullable.class);
    _builder.add(Data.class);
    _builder.add(Property.class);
    _builder.add(AbstractElement.class);
    _builder.add(AbstractRule.class);
    _builder.add(CrossReference.class);
    _builder.add(IGrammarAccess.class);
    _builder.add(Keyword.class);
    _builder.add(RuleCall.class);
    _builder.add(JvmAnnotationTarget.class);
    _builder.add(JvmComponentType.class);
    _builder.add(JvmConstraintOwner.class);
    _builder.add(JvmFormalParameter.class);
    _builder.add(JvmGenericArrayTypeReference.class);
    _builder.add(JvmIdentifiableElement.class);
    _builder.add(JvmParameterizedTypeReference.class);
    _builder.add(JvmSpecializedTypeReference.class);
    _builder.add(JvmType.class);
    _builder.add(JvmTypeConstraint.class);
    _builder.add(JvmTypeParameter.class);
    _builder.add(JvmTypeReference.class);
    _builder.add(JvmWildcardTypeReference.class);
    _builder.add(TypesPackage.class);
    _builder.add(BidiIterable.class);
    _builder.add(BidiTreeIterable.class);
    _builder.add(ICompositeNode.class);
    _builder.add(ILeafNode.class);
    _builder.add(INode.class);
    _builder.add(NodeModelUtils.class);
    _builder.add(IParseResult.class);
    _builder.add(NodeIterator.class);
    _builder.add(PreferenceKey.class);
    _builder.add(XtextResource.class);
    _builder.add(XtextResourceSet.class);
    _builder.add(AbstractElementFinder.class);
    _builder.add(XAbstractFeatureCall.class);
    _builder.add(XAbstractWhileExpression.class);
    _builder.add(XAssignment.class);
    _builder.add(XBinaryOperation.class);
    _builder.add(XBlockExpression.class);
    _builder.add(XCasePart.class);
    _builder.add(XCatchClause.class);
    _builder.add(XClosure.class);
    _builder.add(XCollectionLiteral.class);
    _builder.add(XConstructorCall.class);
    _builder.add(XDoWhileExpression.class);
    _builder.add(XExpression.class);
    _builder.add(XFeatureCall.class);
    _builder.add(XForLoopExpression.class);
    _builder.add(XIfExpression.class);
    _builder.add(XMemberFeatureCall.class);
    _builder.add(XReturnExpression.class);
    _builder.add(XSwitchExpression.class);
    _builder.add(XThrowExpression.class);
    _builder.add(XTryCatchFinallyExpression.class);
    _builder.add(XTypeLiteral.class);
    _builder.add(XVariableDeclaration.class);
    _builder.add(XWhileExpression.class);
    _builder.add(XbasePackage.class);
    _builder.add(XAnnotation.class);
    _builder.add(XAnnotationElementValuePair.class);
    _builder.add(AbstractFormatter.class);
    _builder.add(FormattingPreferenceValues.class);
    _builder.add(IBasicFormatter.class);
    _builder.add(ArrayExtensions.class);
    _builder.add(ArrayLiterals.class);
    _builder.add(BigDecimalExtensions.class);
    _builder.add(BigIntegerExtensions.class);
    _builder.add(BooleanExtensions.class);
    _builder.add(ByteExtensions.class);
    _builder.add(CharacterExtensions.class);
    _builder.add(CollectionExtensions.class);
    _builder.add(CollectionLiterals.class);
    _builder.add(ComparableExtensions.class);
    _builder.add(DoubleExtensions.class);
    _builder.add(Extension.class);
    _builder.add(FloatExtensions.class);
    _builder.add(FunctionExtensions.class);
    _builder.add(Functions.class);
    _builder.add(Inline.class);
    _builder.add(InputOutput.class);
    _builder.add(IntegerExtensions.class);
    _builder.add(IntegerRange.class);
    _builder.add(IterableExtensions.class);
    _builder.add(IteratorExtensions.class);
    _builder.add(ListExtensions.class);
    _builder.add(LongExtensions.class);
    _builder.add(MapExtensions.class);
    _builder.add(ObjectExtensions.class);
    _builder.add(Pair.class);
    _builder.add(ProcedureExtensions.class);
    _builder.add(Procedures.class);
    _builder.add(Pure.class);
    _builder.add(ShortExtensions.class);
    _builder.add(StringExtensions.class);
    _builder.add(ToStringHelper.class);
    _builder.add(XbaseGrammarAccess.class);
    _builder.add(XFunctionTypeRef.class);
    _xlistliteral = _builder.build();
    Iterables.<Class<? extends Object>>addAll(result, _xlistliteral);
    return result;
  }
}
