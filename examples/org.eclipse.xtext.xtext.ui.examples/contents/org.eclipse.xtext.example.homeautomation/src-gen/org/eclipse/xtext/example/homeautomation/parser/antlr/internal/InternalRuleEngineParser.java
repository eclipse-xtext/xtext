package org.eclipse.xtext.example.homeautomation.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.example.homeautomation.services.RuleEngineGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalRuleEngineParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Synchronized", "Instanceof", "Extension", "Default", "Extends", "Finally", "Device", "Import", "Return", "Static", "Switch", "Typeof", "Catch", "False", "Super", "Throw", "While", "Rule", "Case", "Else", "Null", "Then", "True", "When", "ExclamationMarkEqualsSignEqualsSign", "FullStopFullStopLessThanSign", "EqualsSignEqualsSignEqualsSign", "Can", "For", "New", "Try", "Val", "Var", "ExclamationMarkEqualsSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AsteriskAsterisk", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "HyphenMinusGreaterThanSign", "FullStopFullStop", "SolidusEqualsSign", "ColonColon", "LessThanSignGreaterThanSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "QuestionMarkFullStop", "QuestionMarkColon", "As", "Be", "Do", "If", "VerticalLineVerticalLine", "ExclamationMark", "NumberSign", "PercentSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "LeftSquareBracket", "RightSquareBracket", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "RULE_BEGIN", "RULE_END", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_ID", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int Switch=14;
    public static final int RULE_ID=89;
    public static final int RightParenthesis=66;
    public static final int Static=13;
    public static final int RULE_ANY_OTHER=94;
    public static final int ExclamationMark=61;
    public static final int LeftParenthesis=65;
    public static final int RightSquareBracket=80;
    public static final int Extends=8;
    public static final int Solidus=72;
    public static final int EOF=-1;
    public static final int EqualsSignEqualsSign=51;
    public static final int FullStop=71;
    public static final int Finally=9;
    public static final int PercentSign=63;
    public static final int Default=7;
    public static final int RULE_HEX=86;
    public static final int LessThanSign=75;
    public static final int When=27;
    public static final int Do=58;
    public static final int PlusSignPlusSign=42;
    public static final int RULE_DECIMAL=88;
    public static final int FullStopFullStop=47;
    public static final int Null=24;
    public static final int PercentSignEqualsSign=38;
    public static final int LeftCurlyBracket=81;
    public static final int Colon=73;
    public static final int NumberSign=62;
    public static final int RULE_ML_COMMENT=91;
    public static final int RULE_STRING=90;
    public static final int VerticalLine=82;
    public static final int RULE_END=85;
    public static final int HyphenMinusEqualsSign=45;
    public static final int ExclamationMarkEqualsSignEqualsSign=28;
    public static final int Else=23;
    public static final int Val=35;
    public static final int Var=36;
    public static final int HyphenMinusGreaterThanSign=46;
    public static final int RightCurlyBracket=83;
    public static final int Typeof=15;
    public static final int QuestionMarkFullStop=54;
    public static final int Try=34;
    public static final int VerticalLineVerticalLine=60;
    public static final int HyphenMinus=70;
    public static final int AmpersandAmpersand=39;
    public static final int RULE_BEGIN=84;
    public static final int False=17;
    public static final int QuestionMarkColon=55;
    public static final int Extension=6;
    public static final int While=20;
    public static final int LessThanSignGreaterThanSign=50;
    public static final int Case=22;
    public static final int GreaterThanSign=77;
    public static final int HyphenMinusHyphenMinus=44;
    public static final int EqualsSignGreaterThanSign=52;
    public static final int EqualsSignEqualsSignEqualsSign=30;
    public static final int RULE_INT=87;
    public static final int AsteriskAsterisk=40;
    public static final int Synchronized=4;
    public static final int LeftSquareBracket=79;
    public static final int True=26;
    public static final int Return=12;
    public static final int If=59;
    public static final int ExclamationMarkEqualsSign=37;
    public static final int Asterisk=67;
    public static final int Import=11;
    public static final int Device=10;
    public static final int Then=25;
    public static final int As=56;
    public static final int Catch=16;
    public static final int Super=18;
    public static final int Throw=19;
    public static final int SolidusEqualsSign=48;
    public static final int Can=31;
    public static final int Semicolon=74;
    public static final int RULE_SL_COMMENT=92;
    public static final int For=32;
    public static final int Ampersand=64;
    public static final int ColonColon=49;
    public static final int PlusSign=68;
    public static final int AsteriskEqualsSign=41;
    public static final int New=33;
    public static final int Rule=21;
    public static final int Instanceof=5;
    public static final int PlusSignEqualsSign=43;
    public static final int FullStopFullStopLessThanSign=29;
    public static final int GreaterThanSignEqualsSign=53;
    public static final int QuestionMark=78;
    public static final int Be=57;
    public static final int RULE_WS=93;
    public static final int EqualsSign=76;
    public static final int Comma=69;

    // delegates
    // delegators


        public InternalRuleEngineParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalRuleEngineParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalRuleEngineParser.tokenNames; }
    public String getGrammarFileName() { return "../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g"; }




    	private RuleEngineGrammarAccess grammarAccess;
    	 	
    	public InternalRuleEngineParser(TokenStream input, RuleEngineGrammarAccess grammarAccess) {
    		this(input);
    		this.grammarAccess = grammarAccess;
    		registerRules(grammarAccess.getGrammar());
    	}
    	
    	@Override
    	protected String getFirstRuleName() {
    		return "Model";	
    	} 
    	   	   	
    	@Override
    	protected RuleEngineGrammarAccess getGrammarAccess() {
    		return grammarAccess;
    	}



    // $ANTLR start "entryRuleModel"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:61:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:62:2: (iv_ruleModel= ruleModel EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:63:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_ruleModel_in_entryRuleModel67);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleModel77); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:70:1: ruleModel returns [EObject current=null] : ( (lv_declarations_0_0= ruleDeclaration ) )* ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_declarations_0_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:73:28: ( ( (lv_declarations_0_0= ruleDeclaration ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:74:1: ( (lv_declarations_0_0= ruleDeclaration ) )*
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:74:1: ( (lv_declarations_0_0= ruleDeclaration ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==Device||LA1_0==Rule) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:75:1: (lv_declarations_0_0= ruleDeclaration )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:75:1: (lv_declarations_0_0= ruleDeclaration )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:76:3: lv_declarations_0_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleDeclaration_in_ruleModel122);
            	    lv_declarations_0_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getModelRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_0_0, 
            	              		"Declaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleDeclaration"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:100:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:101:2: (iv_ruleDeclaration= ruleDeclaration EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:102:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleDeclaration_in_entryRuleDeclaration157);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDeclaration167); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:109:1: ruleDeclaration returns [EObject current=null] : (this_Device_0= ruleDevice | this_Rule_1= ruleRule ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_Device_0 = null;

        EObject this_Rule_1 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:112:28: ( (this_Device_0= ruleDevice | this_Rule_1= ruleRule ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:113:1: (this_Device_0= ruleDevice | this_Rule_1= ruleRule )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:113:1: (this_Device_0= ruleDevice | this_Rule_1= ruleRule )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==Device) ) {
                alt2=1;
            }
            else if ( (LA2_0==Rule) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:114:5: this_Device_0= ruleDevice
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getDeviceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleDevice_in_ruleDeclaration214);
                    this_Device_0=ruleDevice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Device_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:124:5: this_Rule_1= ruleRule
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getRuleParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRule_in_ruleDeclaration241);
                    this_Rule_1=ruleRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Rule_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDevice"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:140:1: entryRuleDevice returns [EObject current=null] : iv_ruleDevice= ruleDevice EOF ;
    public final EObject entryRuleDevice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDevice = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:141:2: (iv_ruleDevice= ruleDevice EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:142:2: iv_ruleDevice= ruleDevice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeviceRule()); 
            }
            pushFollow(FOLLOW_ruleDevice_in_entryRuleDevice275);
            iv_ruleDevice=ruleDevice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDevice; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDevice285); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDevice"


    // $ANTLR start "ruleDevice"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:149:1: ruleDevice returns [EObject current=null] : (otherlv_0= Device ( (lv_name_1_0= RULE_ID ) ) otherlv_2= Can otherlv_3= Be ( ( (lv_states_4_0= ruleState ) ) (otherlv_5= Comma ( (lv_states_6_0= ruleState ) ) )* )? ) ;
    public final EObject ruleDevice() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_states_4_0 = null;

        EObject lv_states_6_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:152:28: ( (otherlv_0= Device ( (lv_name_1_0= RULE_ID ) ) otherlv_2= Can otherlv_3= Be ( ( (lv_states_4_0= ruleState ) ) (otherlv_5= Comma ( (lv_states_6_0= ruleState ) ) )* )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:153:1: (otherlv_0= Device ( (lv_name_1_0= RULE_ID ) ) otherlv_2= Can otherlv_3= Be ( ( (lv_states_4_0= ruleState ) ) (otherlv_5= Comma ( (lv_states_6_0= ruleState ) ) )* )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:153:1: (otherlv_0= Device ( (lv_name_1_0= RULE_ID ) ) otherlv_2= Can otherlv_3= Be ( ( (lv_states_4_0= ruleState ) ) (otherlv_5= Comma ( (lv_states_6_0= ruleState ) ) )* )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:154:2: otherlv_0= Device ( (lv_name_1_0= RULE_ID ) ) otherlv_2= Can otherlv_3= Be ( ( (lv_states_4_0= ruleState ) ) (otherlv_5= Comma ( (lv_states_6_0= ruleState ) ) )* )?
            {
            otherlv_0=(Token)match(input,Device,FOLLOW_Device_in_ruleDevice323); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDeviceAccess().getDeviceKeyword_0());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:158:1: ( (lv_name_1_0= RULE_ID ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:159:1: (lv_name_1_0= RULE_ID )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:159:1: (lv_name_1_0= RULE_ID )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:160:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleDevice339); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDeviceRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ID");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,Can,FOLLOW_Can_in_ruleDevice357); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDeviceAccess().getCanKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,Be,FOLLOW_Be_in_ruleDevice369); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDeviceAccess().getBeKeyword_3());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:186:1: ( ( (lv_states_4_0= ruleState ) ) (otherlv_5= Comma ( (lv_states_6_0= ruleState ) ) )* )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:186:2: ( (lv_states_4_0= ruleState ) ) (otherlv_5= Comma ( (lv_states_6_0= ruleState ) ) )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:186:2: ( (lv_states_4_0= ruleState ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:187:1: (lv_states_4_0= ruleState )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:187:1: (lv_states_4_0= ruleState )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:188:3: lv_states_4_0= ruleState
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDeviceAccess().getStatesStateParserRuleCall_4_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleState_in_ruleDevice390);
                    lv_states_4_0=ruleState();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDeviceRule());
                      	        }
                             		add(
                             			current, 
                             			"states",
                              		lv_states_4_0, 
                              		"State");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:204:2: (otherlv_5= Comma ( (lv_states_6_0= ruleState ) ) )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==Comma) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:205:2: otherlv_5= Comma ( (lv_states_6_0= ruleState ) )
                    	    {
                    	    otherlv_5=(Token)match(input,Comma,FOLLOW_Comma_in_ruleDevice404); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getDeviceAccess().getCommaKeyword_4_1_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:209:1: ( (lv_states_6_0= ruleState ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:210:1: (lv_states_6_0= ruleState )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:210:1: (lv_states_6_0= ruleState )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:211:3: lv_states_6_0= ruleState
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDeviceAccess().getStatesStateParserRuleCall_4_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleState_in_ruleDevice424);
                    	    lv_states_6_0=ruleState();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDeviceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"states",
                    	              		lv_states_6_0, 
                    	              		"State");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDevice"


    // $ANTLR start "entryRuleState"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:235:1: entryRuleState returns [EObject current=null] : iv_ruleState= ruleState EOF ;
    public final EObject entryRuleState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleState = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:236:2: (iv_ruleState= ruleState EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:237:2: iv_ruleState= ruleState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateRule()); 
            }
            pushFollow(FOLLOW_ruleState_in_entryRuleState463);
            iv_ruleState=ruleState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleState; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleState473); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:244:1: ruleState returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleState() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:247:28: ( ( (lv_name_0_0= RULE_ID ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:248:1: ( (lv_name_0_0= RULE_ID ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:248:1: ( (lv_name_0_0= RULE_ID ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:249:1: (lv_name_0_0= RULE_ID )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:249:1: (lv_name_0_0= RULE_ID )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:250:3: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleState514); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"ID");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleRule"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:274:1: entryRuleRule returns [EObject current=null] : iv_ruleRule= ruleRule EOF ;
    public final EObject entryRuleRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRule = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:275:2: (iv_ruleRule= ruleRule EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:276:2: iv_ruleRule= ruleRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleRule()); 
            }
            pushFollow(FOLLOW_ruleRule_in_entryRuleRule553);
            iv_ruleRule=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRule; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRule563); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRule"


    // $ANTLR start "ruleRule"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:283:1: ruleRule returns [EObject current=null] : (otherlv_0= Rule ( (lv_description_1_0= RULE_STRING ) ) otherlv_2= When ( ( ruleQualifiedName ) ) otherlv_4= Then ( (lv_thenPart_5_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_description_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_thenPart_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:286:28: ( (otherlv_0= Rule ( (lv_description_1_0= RULE_STRING ) ) otherlv_2= When ( ( ruleQualifiedName ) ) otherlv_4= Then ( (lv_thenPart_5_0= ruleXBlockExpression ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:287:1: (otherlv_0= Rule ( (lv_description_1_0= RULE_STRING ) ) otherlv_2= When ( ( ruleQualifiedName ) ) otherlv_4= Then ( (lv_thenPart_5_0= ruleXBlockExpression ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:287:1: (otherlv_0= Rule ( (lv_description_1_0= RULE_STRING ) ) otherlv_2= When ( ( ruleQualifiedName ) ) otherlv_4= Then ( (lv_thenPart_5_0= ruleXBlockExpression ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:288:2: otherlv_0= Rule ( (lv_description_1_0= RULE_STRING ) ) otherlv_2= When ( ( ruleQualifiedName ) ) otherlv_4= Then ( (lv_thenPart_5_0= ruleXBlockExpression ) )
            {
            otherlv_0=(Token)match(input,Rule,FOLLOW_Rule_in_ruleRule601); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:292:1: ( (lv_description_1_0= RULE_STRING ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:293:1: (lv_description_1_0= RULE_STRING )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:293:1: (lv_description_1_0= RULE_STRING )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:294:3: lv_description_1_0= RULE_STRING
            {
            lv_description_1_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleRule617); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_description_1_0, grammarAccess.getRuleAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRuleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"description",
                      		lv_description_1_0, 
                      		"STRING");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,When,FOLLOW_When_in_ruleRule635); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getWhenKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:315:1: ( ( ruleQualifiedName ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:316:1: ( ruleQualifiedName )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:316:1: ( ruleQualifiedName )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:317:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getRuleRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRuleAccess().getDeviceStateStateCrossReference_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleRule657);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,Then,FOLLOW_Then_in_ruleRule670); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getThenKeyword_4());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:335:1: ( (lv_thenPart_5_0= ruleXBlockExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:336:1: (lv_thenPart_5_0= ruleXBlockExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:336:1: (lv_thenPart_5_0= ruleXBlockExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:337:3: lv_thenPart_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRuleAccess().getThenPartXBlockExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXBlockExpression_in_ruleRule690);
            lv_thenPart_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRuleRule());
              	        }
                     		set(
                     			current, 
                     			"thenPart",
                      		lv_thenPart_5_0, 
                      		"XBlockExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRule"


    // $ANTLR start "entryRuleXBlockExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:361:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:362:2: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:363:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXBlockExpression_in_entryRuleXBlockExpression725);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXBlockExpression735); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:370:1: ruleXBlockExpression returns [EObject current=null] : ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token this_END_4=null;
        EObject lv_expressions_2_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:373:28: ( ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:374:1: ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:374:1: ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:374:2: () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:374:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:375:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_RULE_BEGIN_in_ruleXBlockExpression780); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_BEGIN_1, grammarAccess.getXBlockExpressionAccess().getBEGINTerminalRuleCall_1()); 
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:384:1: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==Synchronized||LA6_0==Extension||LA6_0==Extends||(LA6_0>=Import && LA6_0<=Typeof)||(LA6_0>=False && LA6_0<=While)||LA6_0==Null||LA6_0==True||(LA6_0>=For && LA6_0<=Var)||(LA6_0>=Do && LA6_0<=If)||(LA6_0>=ExclamationMark && LA6_0<=NumberSign)||LA6_0==LeftParenthesis||LA6_0==PlusSign||LA6_0==HyphenMinus||LA6_0==LessThanSign||LA6_0==LeftSquareBracket||LA6_0==RULE_BEGIN||(LA6_0>=RULE_HEX && LA6_0<=RULE_STRING)) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:384:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )?
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:384:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:385:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:385:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:386:3: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBlockExpression801);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_2_0, 
            	              		"XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:402:2: (otherlv_3= Semicolon )?
            	    int alt5=2;
            	    int LA5_0 = input.LA(1);

            	    if ( (LA5_0==Semicolon) ) {
            	        alt5=1;
            	    }
            	    switch (alt5) {
            	        case 1 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:403:2: otherlv_3= Semicolon
            	            {
            	            otherlv_3=(Token)match(input,Semicolon,FOLLOW_Semicolon_in_ruleXBlockExpression815); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            this_END_4=(Token)match(input,RULE_END,FOLLOW_RULE_END_in_ruleXBlockExpression829); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_END_4, grammarAccess.getXBlockExpressionAccess().getENDTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:419:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:420:2: (iv_ruleXExpression= ruleXExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:421:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXExpression_in_entryRuleXExpression863);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpression873); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:428:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:431:28: (this_XAssignment_0= ruleXAssignment )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:433:5: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_ruleXAssignment_in_ruleXExpression919);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XAssignment_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:449:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:450:2: (iv_ruleXAssignment= ruleXAssignment EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:451:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_ruleXAssignment_in_entryRuleXAssignment952);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAssignment962); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:458:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:461:28: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:462:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:462:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt8=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==EOF||(LA8_1>=Synchronized && LA8_1<=Finally)||(LA8_1>=Import && LA8_1<=While)||(LA8_1>=Case && LA8_1<=Null)||LA8_1==True||(LA8_1>=ExclamationMarkEqualsSignEqualsSign && LA8_1<=EqualsSignEqualsSignEqualsSign)||(LA8_1>=For && LA8_1<=As)||(LA8_1>=Do && LA8_1<=PercentSign)||(LA8_1>=LeftParenthesis && LA8_1<=LessThanSign)||LA8_1==GreaterThanSign||(LA8_1>=LeftSquareBracket && LA8_1<=LeftCurlyBracket)||(LA8_1>=RightCurlyBracket && LA8_1<=RULE_STRING)) ) {
                    alt8=2;
                }
                else if ( (LA8_1==EqualsSign) ) {
                    alt8=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
                }
                break;
            case Extends:
                {
                int LA8_2 = input.LA(2);

                if ( (LA8_2==EqualsSign) ) {
                    alt8=1;
                }
                else if ( (LA8_2==EOF||(LA8_2>=Synchronized && LA8_2<=Finally)||(LA8_2>=Import && LA8_2<=While)||(LA8_2>=Case && LA8_2<=Null)||LA8_2==True||(LA8_2>=ExclamationMarkEqualsSignEqualsSign && LA8_2<=EqualsSignEqualsSignEqualsSign)||(LA8_2>=For && LA8_2<=As)||(LA8_2>=Do && LA8_2<=PercentSign)||(LA8_2>=LeftParenthesis && LA8_2<=LessThanSign)||LA8_2==GreaterThanSign||(LA8_2>=LeftSquareBracket && LA8_2<=LeftCurlyBracket)||(LA8_2>=RightCurlyBracket && LA8_2<=RULE_STRING)) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 2, input);

                    throw nvae;
                }
                }
                break;
            case Static:
                {
                int LA8_3 = input.LA(2);

                if ( (LA8_3==EOF||(LA8_3>=Synchronized && LA8_3<=Finally)||(LA8_3>=Import && LA8_3<=While)||(LA8_3>=Case && LA8_3<=Null)||LA8_3==True||(LA8_3>=ExclamationMarkEqualsSignEqualsSign && LA8_3<=EqualsSignEqualsSignEqualsSign)||(LA8_3>=For && LA8_3<=As)||(LA8_3>=Do && LA8_3<=PercentSign)||(LA8_3>=LeftParenthesis && LA8_3<=LessThanSign)||LA8_3==GreaterThanSign||(LA8_3>=LeftSquareBracket && LA8_3<=LeftCurlyBracket)||(LA8_3>=RightCurlyBracket && LA8_3<=RULE_STRING)) ) {
                    alt8=2;
                }
                else if ( (LA8_3==EqualsSign) ) {
                    alt8=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 3, input);

                    throw nvae;
                }
                }
                break;
            case Import:
                {
                int LA8_4 = input.LA(2);

                if ( (LA8_4==EOF||(LA8_4>=Synchronized && LA8_4<=Finally)||(LA8_4>=Import && LA8_4<=While)||(LA8_4>=Case && LA8_4<=Null)||LA8_4==True||(LA8_4>=ExclamationMarkEqualsSignEqualsSign && LA8_4<=EqualsSignEqualsSignEqualsSign)||(LA8_4>=For && LA8_4<=As)||(LA8_4>=Do && LA8_4<=PercentSign)||(LA8_4>=LeftParenthesis && LA8_4<=LessThanSign)||LA8_4==GreaterThanSign||(LA8_4>=LeftSquareBracket && LA8_4<=LeftCurlyBracket)||(LA8_4>=RightCurlyBracket && LA8_4<=RULE_STRING)) ) {
                    alt8=2;
                }
                else if ( (LA8_4==EqualsSign) ) {
                    alt8=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 4, input);

                    throw nvae;
                }
                }
                break;
            case Extension:
                {
                int LA8_5 = input.LA(2);

                if ( (LA8_5==EqualsSign) ) {
                    alt8=1;
                }
                else if ( (LA8_5==EOF||(LA8_5>=Synchronized && LA8_5<=Finally)||(LA8_5>=Import && LA8_5<=While)||(LA8_5>=Case && LA8_5<=Null)||LA8_5==True||(LA8_5>=ExclamationMarkEqualsSignEqualsSign && LA8_5<=EqualsSignEqualsSignEqualsSign)||(LA8_5>=For && LA8_5<=As)||(LA8_5>=Do && LA8_5<=PercentSign)||(LA8_5>=LeftParenthesis && LA8_5<=LessThanSign)||LA8_5==GreaterThanSign||(LA8_5>=LeftSquareBracket && LA8_5<=LeftCurlyBracket)||(LA8_5>=RightCurlyBracket && LA8_5<=RULE_STRING)) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 5, input);

                    throw nvae;
                }
                }
                break;
            case Synchronized:
            case Return:
            case Switch:
            case Typeof:
            case False:
            case Super:
            case Throw:
            case While:
            case Null:
            case True:
            case For:
            case New:
            case Try:
            case Do:
            case If:
            case ExclamationMark:
            case NumberSign:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case LessThanSign:
            case LeftSquareBracket:
            case RULE_BEGIN:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_STRING:
                {
                alt8=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:462:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:462:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:462:3: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:462:3: ()
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:463:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                                  current);
                          
                    }

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:468:2: ( ( ruleFeatureCallID ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:469:1: ( ruleFeatureCallID )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:469:1: ( ruleFeatureCallID )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:470:3: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXAssignmentRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXAssignment1020);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleOpSingleAssign_in_ruleXAssignment1036);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:491:1: ( (lv_value_3_0= ruleXAssignment ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:492:1: (lv_value_3_0= ruleXAssignment )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:492:1: (lv_value_3_0= ruleXAssignment )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:493:3: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXAssignment_in_ruleXAssignment1056);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"XAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:510:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:510:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:511:5: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXOrExpression_in_ruleXAssignment1086);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XOrExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt7=2;
                    alt7 = dfa7.predict(input);
                    switch (alt7) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:524:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:524:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:524:7: ()
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:525:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                                          current);
                                  
                            }

                            }

                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:530:2: ( ( ruleOpMultiAssign ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:531:1: ( ruleOpMultiAssign )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:531:1: ( ruleOpMultiAssign )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:532:3: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getXAssignmentRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleOpMultiAssign_in_ruleXAssignment1139);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }

                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:545:4: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:546:1: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:546:1: (lv_rightOperand_7_0= ruleXAssignment )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:547:3: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXAssignment_in_ruleXAssignment1162);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rightOperand",
                                      		lv_rightOperand_7_0, 
                                      		"XAssignment");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:571:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:572:1: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:573:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_ruleOpSingleAssign_in_entryRuleOpSingleAssign1201);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpSingleAssign1212); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:580:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= EqualsSign ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:584:6: (kw= EqualsSign )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:586:2: kw= EqualsSign
            {
            kw=(Token)match(input,EqualsSign,FOLLOW_EqualsSign_in_ruleOpSingleAssign1249); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:599:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:600:1: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:601:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_ruleOpMultiAssign_in_entryRuleOpMultiAssign1288);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpMultiAssign1299); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:608:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:612:6: ( (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:613:1: (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:613:1: (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) )
            int alt10=7;
            switch ( input.LA(1) ) {
            case PlusSignEqualsSign:
                {
                alt10=1;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt10=2;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt10=3;
                }
                break;
            case SolidusEqualsSign:
                {
                alt10=4;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt10=5;
                }
                break;
            case LessThanSign:
                {
                alt10=6;
                }
                break;
            case GreaterThanSign:
                {
                alt10=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:614:2: kw= PlusSignEqualsSign
                    {
                    kw=(Token)match(input,PlusSignEqualsSign,FOLLOW_PlusSignEqualsSign_in_ruleOpMultiAssign1337); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:621:2: kw= HyphenMinusEqualsSign
                    {
                    kw=(Token)match(input,HyphenMinusEqualsSign,FOLLOW_HyphenMinusEqualsSign_in_ruleOpMultiAssign1356); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:628:2: kw= AsteriskEqualsSign
                    {
                    kw=(Token)match(input,AsteriskEqualsSign,FOLLOW_AsteriskEqualsSign_in_ruleOpMultiAssign1375); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:635:2: kw= SolidusEqualsSign
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_SolidusEqualsSign_in_ruleOpMultiAssign1394); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:642:2: kw= PercentSignEqualsSign
                    {
                    kw=(Token)match(input,PercentSignEqualsSign,FOLLOW_PercentSignEqualsSign_in_ruleOpMultiAssign1413); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:648:6: (kw= LessThanSign kw= LessThanSign kw= EqualsSign )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:648:6: (kw= LessThanSign kw= LessThanSign kw= EqualsSign )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:649:2: kw= LessThanSign kw= LessThanSign kw= EqualsSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleOpMultiAssign1433); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); 
                          
                    }
                    kw=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleOpMultiAssign1446); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); 
                          
                    }
                    kw=(Token)match(input,EqualsSign,FOLLOW_EqualsSign_in_ruleOpMultiAssign1459); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:667:6: (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:667:6: (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:668:2: kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleOpMultiAssign1480); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); 
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:673:1: (kw= GreaterThanSign )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==GreaterThanSign) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:674:2: kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleOpMultiAssign1494); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); 
                                  
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_GreaterThanSignEqualsSign_in_ruleOpMultiAssign1509); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:693:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:694:2: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:695:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXOrExpression_in_entryRuleXOrExpression1549);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXOrExpression1559); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:702:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:705:28: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:706:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:706:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:707:5: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXAndExpression_in_ruleXOrExpression1606);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XAndExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:1: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==VerticalLineVerticalLine) ) {
                    int LA11_2 = input.LA(2);

                    if ( (synpred2_InternalRuleEngineParser()) ) {
                        alt11=1;
                    }


                }


                switch (alt11) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:720:6: ( () ( ( ruleOpOr ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:720:7: () ( ( ruleOpOr ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:720:7: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:721:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:726:2: ( ( ruleOpOr ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:727:1: ( ruleOpOr )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:727:1: ( ruleOpOr )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:728:3: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpOr_in_ruleXOrExpression1659);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:741:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:742:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:742:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:743:3: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAndExpression_in_ruleXOrExpression1682);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XAndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:767:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:768:1: (iv_ruleOpOr= ruleOpOr EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:769:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_ruleOpOr_in_entryRuleOpOr1720);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpOr1731); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:776:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= VerticalLineVerticalLine ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:780:6: (kw= VerticalLineVerticalLine )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:782:2: kw= VerticalLineVerticalLine
            {
            kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_VerticalLineVerticalLine_in_ruleOpOr1768); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:795:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:796:2: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:797:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXAndExpression_in_entryRuleXAndExpression1806);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAndExpression1816); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:804:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:807:28: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:808:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:808:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:809:5: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression1863);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XEqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:1: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==AmpersandAmpersand) ) {
                    int LA12_2 = input.LA(2);

                    if ( (synpred3_InternalRuleEngineParser()) ) {
                        alt12=1;
                    }


                }


                switch (alt12) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:822:6: ( () ( ( ruleOpAnd ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:822:7: () ( ( ruleOpAnd ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:822:7: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:823:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:828:2: ( ( ruleOpAnd ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:829:1: ( ruleOpAnd )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:829:1: ( ruleOpAnd )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:830:3: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpAnd_in_ruleXAndExpression1916);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:843:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:844:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:844:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:845:3: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression1939);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XEqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:869:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:870:1: (iv_ruleOpAnd= ruleOpAnd EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:871:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_ruleOpAnd_in_entryRuleOpAnd1977);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpAnd1988); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:878:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= AmpersandAmpersand ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:882:6: (kw= AmpersandAmpersand )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:884:2: kw= AmpersandAmpersand
            {
            kw=(Token)match(input,AmpersandAmpersand,FOLLOW_AmpersandAmpersand_in_ruleOpAnd2025); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:897:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:898:2: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:899:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXEqualityExpression_in_entryRuleXEqualityExpression2063);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXEqualityExpression2073); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:906:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:909:28: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:910:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:910:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:911:5: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression2120);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XRelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:1: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop13:
            do {
                int alt13=2;
                switch ( input.LA(1) ) {
                case EqualsSignEqualsSign:
                    {
                    int LA13_2 = input.LA(2);

                    if ( (synpred4_InternalRuleEngineParser()) ) {
                        alt13=1;
                    }


                    }
                    break;
                case ExclamationMarkEqualsSign:
                    {
                    int LA13_3 = input.LA(2);

                    if ( (synpred4_InternalRuleEngineParser()) ) {
                        alt13=1;
                    }


                    }
                    break;
                case EqualsSignEqualsSignEqualsSign:
                    {
                    int LA13_4 = input.LA(2);

                    if ( (synpred4_InternalRuleEngineParser()) ) {
                        alt13=1;
                    }


                    }
                    break;
                case ExclamationMarkEqualsSignEqualsSign:
                    {
                    int LA13_5 = input.LA(2);

                    if ( (synpred4_InternalRuleEngineParser()) ) {
                        alt13=1;
                    }


                    }
                    break;

                }

                switch (alt13) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:924:6: ( () ( ( ruleOpEquality ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:924:7: () ( ( ruleOpEquality ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:924:7: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:925:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:930:2: ( ( ruleOpEquality ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:931:1: ( ruleOpEquality )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:931:1: ( ruleOpEquality )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:932:3: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpEquality_in_ruleXEqualityExpression2173);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:945:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:946:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:946:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:947:3: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression2196);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XRelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:971:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:972:1: (iv_ruleOpEquality= ruleOpEquality EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:973:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_ruleOpEquality_in_entryRuleOpEquality2234);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpEquality2245); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:980:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:984:6: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:985:1: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:985:1: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign )
            int alt14=4;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSign:
                {
                alt14=1;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt14=2;
                }
                break;
            case EqualsSignEqualsSignEqualsSign:
                {
                alt14=3;
                }
                break;
            case ExclamationMarkEqualsSignEqualsSign:
                {
                alt14=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:986:2: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FOLLOW_EqualsSignEqualsSign_in_ruleOpEquality2283); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:993:2: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_ExclamationMarkEqualsSign_in_ruleOpEquality2302); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1000:2: kw= EqualsSignEqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSignEqualsSign,FOLLOW_EqualsSignEqualsSignEqualsSign_in_ruleOpEquality2321); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1007:2: kw= ExclamationMarkEqualsSignEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSignEqualsSign,FOLLOW_ExclamationMarkEqualsSignEqualsSign_in_ruleOpEquality2340); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1020:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1021:2: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1022:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXRelationalExpression_in_entryRuleXRelationalExpression2379);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXRelationalExpression2389); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1029:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1032:28: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1033:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1033:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1034:5: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression2436);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XOtherOperatorExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:1: ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop15:
            do {
                int alt15=3;
                switch ( input.LA(1) ) {
                case LessThanSign:
                    {
                    int LA15_2 = input.LA(2);

                    if ( (synpred6_InternalRuleEngineParser()) ) {
                        alt15=2;
                    }


                    }
                    break;
                case GreaterThanSign:
                    {
                    int LA15_3 = input.LA(2);

                    if ( (synpred6_InternalRuleEngineParser()) ) {
                        alt15=2;
                    }


                    }
                    break;
                case Instanceof:
                    {
                    int LA15_4 = input.LA(2);

                    if ( (synpred5_InternalRuleEngineParser()) ) {
                        alt15=1;
                    }


                    }
                    break;
                case GreaterThanSignEqualsSign:
                    {
                    int LA15_5 = input.LA(2);

                    if ( (synpred6_InternalRuleEngineParser()) ) {
                        alt15=2;
                    }


                    }
                    break;

                }

                switch (alt15) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:2: ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:2: ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:3: ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:3: ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:4: ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1045:5: ( () otherlv_2= Instanceof )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1045:6: () otherlv_2= Instanceof
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1045:6: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1046:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,Instanceof,FOLLOW_Instanceof_in_ruleXRelationalExpression2472); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1056:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1057:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1057:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1058:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXRelationalExpression2494);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:8: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1080:6: ( () ( ( ruleOpCompare ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1080:7: () ( ( ruleOpCompare ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1080:7: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1081:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1086:2: ( ( ruleOpCompare ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1087:1: ( ruleOpCompare )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1087:1: ( ruleOpCompare )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1088:3: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpCompare_in_ruleXRelationalExpression2555);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1101:4: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1102:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1102:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1103:3: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression2578);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_6_0, 
            	              		"XOtherOperatorExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1127:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1128:1: (iv_ruleOpCompare= ruleOpCompare EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1129:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_ruleOpCompare_in_entryRuleOpCompare2617);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpCompare2628); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1136:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1140:6: ( (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1141:1: (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1141:1: (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign )
            int alt16=4;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt16=1;
                }
                break;
            case LessThanSign:
                {
                int LA16_2 = input.LA(2);

                if ( (LA16_2==EOF||LA16_2==Synchronized||LA16_2==Extension||LA16_2==Extends||(LA16_2>=Import && LA16_2<=Typeof)||(LA16_2>=False && LA16_2<=While)||LA16_2==Null||LA16_2==True||(LA16_2>=For && LA16_2<=Try)||(LA16_2>=Do && LA16_2<=If)||(LA16_2>=ExclamationMark && LA16_2<=NumberSign)||LA16_2==LeftParenthesis||LA16_2==PlusSign||LA16_2==HyphenMinus||LA16_2==LessThanSign||LA16_2==LeftSquareBracket||LA16_2==RULE_BEGIN||(LA16_2>=RULE_HEX && LA16_2<=RULE_STRING)) ) {
                    alt16=4;
                }
                else if ( (LA16_2==EqualsSign) ) {
                    alt16=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 2, input);

                    throw nvae;
                }
                }
                break;
            case GreaterThanSign:
                {
                alt16=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1142:2: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_GreaterThanSignEqualsSign_in_ruleOpCompare2666); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1148:6: (kw= LessThanSign kw= EqualsSign )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1148:6: (kw= LessThanSign kw= EqualsSign )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1149:2: kw= LessThanSign kw= EqualsSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleOpCompare2686); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); 
                          
                    }
                    kw=(Token)match(input,EqualsSign,FOLLOW_EqualsSign_in_ruleOpCompare2699); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1162:2: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleOpCompare2719); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1169:2: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleOpCompare2738); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1182:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1183:2: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1184:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_entryRuleXOtherOperatorExpression2777);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXOtherOperatorExpression2787); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1191:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1194:28: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1195:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1195:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1196:5: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression2834);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XAdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop17:
            do {
                int alt17=2;
                alt17 = dfa17.predict(input);
                switch (alt17) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:3: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1209:6: ( () ( ( ruleOpOther ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1209:7: () ( ( ruleOpOther ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1209:7: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1210:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1215:2: ( ( ruleOpOther ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1216:1: ( ruleOpOther )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1216:1: ( ruleOpOther )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1217:3: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpOther_in_ruleXOtherOperatorExpression2887);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1230:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1231:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1231:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1232:3: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression2910);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XAdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1256:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1257:1: (iv_ruleOpOther= ruleOpOther EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1258:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_ruleOpOther_in_entryRuleOpOther2948);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpOther2959); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1265:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1269:6: ( (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1270:1: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1270:1: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )
            int alt20=9;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1271:2: kw= HyphenMinusGreaterThanSign
                    {
                    kw=(Token)match(input,HyphenMinusGreaterThanSign,FOLLOW_HyphenMinusGreaterThanSign_in_ruleOpOther2997); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1278:2: kw= FullStopFullStopLessThanSign
                    {
                    kw=(Token)match(input,FullStopFullStopLessThanSign,FOLLOW_FullStopFullStopLessThanSign_in_ruleOpOther3016); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1284:6: (kw= GreaterThanSign kw= FullStopFullStop )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1284:6: (kw= GreaterThanSign kw= FullStopFullStop )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1285:2: kw= GreaterThanSign kw= FullStopFullStop
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleOpOther3036); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
                          
                    }
                    kw=(Token)match(input,FullStopFullStop,FOLLOW_FullStopFullStop_in_ruleOpOther3049); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1298:2: kw= FullStopFullStop
                    {
                    kw=(Token)match(input,FullStopFullStop,FOLLOW_FullStopFullStop_in_ruleOpOther3069); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1305:2: kw= EqualsSignGreaterThanSign
                    {
                    kw=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_EqualsSignGreaterThanSign_in_ruleOpOther3088); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1311:6: (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1311:6: (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1312:2: kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign )
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleOpOther3108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1317:1: ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign )
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==GreaterThanSign) ) {
                        int LA18_1 = input.LA(2);

                        if ( (LA18_1==EOF||LA18_1==Synchronized||LA18_1==Extension||LA18_1==Extends||(LA18_1>=Import && LA18_1<=Typeof)||(LA18_1>=False && LA18_1<=While)||LA18_1==Null||LA18_1==True||(LA18_1>=For && LA18_1<=Try)||(LA18_1>=Do && LA18_1<=If)||(LA18_1>=ExclamationMark && LA18_1<=NumberSign)||LA18_1==LeftParenthesis||LA18_1==PlusSign||LA18_1==HyphenMinus||LA18_1==LessThanSign||LA18_1==LeftSquareBracket||LA18_1==RULE_BEGIN||(LA18_1>=RULE_HEX && LA18_1<=RULE_STRING)) ) {
                            alt18=2;
                        }
                        else if ( (LA18_1==GreaterThanSign) && (synpred8_InternalRuleEngineParser())) {
                            alt18=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 18, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 0, input);

                        throw nvae;
                    }
                    switch (alt18) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1317:2: ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1317:2: ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1317:3: ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1321:5: (kw= GreaterThanSign kw= GreaterThanSign )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1322:2: kw= GreaterThanSign kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleOpOther3139); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleOpOther3152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1335:2: kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleOpOther3173); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1341:6: (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1341:6: (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1342:2: kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign )
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleOpOther3195); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1347:1: ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign )
                    int alt19=3;
                    int LA19_0 = input.LA(1);

                    if ( (LA19_0==LessThanSign) ) {
                        int LA19_1 = input.LA(2);

                        if ( (synpred9_InternalRuleEngineParser()) ) {
                            alt19=1;
                        }
                        else if ( (true) ) {
                            alt19=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 19, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA19_0==EqualsSignGreaterThanSign) ) {
                        alt19=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 0, input);

                        throw nvae;
                    }
                    switch (alt19) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1347:2: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1347:2: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1347:3: ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1351:5: (kw= LessThanSign kw= LessThanSign )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1352:2: kw= LessThanSign kw= LessThanSign
                            {
                            kw=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleOpOther3226); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleOpOther3239); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1365:2: kw= LessThanSign
                            {
                            kw=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleOpOther3260); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
                                  
                            }

                            }
                            break;
                        case 3 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1372:2: kw= EqualsSignGreaterThanSign
                            {
                            kw=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_EqualsSignGreaterThanSign_in_ruleOpOther3279); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1379:2: kw= LessThanSignGreaterThanSign
                    {
                    kw=(Token)match(input,LessThanSignGreaterThanSign,FOLLOW_LessThanSignGreaterThanSign_in_ruleOpOther3300); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1386:2: kw= QuestionMarkColon
                    {
                    kw=(Token)match(input,QuestionMarkColon,FOLLOW_QuestionMarkColon_in_ruleOpOther3319); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1399:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1400:2: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1401:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXAdditiveExpression_in_entryRuleXAdditiveExpression3358);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAdditiveExpression3368); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1408:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1411:28: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1412:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1412:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1413:5: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression3415);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XMultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:1: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==PlusSign) ) {
                    int LA21_2 = input.LA(2);

                    if ( (synpred10_InternalRuleEngineParser()) ) {
                        alt21=1;
                    }


                }
                else if ( (LA21_0==HyphenMinus) ) {
                    int LA21_3 = input.LA(2);

                    if ( (synpred10_InternalRuleEngineParser()) ) {
                        alt21=1;
                    }


                }


                switch (alt21) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1426:6: ( () ( ( ruleOpAdd ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1426:7: () ( ( ruleOpAdd ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1426:7: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1427:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1432:2: ( ( ruleOpAdd ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1433:1: ( ruleOpAdd )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1433:1: ( ruleOpAdd )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1434:3: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpAdd_in_ruleXAdditiveExpression3468);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1447:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1448:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1448:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1449:3: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression3491);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XMultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1473:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1474:1: (iv_ruleOpAdd= ruleOpAdd EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1475:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_ruleOpAdd_in_entryRuleOpAdd3529);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpAdd3540); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1482:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1486:6: ( (kw= PlusSign | kw= HyphenMinus ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1487:1: (kw= PlusSign | kw= HyphenMinus )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1487:1: (kw= PlusSign | kw= HyphenMinus )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==PlusSign) ) {
                alt22=1;
            }
            else if ( (LA22_0==HyphenMinus) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1488:2: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_PlusSign_in_ruleOpAdd3578); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1495:2: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_HyphenMinus_in_ruleOpAdd3597); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1508:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1509:2: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1510:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_entryRuleXMultiplicativeExpression3636);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXMultiplicativeExpression3646); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1517:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1520:28: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1521:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1521:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1522:5: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression3693);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XUnaryOperation_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:1: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop23:
            do {
                int alt23=2;
                switch ( input.LA(1) ) {
                case Asterisk:
                    {
                    int LA23_2 = input.LA(2);

                    if ( (synpred11_InternalRuleEngineParser()) ) {
                        alt23=1;
                    }


                    }
                    break;
                case AsteriskAsterisk:
                    {
                    int LA23_3 = input.LA(2);

                    if ( (synpred11_InternalRuleEngineParser()) ) {
                        alt23=1;
                    }


                    }
                    break;
                case Solidus:
                    {
                    int LA23_4 = input.LA(2);

                    if ( (synpred11_InternalRuleEngineParser()) ) {
                        alt23=1;
                    }


                    }
                    break;
                case PercentSign:
                    {
                    int LA23_5 = input.LA(2);

                    if ( (synpred11_InternalRuleEngineParser()) ) {
                        alt23=1;
                    }


                    }
                    break;

                }

                switch (alt23) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1535:6: ( () ( ( ruleOpMulti ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1535:7: () ( ( ruleOpMulti ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1535:7: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1536:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1541:2: ( ( ruleOpMulti ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1542:1: ( ruleOpMulti )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1542:1: ( ruleOpMulti )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1543:3: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpMulti_in_ruleXMultiplicativeExpression3746);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1556:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1557:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1557:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1558:3: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression3769);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XUnaryOperation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1582:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1583:1: (iv_ruleOpMulti= ruleOpMulti EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1584:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_ruleOpMulti_in_entryRuleOpMulti3807);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpMulti3818); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1591:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1595:6: ( (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1596:1: (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1596:1: (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign )
            int alt24=4;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt24=1;
                }
                break;
            case AsteriskAsterisk:
                {
                alt24=2;
                }
                break;
            case Solidus:
                {
                alt24=3;
                }
                break;
            case PercentSign:
                {
                alt24=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1597:2: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FOLLOW_Asterisk_in_ruleOpMulti3856); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1604:2: kw= AsteriskAsterisk
                    {
                    kw=(Token)match(input,AsteriskAsterisk,FOLLOW_AsteriskAsterisk_in_ruleOpMulti3875); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1611:2: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_Solidus_in_ruleOpMulti3894); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1618:2: kw= PercentSign
                    {
                    kw=(Token)match(input,PercentSign,FOLLOW_PercentSign_in_ruleOpMulti3913); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1631:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1632:2: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1633:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_ruleXUnaryOperation_in_entryRuleXUnaryOperation3952);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXUnaryOperation3962); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1640:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1643:28: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1644:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1644:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==ExclamationMark||LA25_0==PlusSign||LA25_0==HyphenMinus) ) {
                alt25=1;
            }
            else if ( (LA25_0==Synchronized||LA25_0==Extension||LA25_0==Extends||(LA25_0>=Import && LA25_0<=Typeof)||(LA25_0>=False && LA25_0<=While)||LA25_0==Null||LA25_0==True||(LA25_0>=For && LA25_0<=Try)||(LA25_0>=Do && LA25_0<=If)||LA25_0==NumberSign||LA25_0==LeftParenthesis||LA25_0==LessThanSign||LA25_0==LeftSquareBracket||LA25_0==RULE_BEGIN||(LA25_0>=RULE_HEX && LA25_0<=RULE_STRING)) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1644:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1644:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1644:3: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1644:3: ()
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1645:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                                  current);
                          
                    }

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1650:2: ( ( ruleOpUnary ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1651:1: ( ruleOpUnary )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1651:1: ( ruleOpUnary )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1652:3: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleOpUnary_in_ruleXUnaryOperation4020);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1665:2: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1666:1: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1666:1: (lv_operand_2_0= ruleXUnaryOperation )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1667:3: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXUnaryOperation4041);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"XUnaryOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1685:5: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXCastedExpression_in_ruleXUnaryOperation4070);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XCastedExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1701:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1702:1: (iv_ruleOpUnary= ruleOpUnary EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1703:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_ruleOpUnary_in_entryRuleOpUnary4105);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpUnary4116); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1710:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1714:6: ( (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1715:1: (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1715:1: (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign )
            int alt26=3;
            switch ( input.LA(1) ) {
            case ExclamationMark:
                {
                alt26=1;
                }
                break;
            case HyphenMinus:
                {
                alt26=2;
                }
                break;
            case PlusSign:
                {
                alt26=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1716:2: kw= ExclamationMark
                    {
                    kw=(Token)match(input,ExclamationMark,FOLLOW_ExclamationMark_in_ruleOpUnary4154); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1723:2: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_HyphenMinus_in_ruleOpUnary4173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1730:2: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_PlusSign_in_ruleOpUnary4192); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1743:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1744:2: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1745:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXCastedExpression_in_entryRuleXCastedExpression4231);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCastedExpression4241); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1752:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1755:28: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1756:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1756:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1757:5: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXPostfixOperation_in_ruleXCastedExpression4288);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XPostfixOperation_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:1: ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==As) ) {
                    int LA27_2 = input.LA(2);

                    if ( (synpred12_InternalRuleEngineParser()) ) {
                        alt27=1;
                    }


                }


                switch (alt27) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:2: ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:2: ( ( ( () As ) )=> ( () otherlv_2= As ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:3: ( ( () As ) )=> ( () otherlv_2= As )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1768:5: ( () otherlv_2= As )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1768:6: () otherlv_2= As
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1768:6: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1769:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,As,FOLLOW_As_in_ruleXCastedExpression4323); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1779:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1780:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1780:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1781:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXCastedExpression4345);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1805:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1806:2: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1807:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_ruleXPostfixOperation_in_entryRuleXPostfixOperation4382);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXPostfixOperation4392); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1814:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1817:28: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1818:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1818:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1819:5: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXMemberFeatureCall_in_ruleXPostfixOperation4439);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XMemberFeatureCall_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1827:1: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==PlusSignPlusSign) ) {
                int LA28_1 = input.LA(2);

                if ( (synpred13_InternalRuleEngineParser()) ) {
                    alt28=1;
                }
            }
            else if ( (LA28_0==HyphenMinusHyphenMinus) ) {
                int LA28_2 = input.LA(2);

                if ( (synpred13_InternalRuleEngineParser()) ) {
                    alt28=1;
                }
            }
            switch (alt28) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1827:2: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1832:6: ( () ( ( ruleOpPostfix ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1832:7: () ( ( ruleOpPostfix ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1832:7: ()
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1833:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1838:2: ( ( ruleOpPostfix ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1839:1: ( ruleOpPostfix )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1839:1: ( ruleOpPostfix )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1840:3: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleOpPostfix_in_ruleXPostfixOperation4491);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1861:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1862:1: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1863:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_ruleOpPostfix_in_entryRuleOpPostfix4530);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpPostfix4541); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1870:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1874:6: ( (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1875:1: (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1875:1: (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==PlusSignPlusSign) ) {
                alt29=1;
            }
            else if ( (LA29_0==HyphenMinusHyphenMinus) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1876:2: kw= PlusSignPlusSign
                    {
                    kw=(Token)match(input,PlusSignPlusSign,FOLLOW_PlusSignPlusSign_in_ruleOpPostfix4579); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1883:2: kw= HyphenMinusHyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_HyphenMinusHyphenMinus_in_ruleOpPostfix4598); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1896:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1897:2: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1898:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_ruleXMemberFeatureCall_in_entryRuleXMemberFeatureCall4637);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXMemberFeatureCall4647); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1905:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1908:28: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1909:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1909:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1910:5: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXPrimaryExpression_in_ruleXMemberFeatureCall4694);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XPrimaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:1: ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop38:
            do {
                int alt38=3;
                switch ( input.LA(1) ) {
                case FullStop:
                    {
                    int LA38_2 = input.LA(2);

                    if ( (synpred14_InternalRuleEngineParser()) ) {
                        alt38=1;
                    }
                    else if ( (synpred15_InternalRuleEngineParser()) ) {
                        alt38=2;
                    }


                    }
                    break;
                case ColonColon:
                    {
                    int LA38_3 = input.LA(2);

                    if ( (synpred14_InternalRuleEngineParser()) ) {
                        alt38=1;
                    }
                    else if ( (synpred15_InternalRuleEngineParser()) ) {
                        alt38=2;
                    }


                    }
                    break;
                case QuestionMarkFullStop:
                    {
                    int LA38_4 = input.LA(2);

                    if ( (synpred15_InternalRuleEngineParser()) ) {
                        alt38=2;
                    }


                    }
                    break;

                }

                switch (alt38) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:2: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:2: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:3: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:3: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:4: ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1933:24: ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1933:25: () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1933:25: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1934:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1939:2: (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) )
            	    int alt30=2;
            	    int LA30_0 = input.LA(1);

            	    if ( (LA30_0==FullStop) ) {
            	        alt30=1;
            	    }
            	    else if ( (LA30_0==ColonColon) ) {
            	        alt30=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 30, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt30) {
            	        case 1 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1940:2: otherlv_2= FullStop
            	            {
            	            otherlv_2=(Token)match(input,FullStop,FOLLOW_FullStop_in_ruleXMemberFeatureCall4763); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1945:6: ( (lv_explicitStatic_3_0= ColonColon ) )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1945:6: ( (lv_explicitStatic_3_0= ColonColon ) )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1946:1: (lv_explicitStatic_3_0= ColonColon )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1946:1: (lv_explicitStatic_3_0= ColonColon )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1947:3: lv_explicitStatic_3_0= ColonColon
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,ColonColon,FOLLOW_ColonColon_in_ruleXMemberFeatureCall4787); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1961:3: ( ( ruleFeatureCallID ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1962:1: ( ruleFeatureCallID )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1962:1: ( ruleFeatureCallID )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1963:3: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall4822);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleOpSingleAssign_in_ruleXMemberFeatureCall4838);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1984:3: ( (lv_value_6_0= ruleXAssignment ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1985:1: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1985:1: (lv_value_6_0= ruleXAssignment )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1986:3: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAssignment_in_ruleXMemberFeatureCall4860);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"value",
            	              		lv_value_6_0, 
            	              		"XAssignment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:6: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:6: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:7: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:7: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:8: ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2022:7: ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2022:8: () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2022:8: ()
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2023:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2028:2: (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
            	    int alt31=3;
            	    switch ( input.LA(1) ) {
            	    case FullStop:
            	        {
            	        alt31=1;
            	        }
            	        break;
            	    case QuestionMarkFullStop:
            	        {
            	        alt31=2;
            	        }
            	        break;
            	    case ColonColon:
            	        {
            	        alt31=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 31, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt31) {
            	        case 1 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2029:2: otherlv_8= FullStop
            	            {
            	            otherlv_8=(Token)match(input,FullStop,FOLLOW_FullStop_in_ruleXMemberFeatureCall4942); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2034:6: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2034:6: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2035:1: (lv_nullSafe_9_0= QuestionMarkFullStop )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2035:1: (lv_nullSafe_9_0= QuestionMarkFullStop )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2036:3: lv_nullSafe_9_0= QuestionMarkFullStop
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,QuestionMarkFullStop,FOLLOW_QuestionMarkFullStop_in_ruleXMemberFeatureCall4966); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "nullSafe", true, "?.");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2051:6: ( (lv_explicitStatic_10_0= ColonColon ) )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2051:6: ( (lv_explicitStatic_10_0= ColonColon ) )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2052:1: (lv_explicitStatic_10_0= ColonColon )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2052:1: (lv_explicitStatic_10_0= ColonColon )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2053:3: lv_explicitStatic_10_0= ColonColon
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,ColonColon,FOLLOW_ColonColon_in_ruleXMemberFeatureCall5002); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2067:5: (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )?
            	    int alt33=2;
            	    int LA33_0 = input.LA(1);

            	    if ( (LA33_0==LessThanSign) ) {
            	        alt33=1;
            	    }
            	    switch (alt33) {
            	        case 1 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2068:2: otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign
            	            {
            	            otherlv_11=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleXMemberFeatureCall5030); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	                  
            	            }
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2072:1: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2073:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2073:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2074:3: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall5050);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"typeArguments",
            	                      		lv_typeArguments_12_0, 
            	                      		"JvmArgumentTypeReference");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }

            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2090:2: (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop32:
            	            do {
            	                int alt32=2;
            	                int LA32_0 = input.LA(1);

            	                if ( (LA32_0==Comma) ) {
            	                    alt32=1;
            	                }


            	                switch (alt32) {
            	            	case 1 :
            	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2091:2: otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXMemberFeatureCall5064); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	          	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	          
            	            	    }
            	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2095:1: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2096:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2096:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2097:3: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {
            	            	       
            	            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall5084);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      	        }
            	            	             		add(
            	            	             			current, 
            	            	             			"typeArguments",
            	            	              		lv_typeArguments_14_0, 
            	            	              		"JvmArgumentTypeReference");
            	            	      	        afterParserOrEnumRuleCall();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop32;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleXMemberFeatureCall5099); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2118:3: ( ( ruleIdOrSuper ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2119:1: ( ruleIdOrSuper )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2119:1: ( ruleIdOrSuper )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2120:3: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleIdOrSuper_in_ruleXMemberFeatureCall5123);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2133:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?
            	    int alt36=2;
            	    alt36 = dfa36.predict(input);
            	    switch (alt36) {
            	        case 1 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2133:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2133:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2133:4: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2141:1: (lv_explicitOperationCall_17_0= LeftParenthesis )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2142:3: lv_explicitOperationCall_17_0= LeftParenthesis
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXMemberFeatureCall5156); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              	    
            	            }

            	            }


            	            }

            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt35=3;
            	            alt35 = dfa35.predict(input);
            	            switch (alt35) {
            	                case 1 :
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2175:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2176:3: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_ruleXShortClosure_in_ruleXMemberFeatureCall5236);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_18_0, 
            	                              		"XShortClosure");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2193:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2193:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2193:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2193:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2194:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2194:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2195:3: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall5264);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_19_0, 
            	                              		"XExpression");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }

            	                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2211:2: (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop34:
            	                    do {
            	                        int alt34=2;
            	                        int LA34_0 = input.LA(1);

            	                        if ( (LA34_0==Comma) ) {
            	                            alt34=1;
            	                        }


            	                        switch (alt34) {
            	                    	case 1 :
            	                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2212:2: otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXMemberFeatureCall5278); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	          	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	          
            	                    	    }
            	                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2216:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2217:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2217:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2218:3: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {
            	                    	       
            	                    	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
            	                    	      	    
            	                    	    }
            	                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall5298);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      	        if (current==null) {
            	                    	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      	        }
            	                    	             		add(
            	                    	             			current, 
            	                    	             			"memberCallArguments",
            	                    	              		lv_memberCallArguments_21_0, 
            	                    	              		"XExpression");
            	                    	      	        afterParserOrEnumRuleCall();
            	                    	      	    
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop34;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXMemberFeatureCall5316); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2239:3: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt37=2;
            	    alt37 = dfa37.predict(input);
            	    switch (alt37) {
            	        case 1 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2239:4: ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2243:1: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2244:3: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleXClosure_in_ruleXMemberFeatureCall5349);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"memberCallArguments",
            	                      		lv_memberCallArguments_23_0, 
            	                      		"XClosure");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2268:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2269:2: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2270:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXPrimaryExpression_in_entryRuleXPrimaryExpression5388);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXPrimaryExpression5398); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2277:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2280:28: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2281:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2281:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt39=15;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2282:5: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXConstructorCall_in_ruleXPrimaryExpression5445);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XConstructorCall_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2292:5: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXBlockExpression_in_ruleXPrimaryExpression5472);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XBlockExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2302:5: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXSwitchExpression_in_ruleXPrimaryExpression5499);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XSwitchExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2311:6: ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2311:6: ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2311:7: ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXSynchronizedExpression_in_ruleXPrimaryExpression5541);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XSynchronizedExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2327:5: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXFeatureCall_in_ruleXPrimaryExpression5569);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XFeatureCall_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2337:5: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXLiteral_in_ruleXPrimaryExpression5596);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2347:5: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXIfExpression_in_ruleXPrimaryExpression5623);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XIfExpression_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2356:6: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2356:6: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2356:7: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXForLoopExpression_in_ruleXPrimaryExpression5677);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XForLoopExpression_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2378:5: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXBasicForLoopExpression_in_ruleXPrimaryExpression5705);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XBasicForLoopExpression_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2388:5: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXWhileExpression_in_ruleXPrimaryExpression5732);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XWhileExpression_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2398:5: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXDoWhileExpression_in_ruleXPrimaryExpression5759);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XDoWhileExpression_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2408:5: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXThrowExpression_in_ruleXPrimaryExpression5786);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XThrowExpression_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2418:5: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXReturnExpression_in_ruleXPrimaryExpression5813);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XReturnExpression_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2428:5: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXTryCatchFinallyExpression_in_ruleXPrimaryExpression5840);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XTryCatchFinallyExpression_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2438:5: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXParenthesizedExpression_in_ruleXPrimaryExpression5867);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XParenthesizedExpression_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2454:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2455:2: (iv_ruleXLiteral= ruleXLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2456:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXLiteral_in_entryRuleXLiteral5901);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXLiteral5911); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2463:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2466:28: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2467:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2467:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt40=7;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==NumberSign) ) {
                alt40=1;
            }
            else if ( (LA40_0==LeftSquareBracket) && (synpred21_InternalRuleEngineParser())) {
                alt40=2;
            }
            else if ( (LA40_0==False||LA40_0==True) ) {
                alt40=3;
            }
            else if ( ((LA40_0>=RULE_HEX && LA40_0<=RULE_DECIMAL)) ) {
                alt40=4;
            }
            else if ( (LA40_0==Null) ) {
                alt40=5;
            }
            else if ( (LA40_0==RULE_STRING) ) {
                alt40=6;
            }
            else if ( (LA40_0==Typeof) ) {
                alt40=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2468:5: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXCollectionLiteral_in_ruleXLiteral5958);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XCollectionLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2477:6: ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2477:6: ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2477:7: ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXLiteral5997);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XClosure_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2491:5: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXBooleanLiteral_in_ruleXLiteral6025);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XBooleanLiteral_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2501:5: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXNumberLiteral_in_ruleXLiteral6052);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XNumberLiteral_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2511:5: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXNullLiteral_in_ruleXLiteral6079);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XNullLiteral_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2521:5: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXStringLiteral_in_ruleXLiteral6106);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XStringLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2531:5: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXTypeLiteral_in_ruleXLiteral6133);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XTypeLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2547:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2548:2: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2549:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXCollectionLiteral_in_entryRuleXCollectionLiteral6167);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCollectionLiteral6177); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2556:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2559:28: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2560:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2560:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==NumberSign) ) {
                int LA41_1 = input.LA(2);

                if ( (LA41_1==LeftSquareBracket) ) {
                    alt41=2;
                }
                else if ( (LA41_1==LeftCurlyBracket) ) {
                    alt41=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2561:5: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXSetLiteral_in_ruleXCollectionLiteral6224);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XSetLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2571:5: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXListLiteral_in_ruleXCollectionLiteral6251);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XListLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2587:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2588:2: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2589:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXSetLiteral_in_entryRuleXSetLiteral6285);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXSetLiteral6295); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2596:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2599:28: ( ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2600:1: ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2600:1: ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2600:2: () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2600:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2601:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FOLLOW_NumberSign_in_ruleXSetLiteral6342); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_LeftCurlyBracket_in_ruleXSetLiteral6354); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2616:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==Synchronized||LA43_0==Extension||LA43_0==Extends||(LA43_0>=Import && LA43_0<=Typeof)||(LA43_0>=False && LA43_0<=While)||LA43_0==Null||LA43_0==True||(LA43_0>=For && LA43_0<=Try)||(LA43_0>=Do && LA43_0<=If)||(LA43_0>=ExclamationMark && LA43_0<=NumberSign)||LA43_0==LeftParenthesis||LA43_0==PlusSign||LA43_0==HyphenMinus||LA43_0==LessThanSign||LA43_0==LeftSquareBracket||LA43_0==RULE_BEGIN||(LA43_0>=RULE_HEX && LA43_0<=RULE_STRING)) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2616:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2616:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2617:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2617:1: (lv_elements_3_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2618:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSetLiteral6375);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2634:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( (LA42_0==Comma) ) {
                            alt42=1;
                        }


                        switch (alt42) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2635:2: otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXSetLiteral6389); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2639:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2640:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2640:1: (lv_elements_5_0= ruleXExpression )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2641:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXSetLiteral6409);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop42;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_RightCurlyBracket_in_ruleXSetLiteral6426); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2670:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2671:2: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2672:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXListLiteral_in_entryRuleXListLiteral6460);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXListLiteral6470); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2679:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2682:28: ( ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2683:1: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2683:1: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2683:2: () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2683:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2684:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FOLLOW_NumberSign_in_ruleXListLiteral6517); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftSquareBracket,FOLLOW_LeftSquareBracket_in_ruleXListLiteral6529); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2699:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==Synchronized||LA45_0==Extension||LA45_0==Extends||(LA45_0>=Import && LA45_0<=Typeof)||(LA45_0>=False && LA45_0<=While)||LA45_0==Null||LA45_0==True||(LA45_0>=For && LA45_0<=Try)||(LA45_0>=Do && LA45_0<=If)||(LA45_0>=ExclamationMark && LA45_0<=NumberSign)||LA45_0==LeftParenthesis||LA45_0==PlusSign||LA45_0==HyphenMinus||LA45_0==LessThanSign||LA45_0==LeftSquareBracket||LA45_0==RULE_BEGIN||(LA45_0>=RULE_HEX && LA45_0<=RULE_STRING)) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2699:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2699:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2700:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2700:1: (lv_elements_3_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2701:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXListLiteral6550);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2717:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==Comma) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2718:2: otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXListLiteral6564); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2722:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2723:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2723:1: (lv_elements_5_0= ruleXExpression )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2724:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXListLiteral6584);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightSquareBracket,FOLLOW_RightSquareBracket_in_ruleXListLiteral6601); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2753:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2754:2: (iv_ruleXClosure= ruleXClosure EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2755:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXClosure_in_entryRuleXClosure6635);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXClosure6645); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2762:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2765:28: ( ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2766:1: ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2766:1: ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2766:2: ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2766:2: ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2766:3: ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2769:5: ( () otherlv_1= LeftSquareBracket )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2769:6: () otherlv_1= LeftSquareBracket
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2769:6: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2770:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_LeftSquareBracket_in_ruleXClosure6705); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
                  
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )?
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2797:6: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2797:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2797:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==EqualsSignGreaterThanSign||LA47_0==LeftParenthesis||LA47_0==RULE_ID) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2797:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2797:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2798:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2798:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2799:3: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXClosure6774);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"declaredFormalParameters",
                                      		lv_declaredFormalParameters_2_0, 
                                      		"JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2815:2: (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop46:
                            do {
                                int alt46=2;
                                int LA46_0 = input.LA(1);

                                if ( (LA46_0==Comma) ) {
                                    alt46=1;
                                }


                                switch (alt46) {
                            	case 1 :
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2816:2: otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXClosure6788); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	          
                            	    }
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2820:1: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2821:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2821:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2822:3: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXClosure6808);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredFormalParameters",
                            	              		lv_declaredFormalParameters_4_0, 
                            	              		"JvmFormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop46;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2838:6: ( (lv_explicitSyntax_5_0= VerticalLine ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2839:1: (lv_explicitSyntax_5_0= VerticalLine )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2839:1: (lv_explicitSyntax_5_0= VerticalLine )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2840:3: lv_explicitSyntax_5_0= VerticalLine
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,VerticalLine,FOLLOW_VerticalLine_in_ruleXClosure6831); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXClosureRule());
                      	        }
                             		setWithLastConsumed(current, "explicitSyntax", true, "|");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2854:5: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2855:1: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2855:1: (lv_expression_6_0= ruleXExpressionInClosure )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2856:3: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpressionInClosure_in_ruleXClosure6866);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"XExpressionInClosure");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,RightSquareBracket,FOLLOW_RightSquareBracket_in_ruleXClosure6879); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2885:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2886:2: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2887:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXExpressionInClosure_in_entryRuleXExpressionInClosure6913);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpressionInClosure6923); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2894:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2897:28: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2898:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2898:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2898:2: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )*
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2898:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2899:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2904:2: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==Synchronized||LA50_0==Extension||LA50_0==Extends||(LA50_0>=Import && LA50_0<=Typeof)||(LA50_0>=False && LA50_0<=While)||LA50_0==Null||LA50_0==True||(LA50_0>=For && LA50_0<=Var)||(LA50_0>=Do && LA50_0<=If)||(LA50_0>=ExclamationMark && LA50_0<=NumberSign)||LA50_0==LeftParenthesis||LA50_0==PlusSign||LA50_0==HyphenMinus||LA50_0==LessThanSign||LA50_0==LeftSquareBracket||LA50_0==RULE_BEGIN||(LA50_0>=RULE_HEX && LA50_0<=RULE_STRING)) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2904:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )?
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2904:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2905:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2905:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2906:3: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXExpressionInClosure6979);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_1_0, 
            	              		"XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2922:2: (otherlv_2= Semicolon )?
            	    int alt49=2;
            	    int LA49_0 = input.LA(1);

            	    if ( (LA49_0==Semicolon) ) {
            	        alt49=1;
            	    }
            	    switch (alt49) {
            	        case 1 :
            	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2923:2: otherlv_2= Semicolon
            	            {
            	            otherlv_2=(Token)match(input,Semicolon,FOLLOW_Semicolon_in_ruleXExpressionInClosure6993); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2935:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2936:2: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2937:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXShortClosure_in_entryRuleXShortClosure7031);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXShortClosure7041); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2944:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2947:28: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2948:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2948:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2948:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2948:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2948:3: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2966:6: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2966:7: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2966:7: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2967:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2972:2: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==EqualsSignGreaterThanSign||LA52_0==LeftParenthesis||LA52_0==RULE_ID) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2972:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2972:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2973:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2973:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2974:3: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure7146);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      	        }
                             		add(
                             			current, 
                             			"declaredFormalParameters",
                              		lv_declaredFormalParameters_1_0, 
                              		"JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2990:2: (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==Comma) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2991:2: otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXShortClosure7160); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2995:1: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2996:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2996:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2997:3: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure7180);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredFormalParameters",
                    	              		lv_declaredFormalParameters_3_0, 
                    	              		"JvmFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3013:6: ( (lv_explicitSyntax_4_0= VerticalLine ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3014:1: (lv_explicitSyntax_4_0= VerticalLine )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3014:1: (lv_explicitSyntax_4_0= VerticalLine )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3015:3: lv_explicitSyntax_4_0= VerticalLine
            {
            lv_explicitSyntax_4_0=(Token)match(input,VerticalLine,FOLLOW_VerticalLine_in_ruleXShortClosure7203); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXShortClosureRule());
              	        }
                     		setWithLastConsumed(current, "explicitSyntax", true, "|");
              	    
            }

            }


            }


            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3029:4: ( (lv_expression_5_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3030:1: (lv_expression_5_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3030:1: (lv_expression_5_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3031:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXShortClosure7237);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3055:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3056:2: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3057:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXParenthesizedExpression_in_entryRuleXParenthesizedExpression7272);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXParenthesizedExpression7282); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3064:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3067:28: ( (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3068:1: (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3068:1: (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3069:2: otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXParenthesizedExpression7320); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXParenthesizedExpression7341);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_XExpression_1;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXParenthesizedExpression7353); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3095:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3096:2: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3097:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXIfExpression_in_entryRuleXIfExpression7387);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXIfExpression7397); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3104:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3107:28: ( ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3108:1: ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3108:1: ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3108:2: () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3108:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3109:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,If,FOLLOW_If_in_ruleXIfExpression7444); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXIfExpression7456); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3124:1: ( (lv_if_3_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3125:1: (lv_if_3_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3125:1: (lv_if_3_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3126:3: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression7476);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_3_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXIfExpression7489); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3147:1: ( (lv_then_5_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3148:1: (lv_then_5_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3148:1: (lv_then_5_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3149:3: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression7509);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3165:2: ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==Else) ) {
                int LA53_1 = input.LA(2);

                if ( (synpred25_InternalRuleEngineParser()) ) {
                    alt53=1;
                }
            }
            switch (alt53) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3165:3: ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3165:3: ( ( Else )=>otherlv_6= Else )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3165:4: ( Else )=>otherlv_6= Else
                    {
                    otherlv_6=(Token)match(input,Else,FOLLOW_Else_in_ruleXIfExpression7530); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                          
                    }

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3172:2: ( (lv_else_7_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3173:1: (lv_else_7_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3173:1: (lv_else_7_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3174:3: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression7551);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3198:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3199:2: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3200:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXSwitchExpression_in_entryRuleXSwitchExpression7588);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXSwitchExpression7598); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3207:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3210:28: ( ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3211:1: ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3211:1: ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3211:2: () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3211:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3212:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Switch,FOLLOW_Switch_in_ruleXSwitchExpression7645); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:1: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:2: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:2: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:3: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:3: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:4: ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3230:5: (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3231:2: otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
                    {
                    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXSwitchExpression7681); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3235:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3236:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3236:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3237:3: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXSwitchExpression7701);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredParam",
                              		lv_declaredParam_3_0, 
                              		"JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_Colon_in_ruleXSwitchExpression7714); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                          
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3258:3: ( (lv_switch_5_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3259:1: (lv_switch_5_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3259:1: (lv_switch_5_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3260:3: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression7736);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_5_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXSwitchExpression7749); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:7: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:7: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )?
                    int alt54=2;
                    alt54 = dfa54.predict(input);
                    switch (alt54) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:8: ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3288:5: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3288:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3288:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3289:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3289:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3290:3: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXSwitchExpression7796);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredParam",
                                      		lv_declaredParam_7_0, 
                                      		"JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,Colon,FOLLOW_Colon_in_ruleXSwitchExpression7809); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                                  
                            }

                            }


                            }
                            break;

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3311:4: ( (lv_switch_9_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3312:1: (lv_switch_9_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3312:1: (lv_switch_9_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3313:3: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression7832);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_9_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,LeftCurlyBracket,FOLLOW_LeftCurlyBracket_in_ruleXSwitchExpression7847); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3334:1: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==Case||LA56_0==EqualsSignGreaterThanSign||LA56_0==LeftParenthesis||LA56_0==Comma||LA56_0==Colon||LA56_0==RULE_ID) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3335:1: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3335:1: (lv_cases_11_0= ruleXCasePart )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3336:3: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXCasePart_in_ruleXSwitchExpression7867);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_11_0, 
            	              		"XCasePart");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3352:3: (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==Default) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3353:2: otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,Default,FOLLOW_Default_in_ruleXSwitchExpression7882); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                          
                    }
                    otherlv_13=(Token)match(input,Colon,FOLLOW_Colon_in_ruleXSwitchExpression7894); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3362:1: ( (lv_default_14_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3363:1: (lv_default_14_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3363:1: (lv_default_14_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3364:3: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression7914);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"default",
                              		lv_default_14_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,RightCurlyBracket,FOLLOW_RightCurlyBracket_in_ruleXSwitchExpression7929); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3393:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3394:2: (iv_ruleXCasePart= ruleXCasePart EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3395:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_ruleXCasePart_in_entryRuleXCasePart7963);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCasePart7973); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3402:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3405:28: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3406:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3406:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3406:2: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3406:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3407:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
                          current);
                  
            }

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3412:2: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==EqualsSignGreaterThanSign||LA58_0==LeftParenthesis||LA58_0==RULE_ID) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3413:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3413:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3414:3: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXCasePart8028);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"typeGuard",
                              		lv_typeGuard_1_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3430:3: (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==Case) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3431:2: otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,Case,FOLLOW_Case_in_ruleXCasePart8043); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3435:1: ( (lv_case_3_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3436:1: (lv_case_3_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3436:1: (lv_case_3_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3437:3: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXCasePart8063);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"case",
                              		lv_case_3_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3453:4: ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==Colon) ) {
                alt60=1;
            }
            else if ( (LA60_0==Comma) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3453:5: (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3453:5: (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3454:2: otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,Colon,FOLLOW_Colon_in_ruleXCasePart8080); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3458:1: ( (lv_then_5_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3459:1: (lv_then_5_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3459:1: (lv_then_5_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3460:3: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXCasePart8100);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"then",
                              		lv_then_5_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3477:6: ( (lv_fallThrough_6_0= Comma ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3477:6: ( (lv_fallThrough_6_0= Comma ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3478:1: (lv_fallThrough_6_0= Comma )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3478:1: (lv_fallThrough_6_0= Comma )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3479:3: lv_fallThrough_6_0= Comma
                    {
                    lv_fallThrough_6_0=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXCasePart8126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXCasePartRule());
                      	        }
                             		setWithLastConsumed(current, "fallThrough", true, ",");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3501:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3502:2: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3503:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXForLoopExpression_in_entryRuleXForLoopExpression8173);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXForLoopExpression8183); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3510:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3513:28: ( ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3514:1: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3514:1: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3514:2: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3514:2: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3514:3: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3525:5: ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3525:6: () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3525:6: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3526:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_For_in_ruleXForLoopExpression8258); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXForLoopExpression8270); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3541:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3542:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3542:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3543:3: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXForLoopExpression8290);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_3_0, 
                      		"JvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,Colon,FOLLOW_Colon_in_ruleXForLoopExpression8303); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
                  
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3564:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3565:1: (lv_forExpression_5_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3565:1: (lv_forExpression_5_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3566:3: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXForLoopExpression8325);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"forExpression",
                      		lv_forExpression_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXForLoopExpression8338); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3587:1: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3588:1: (lv_eachExpression_7_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3588:1: (lv_eachExpression_7_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3589:3: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXForLoopExpression8358);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_7_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3613:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3614:2: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3615:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXBasicForLoopExpression_in_entryRuleXBasicForLoopExpression8393);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXBasicForLoopExpression8403); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3622:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3625:28: ( ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3626:1: ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3626:1: ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3626:2: () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3626:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3627:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_For_in_ruleXBasicForLoopExpression8450); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXBasicForLoopExpression8462); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3642:1: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==Synchronized||LA62_0==Extension||LA62_0==Extends||(LA62_0>=Import && LA62_0<=Typeof)||(LA62_0>=False && LA62_0<=While)||LA62_0==Null||LA62_0==True||(LA62_0>=For && LA62_0<=Var)||(LA62_0>=Do && LA62_0<=If)||(LA62_0>=ExclamationMark && LA62_0<=NumberSign)||LA62_0==LeftParenthesis||LA62_0==PlusSign||LA62_0==HyphenMinus||LA62_0==LessThanSign||LA62_0==LeftSquareBracket||LA62_0==RULE_BEGIN||(LA62_0>=RULE_HEX && LA62_0<=RULE_STRING)) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3642:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3642:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3643:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3643:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3644:3: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBasicForLoopExpression8483);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"initExpressions",
                              		lv_initExpressions_3_0, 
                              		"XExpressionOrVarDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3660:2: (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==Comma) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3661:2: otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXBasicForLoopExpression8497); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3665:1: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3666:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3666:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3667:3: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBasicForLoopExpression8517);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"initExpressions",
                    	              		lv_initExpressions_5_0, 
                    	              		"XExpressionOrVarDeclaration");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop61;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,Semicolon,FOLLOW_Semicolon_in_ruleXBasicForLoopExpression8534); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3688:1: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==Synchronized||LA63_0==Extension||LA63_0==Extends||(LA63_0>=Import && LA63_0<=Typeof)||(LA63_0>=False && LA63_0<=While)||LA63_0==Null||LA63_0==True||(LA63_0>=For && LA63_0<=Try)||(LA63_0>=Do && LA63_0<=If)||(LA63_0>=ExclamationMark && LA63_0<=NumberSign)||LA63_0==LeftParenthesis||LA63_0==PlusSign||LA63_0==HyphenMinus||LA63_0==LessThanSign||LA63_0==LeftSquareBracket||LA63_0==RULE_BEGIN||(LA63_0>=RULE_HEX && LA63_0<=RULE_STRING)) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3689:1: (lv_expression_7_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3689:1: (lv_expression_7_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3690:3: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression8554);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,Semicolon,FOLLOW_Semicolon_in_ruleXBasicForLoopExpression8568); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3711:1: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Synchronized||LA65_0==Extension||LA65_0==Extends||(LA65_0>=Import && LA65_0<=Typeof)||(LA65_0>=False && LA65_0<=While)||LA65_0==Null||LA65_0==True||(LA65_0>=For && LA65_0<=Try)||(LA65_0>=Do && LA65_0<=If)||(LA65_0>=ExclamationMark && LA65_0<=NumberSign)||LA65_0==LeftParenthesis||LA65_0==PlusSign||LA65_0==HyphenMinus||LA65_0==LessThanSign||LA65_0==LeftSquareBracket||LA65_0==RULE_BEGIN||(LA65_0>=RULE_HEX && LA65_0<=RULE_STRING)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3711:2: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3711:2: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3712:1: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3712:1: (lv_updateExpressions_9_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3713:3: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression8589);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"updateExpressions",
                              		lv_updateExpressions_9_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3729:2: (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( (LA64_0==Comma) ) {
                            alt64=1;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3730:2: otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXBasicForLoopExpression8603); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3734:1: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3735:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3735:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3736:3: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression8623);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"updateExpressions",
                    	              		lv_updateExpressions_11_0, 
                    	              		"XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop64;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXBasicForLoopExpression8640); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3757:1: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3758:1: (lv_eachExpression_13_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3758:1: (lv_eachExpression_13_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3759:3: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression8660);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_13_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3783:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3784:2: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3785:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXWhileExpression_in_entryRuleXWhileExpression8695);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXWhileExpression8705); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3792:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3795:28: ( ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3796:1: ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3796:1: ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3796:2: () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3796:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3797:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,While,FOLLOW_While_in_ruleXWhileExpression8752); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXWhileExpression8764); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3812:1: ( (lv_predicate_3_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3813:1: (lv_predicate_3_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3813:1: (lv_predicate_3_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3814:3: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXWhileExpression8784);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_3_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXWhileExpression8797); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3835:1: ( (lv_body_5_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3836:1: (lv_body_5_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3836:1: (lv_body_5_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3837:3: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXWhileExpression8817);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3861:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3862:2: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3863:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXDoWhileExpression_in_entryRuleXDoWhileExpression8852);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXDoWhileExpression8862); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3870:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3873:28: ( ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3874:1: ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3874:1: ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3874:2: () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3874:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3875:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Do,FOLLOW_Do_in_ruleXDoWhileExpression8909); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3885:1: ( (lv_body_2_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3886:1: (lv_body_2_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3886:1: (lv_body_2_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3887:3: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXDoWhileExpression8929);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,While,FOLLOW_While_in_ruleXDoWhileExpression8942); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXDoWhileExpression8954); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3913:1: ( (lv_predicate_5_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3914:1: (lv_predicate_5_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3914:1: (lv_predicate_5_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3915:3: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXDoWhileExpression8974);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXDoWhileExpression8987); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3944:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3945:2: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3946:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_entryRuleXExpressionOrVarDeclaration9021);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpressionOrVarDeclaration9031); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3953:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3956:28: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3957:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3957:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=Val && LA66_0<=Var)) ) {
                alt66=1;
            }
            else if ( (LA66_0==Synchronized||LA66_0==Extension||LA66_0==Extends||(LA66_0>=Import && LA66_0<=Typeof)||(LA66_0>=False && LA66_0<=While)||LA66_0==Null||LA66_0==True||(LA66_0>=For && LA66_0<=Try)||(LA66_0>=Do && LA66_0<=If)||(LA66_0>=ExclamationMark && LA66_0<=NumberSign)||LA66_0==LeftParenthesis||LA66_0==PlusSign||LA66_0==HyphenMinus||LA66_0==LessThanSign||LA66_0==LeftSquareBracket||LA66_0==RULE_BEGIN||(LA66_0>=RULE_HEX && LA66_0<=RULE_STRING)) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3958:5: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXVariableDeclaration_in_ruleXExpressionOrVarDeclaration9078);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XVariableDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3968:5: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXExpressionOrVarDeclaration9105);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3984:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3985:2: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3986:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleXVariableDeclaration_in_entryRuleXVariableDeclaration9139);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXVariableDeclaration9149); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3993:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3996:28: ( ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3997:1: ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3997:1: ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3997:2: () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3997:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3998:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4003:2: ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Var) ) {
                alt67=1;
            }
            else if ( (LA67_0==Val) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4003:3: ( (lv_writeable_1_0= Var ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4003:3: ( (lv_writeable_1_0= Var ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4004:1: (lv_writeable_1_0= Var )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4004:1: (lv_writeable_1_0= Var )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4005:3: lv_writeable_1_0= Var
                    {
                    lv_writeable_1_0=(Token)match(input,Var,FOLLOW_Var_in_ruleXVariableDeclaration9203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "writeable", true, "var");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4021:2: otherlv_2= Val
                    {
                    otherlv_2=(Token)match(input,Val,FOLLOW_Val_in_ruleXVariableDeclaration9233); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:2: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_ID) ) {
                int LA68_1 = input.LA(2);

                if ( (synpred29_InternalRuleEngineParser()) ) {
                    alt68=1;
                }
                else if ( (true) ) {
                    alt68=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA68_0==LeftParenthesis) && (synpred29_InternalRuleEngineParser())) {
                alt68=1;
            }
            else if ( (LA68_0==EqualsSignGreaterThanSign) && (synpred29_InternalRuleEngineParser())) {
                alt68=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4033:6: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4033:7: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4033:7: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4034:1: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4034:1: (lv_type_3_0= ruleJvmTypeReference )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4035:3: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXVariableDeclaration9280);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_3_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4051:2: ( (lv_name_4_0= ruleValidID ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4052:1: (lv_name_4_0= ruleValidID )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4052:1: (lv_name_4_0= ruleValidID )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4053:3: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleXVariableDeclaration9301);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4070:6: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4070:6: ( (lv_name_5_0= ruleValidID ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4071:1: (lv_name_5_0= ruleValidID )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4071:1: (lv_name_5_0= ruleValidID )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4072:3: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleXVariableDeclaration9330);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_5_0, 
                              		"ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4088:3: (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==EqualsSign) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4089:2: otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_EqualsSign_in_ruleXVariableDeclaration9345); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4093:1: ( (lv_right_7_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4094:1: (lv_right_7_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4094:1: (lv_right_7_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4095:3: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXVariableDeclaration9365);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"right",
                              		lv_right_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4119:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4120:2: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4121:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_ruleJvmFormalParameter_in_entryRuleJvmFormalParameter9402);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmFormalParameter9412); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4128:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4131:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4132:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4132:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4132:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4132:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_ID) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==FullStop||LA70_1==LessThanSign||LA70_1==LeftSquareBracket||LA70_1==RULE_ID) ) {
                    alt70=1;
                }
            }
            else if ( (LA70_0==EqualsSignGreaterThanSign||LA70_0==LeftParenthesis) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4133:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4133:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4134:3: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmFormalParameter9458);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"parameterType",
                              		lv_parameterType_0_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4150:3: ( (lv_name_1_0= ruleValidID ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4151:1: (lv_name_1_0= ruleValidID )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4151:1: (lv_name_1_0= ruleValidID )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4152:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleJvmFormalParameter9480);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4176:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4177:2: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4178:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_ruleFullJvmFormalParameter_in_entryRuleFullJvmFormalParameter9515);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFullJvmFormalParameter9525); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4185:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4188:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4189:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4189:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4189:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4189:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4190:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4190:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4191:3: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleFullJvmFormalParameter9571);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"parameterType",
                      		lv_parameterType_0_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4207:2: ( (lv_name_1_0= ruleValidID ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4208:1: (lv_name_1_0= ruleValidID )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4208:1: (lv_name_1_0= ruleValidID )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4209:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleFullJvmFormalParameter9592);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4233:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4234:2: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4235:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_ruleXFeatureCall_in_entryRuleXFeatureCall9627);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXFeatureCall9637); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4242:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4245:28: ( ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4246:1: ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4246:1: ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4246:2: () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4246:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4247:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
                          current);
                  
            }

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4252:2: (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==LessThanSign) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4253:2: otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleXFeatureCall9685); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4257:1: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4258:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4258:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4259:3: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall9705);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_2_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4275:2: (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==Comma) ) {
                            alt71=1;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4276:2: otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXFeatureCall9719); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4280:1: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4281:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4281:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4282:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall9739);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_4_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleXFeatureCall9754); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4303:3: ( ( ruleIdOrSuper ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4304:1: ( ruleIdOrSuper )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4304:1: ( ruleIdOrSuper )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4305:3: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXFeatureCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleIdOrSuper_in_ruleXFeatureCall9778);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4318:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4318:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4318:3: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4318:4: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4326:1: (lv_explicitOperationCall_7_0= LeftParenthesis )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4327:3: lv_explicitOperationCall_7_0= LeftParenthesis
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXFeatureCall9811); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXFeatureCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt74=3;
                    alt74 = dfa74.predict(input);
                    switch (alt74) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4360:1: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4361:3: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXShortClosure_in_ruleXFeatureCall9891);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_8_0, 
                                      		"XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4378:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4378:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4378:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4378:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4379:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4379:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4380:3: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXFeatureCall9919);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_9_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4396:2: (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop73:
                            do {
                                int alt73=2;
                                int LA73_0 = input.LA(1);

                                if ( (LA73_0==Comma) ) {
                                    alt73=1;
                                }


                                switch (alt73) {
                            	case 1 :
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4397:2: otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXFeatureCall9933); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	          
                            	    }
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4401:1: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4402:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4402:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4403:3: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleXExpression_in_ruleXFeatureCall9953);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"featureCallArguments",
                            	              		lv_featureCallArguments_11_0, 
                            	              		"XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop73;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXFeatureCall9971); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4424:3: ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4424:4: ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4428:1: (lv_featureCallArguments_13_0= ruleXClosure )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4429:3: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXFeatureCall10004);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"featureCallArguments",
                              		lv_featureCallArguments_13_0, 
                              		"XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4453:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4454:1: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4455:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_ruleFeatureCallID_in_entryRuleFeatureCallID10041);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFeatureCallID10052); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4462:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4466:6: ( (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4467:1: (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4467:1: (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension )
            int alt77=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt77=1;
                }
                break;
            case Extends:
                {
                alt77=2;
                }
                break;
            case Static:
                {
                alt77=3;
                }
                break;
            case Import:
                {
                alt77=4;
                }
                break;
            case Extension:
                {
                alt77=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4468:5: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleFeatureCallID10099);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ValidID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4480:2: kw= Extends
                    {
                    kw=(Token)match(input,Extends,FOLLOW_Extends_in_ruleFeatureCallID10123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4487:2: kw= Static
                    {
                    kw=(Token)match(input,Static,FOLLOW_Static_in_ruleFeatureCallID10142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4494:2: kw= Import
                    {
                    kw=(Token)match(input,Import,FOLLOW_Import_in_ruleFeatureCallID10161); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4501:2: kw= Extension
                    {
                    kw=(Token)match(input,Extension,FOLLOW_Extension_in_ruleFeatureCallID10180); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4514:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4515:1: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4516:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_ruleIdOrSuper_in_entryRuleIdOrSuper10220);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIdOrSuper10231); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4523:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= Super ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4527:6: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= Super ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4528:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= Super )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4528:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= Super )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==Extension||LA78_0==Extends||LA78_0==Import||LA78_0==Static||LA78_0==RULE_ID) ) {
                alt78=1;
            }
            else if ( (LA78_0==Super) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4529:5: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleIdOrSuper10278);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_FeatureCallID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4541:2: kw= Super
                    {
                    kw=(Token)match(input,Super,FOLLOW_Super_in_ruleIdOrSuper10302); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4554:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4555:2: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4556:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_ruleXConstructorCall_in_entryRuleXConstructorCall10341);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXConstructorCall10351); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4563:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4566:28: ( ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4567:1: ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4567:1: ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4567:2: () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4567:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4568:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,New,FOLLOW_New_in_ruleXConstructorCall10398); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4578:1: ( ( ruleQualifiedName ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4579:1: ( ruleQualifiedName )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4579:1: ( ruleQualifiedName )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4580:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXConstructorCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleXConstructorCall10420);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4593:2: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )?
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4593:3: ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4593:3: ( ( LessThanSign )=>otherlv_3= LessThanSign )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4593:4: ( LessThanSign )=>otherlv_3= LessThanSign
                    {
                    otherlv_3=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleXConstructorCall10441); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                          
                    }

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4600:2: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4601:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4601:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4602:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall10462);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_4_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4618:2: (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop79:
                    do {
                        int alt79=2;
                        int LA79_0 = input.LA(1);

                        if ( (LA79_0==Comma) ) {
                            alt79=1;
                        }


                        switch (alt79) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4619:2: otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXConstructorCall10476); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4623:1: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4624:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4624:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4625:3: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall10496);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_6_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop79;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleXConstructorCall10511); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4646:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4646:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4646:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4646:5: ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4654:1: (lv_explicitConstructorCall_8_0= LeftParenthesis )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4655:3: lv_explicitConstructorCall_8_0= LeftParenthesis
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXConstructorCall10545); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXConstructorCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt82=3;
                    alt82 = dfa82.predict(input);
                    switch (alt82) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4688:1: (lv_arguments_9_0= ruleXShortClosure )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4689:3: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXShortClosure_in_ruleXConstructorCall10625);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_9_0, 
                                      		"XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4706:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4706:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4706:7: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4706:7: ( (lv_arguments_10_0= ruleXExpression ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4707:1: (lv_arguments_10_0= ruleXExpression )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4707:1: (lv_arguments_10_0= ruleXExpression )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4708:3: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXConstructorCall10653);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_10_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4724:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop81:
                            do {
                                int alt81=2;
                                int LA81_0 = input.LA(1);

                                if ( (LA81_0==Comma) ) {
                                    alt81=1;
                                }


                                switch (alt81) {
                            	case 1 :
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4725:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXConstructorCall10667); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	          
                            	    }
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4729:1: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4730:1: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4730:1: (lv_arguments_12_0= ruleXExpression )
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4731:3: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleXExpression_in_ruleXConstructorCall10687);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"arguments",
                            	              		lv_arguments_12_0, 
                            	              		"XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop81;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXConstructorCall10705); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                          
                    }

                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4752:3: ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4752:4: ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4756:1: (lv_arguments_14_0= ruleXClosure )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4757:3: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXConstructorCall10738);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_14_0, 
                              		"XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4781:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4782:2: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4783:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXBooleanLiteral_in_entryRuleXBooleanLiteral10774);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXBooleanLiteral10784); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4790:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4793:28: ( ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4794:1: ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4794:1: ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4794:2: () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4794:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4795:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
                          current);
                  
            }

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4800:2: (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==False) ) {
                alt85=1;
            }
            else if ( (LA85_0==True) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4801:2: otherlv_1= False
                    {
                    otherlv_1=(Token)match(input,False,FOLLOW_False_in_ruleXBooleanLiteral10832); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4806:6: ( (lv_isTrue_2_0= True ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4806:6: ( (lv_isTrue_2_0= True ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4807:1: (lv_isTrue_2_0= True )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4807:1: (lv_isTrue_2_0= True )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4808:3: lv_isTrue_2_0= True
                    {
                    lv_isTrue_2_0=(Token)match(input,True,FOLLOW_True_in_ruleXBooleanLiteral10856); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "isTrue", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4830:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4831:2: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4832:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXNullLiteral_in_entryRuleXNullLiteral10903);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXNullLiteral10913); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4839:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= Null ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4842:28: ( ( () otherlv_1= Null ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4843:1: ( () otherlv_1= Null )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4843:1: ( () otherlv_1= Null )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4843:2: () otherlv_1= Null
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4843:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4844:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Null,FOLLOW_Null_in_ruleXNullLiteral10960); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4862:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4863:2: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4864:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXNumberLiteral_in_entryRuleXNumberLiteral10994);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXNumberLiteral11004); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4871:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4874:28: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4875:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4875:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4875:2: () ( (lv_value_1_0= ruleNumber ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4875:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4876:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
                          current);
                  
            }

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4881:2: ( (lv_value_1_0= ruleNumber ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4882:1: (lv_value_1_0= ruleNumber )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4882:1: (lv_value_1_0= ruleNumber )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4883:3: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNumber_in_ruleXNumberLiteral11059);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"Number");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4907:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4908:2: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4909:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXStringLiteral_in_entryRuleXStringLiteral11094);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXStringLiteral11104); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4916:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4919:28: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4920:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4920:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4920:2: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4920:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4921:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
                          current);
                  
            }

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4926:2: ( (lv_value_1_0= RULE_STRING ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4927:1: (lv_value_1_0= RULE_STRING )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4927:1: (lv_value_1_0= RULE_STRING )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4928:3: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXStringLiteral11155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4952:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4953:2: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4954:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXTypeLiteral_in_entryRuleXTypeLiteral11195);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXTypeLiteral11205); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4961:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4964:28: ( ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4965:1: ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4965:1: ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4965:2: () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4965:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4966:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Typeof,FOLLOW_Typeof_in_ruleXTypeLiteral11252); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXTypeLiteral11264); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4981:1: ( ( ruleQualifiedName ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4982:1: ( ruleQualifiedName )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4982:1: ( ruleQualifiedName )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4983:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXTypeLiteralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleXTypeLiteral11286);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4996:2: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==LeftSquareBracket) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4997:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4997:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4998:3: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleArrayBrackets_in_ruleXTypeLiteral11307);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arrayDimensions",
            	              		lv_arrayDimensions_4_0, 
            	              		"ArrayBrackets");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXTypeLiteral11321); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5027:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5028:2: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5029:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXThrowExpression_in_entryRuleXThrowExpression11355);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXThrowExpression11365); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5036:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5039:28: ( ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5040:1: ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5040:1: ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5040:2: () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5040:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5041:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Throw,FOLLOW_Throw_in_ruleXThrowExpression11412); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5051:1: ( (lv_expression_2_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5052:1: (lv_expression_2_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5052:1: (lv_expression_2_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5053:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXThrowExpression11432);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5077:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5078:2: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5079:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXReturnExpression_in_entryRuleXReturnExpression11467);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXReturnExpression11477); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5086:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5089:28: ( ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5090:1: ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5090:1: ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5090:2: () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5090:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5091:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_Return_in_ruleXReturnExpression11524); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5101:1: ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt87=2;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5101:2: ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5154:1: (lv_expression_2_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5155:3: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXReturnExpression11724);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5179:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5180:2: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5181:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXTryCatchFinallyExpression_in_entryRuleXTryCatchFinallyExpression11760);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXTryCatchFinallyExpression11770); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5188:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5191:28: ( ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5192:1: ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5192:1: ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5192:2: () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5192:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5193:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Try,FOLLOW_Try_in_ruleXTryCatchFinallyExpression11817); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5203:1: ( (lv_expression_2_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5204:1: (lv_expression_2_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5204:1: (lv_expression_2_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5205:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression11837);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5221:2: ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==Catch) ) {
                alt90=1;
            }
            else if ( (LA90_0==Finally) ) {
                alt90=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5221:3: ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5221:3: ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5221:4: ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5221:4: ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt88=0;
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==Catch) ) {
                            int LA88_2 = input.LA(2);

                            if ( (synpred38_InternalRuleEngineParser()) ) {
                                alt88=1;
                            }


                        }


                        switch (alt88) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5221:5: ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5224:1: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5225:3: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXCatchClause_in_ruleXTryCatchFinallyExpression11866);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"catchClauses",
                    	              		lv_catchClauses_3_0, 
                    	              		"XCatchClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt88 >= 1 ) break loop88;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(88, input);
                                throw eee;
                        }
                        cnt88++;
                    } while (true);

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5241:3: ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==Finally) ) {
                        int LA89_1 = input.LA(2);

                        if ( (synpred39_InternalRuleEngineParser()) ) {
                            alt89=1;
                        }
                    }
                    switch (alt89) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5241:4: ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5241:4: ( ( Finally )=>otherlv_4= Finally )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5241:5: ( Finally )=>otherlv_4= Finally
                            {
                            otherlv_4=(Token)match(input,Finally,FOLLOW_Finally_in_ruleXTryCatchFinallyExpression11888); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                                  
                            }

                            }

                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5248:2: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5249:1: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5249:1: (lv_finallyExpression_5_0= ruleXExpression )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5250:3: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression11909);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finallyExpression",
                                      		lv_finallyExpression_5_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5267:6: (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5267:6: (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5268:2: otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,Finally,FOLLOW_Finally_in_ruleXTryCatchFinallyExpression11932); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5272:1: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5273:1: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5273:1: (lv_finallyExpression_7_0= ruleXExpression )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5274:3: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression11952);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"finallyExpression",
                              		lv_finallyExpression_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5298:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5299:2: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5300:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXSynchronizedExpression_in_entryRuleXSynchronizedExpression11989);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXSynchronizedExpression11999); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5307:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5310:28: ( ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5311:1: ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5311:1: ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5311:2: ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5311:2: ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5311:3: ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5316:5: ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5316:6: () otherlv_1= Synchronized otherlv_2= LeftParenthesis
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5316:6: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5317:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Synchronized,FOLLOW_Synchronized_in_ruleXSynchronizedExpression12062); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXSynchronizedExpression12074); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5332:3: ( (lv_param_3_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5333:1: (lv_param_3_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5333:1: (lv_param_3_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5334:3: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXSynchronizedExpression12096);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"param",
                      		lv_param_3_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXSynchronizedExpression12109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5355:1: ( (lv_expression_5_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5356:1: (lv_expression_5_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5356:1: (lv_expression_5_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5357:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXSynchronizedExpression12129);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5381:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5382:2: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5383:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_ruleXCatchClause_in_entryRuleXCatchClause12164);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCatchClause12174); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5390:1: ruleXCatchClause returns [EObject current=null] : ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5393:28: ( ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5394:1: ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5394:1: ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5394:2: ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5394:2: ( ( Catch )=>otherlv_0= Catch )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5394:3: ( Catch )=>otherlv_0= Catch
            {
            otherlv_0=(Token)match(input,Catch,FOLLOW_Catch_in_ruleXCatchClause12219); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
                  
            }

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXCatchClause12232); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5406:1: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5407:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5407:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5408:3: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFullJvmFormalParameter_in_ruleXCatchClause12252);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_2_0, 
                      		"FullJvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXCatchClause12265); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5429:1: ( (lv_expression_4_0= ruleXExpression ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5430:1: (lv_expression_4_0= ruleXExpression )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5430:1: (lv_expression_4_0= ruleXExpression )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5431:3: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXCatchClause12285);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5455:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5456:1: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5457:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName12321);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName12332); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5464:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5468:6: ( (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5469:1: (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5469:1: (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5470:5: this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedName12379);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ValidID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5480:1: ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==FullStop) ) {
                    int LA91_2 = input.LA(2);

                    if ( (LA91_2==RULE_ID) ) {
                        int LA91_3 = input.LA(3);

                        if ( (synpred42_InternalRuleEngineParser()) ) {
                            alt91=1;
                        }


                    }


                }


                switch (alt91) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5480:2: ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID
            	    {
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5480:2: ( ( FullStop )=>kw= FullStop )
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5480:3: ( FullStop )=>kw= FullStop
            	    {
            	    kw=(Token)match(input,FullStop,FOLLOW_FullStop_in_ruleQualifiedName12407); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedName12430);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5507:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5511:1: (iv_ruleNumber= ruleNumber EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5512:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_ruleNumber_in_entryRuleNumber12483);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNumber12494); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5522:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5527:6: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5528:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5528:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_HEX) ) {
                alt95=1;
            }
            else if ( ((LA95_0>=RULE_INT && LA95_0<=RULE_DECIMAL)) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5528:6: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleNumber12538); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5536:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5536:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5536:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5536:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==RULE_INT) ) {
                        alt92=1;
                    }
                    else if ( (LA92_0==RULE_DECIMAL) ) {
                        alt92=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 92, 0, input);

                        throw nvae;
                    }
                    switch (alt92) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5536:12: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber12566); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_INT_1);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5544:10: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_RULE_DECIMAL_in_ruleNumber12592); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_DECIMAL_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
                                  
                            }

                            }
                            break;

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5551:2: (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==FullStop) ) {
                        int LA94_1 = input.LA(2);

                        if ( ((LA94_1>=RULE_INT && LA94_1<=RULE_DECIMAL)) ) {
                            alt94=1;
                        }
                    }
                    switch (alt94) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5552:2: kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,FullStop,FOLLOW_FullStop_in_ruleNumber12612); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
                                  
                            }
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5557:1: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt93=2;
                            int LA93_0 = input.LA(1);

                            if ( (LA93_0==RULE_INT) ) {
                                alt93=1;
                            }
                            else if ( (LA93_0==RULE_DECIMAL) ) {
                                alt93=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 93, 0, input);

                                throw nvae;
                            }
                            switch (alt93) {
                                case 1 :
                                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5557:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber12628); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_INT_4);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
                                          
                                    }

                                    }
                                    break;
                                case 2 :
                                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5565:10: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_RULE_DECIMAL_in_ruleNumber12654); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_DECIMAL_5);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5585:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5586:2: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5587:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference12708);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmTypeReference12718); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5594:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5597:28: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5598:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5598:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_ID) ) {
                alt97=1;
            }
            else if ( (LA97_0==EqualsSignGreaterThanSign||LA97_0==LeftParenthesis) ) {
                alt97=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5598:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5598:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5599:5: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleJvmTypeReference12766);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JvmParameterizedTypeReference_0;
                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5607:1: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop96:
                    do {
                        int alt96=2;
                        int LA96_0 = input.LA(1);

                        if ( (LA96_0==LeftSquareBracket) ) {
                            int LA96_2 = input.LA(2);

                            if ( (LA96_2==RightSquareBracket) ) {
                                int LA96_3 = input.LA(3);

                                if ( (synpred43_InternalRuleEngineParser()) ) {
                                    alt96=1;
                                }


                            }


                        }


                        switch (alt96) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5607:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5608:23: ( () ruleArrayBrackets )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5608:24: () ruleArrayBrackets
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5608:24: ()
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5609:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_ruleArrayBrackets_in_ruleJvmTypeReference12801);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5624:5: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXFunctionTypeRef_in_ruleJvmTypeReference12832);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_XFunctionTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5640:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5641:1: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5642:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_ruleArrayBrackets_in_entryRuleArrayBrackets12867);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleArrayBrackets12878); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5649:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= LeftSquareBracket kw= RightSquareBracket ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5653:6: ( (kw= LeftSquareBracket kw= RightSquareBracket ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5654:1: (kw= LeftSquareBracket kw= RightSquareBracket )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5654:1: (kw= LeftSquareBracket kw= RightSquareBracket )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5655:2: kw= LeftSquareBracket kw= RightSquareBracket
            {
            kw=(Token)match(input,LeftSquareBracket,FOLLOW_LeftSquareBracket_in_ruleArrayBrackets12916); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
                  
            }
            kw=(Token)match(input,RightSquareBracket,FOLLOW_RightSquareBracket_in_ruleArrayBrackets12929); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5674:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5675:2: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5676:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_ruleXFunctionTypeRef_in_entryRuleXFunctionTypeRef12968);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXFunctionTypeRef12978); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5683:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5686:28: ( ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5687:1: ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5687:1: ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5687:2: (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5687:2: (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==LeftParenthesis) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5688:2: otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_ruleXFunctionTypeRef13017); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5692:1: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==EqualsSignGreaterThanSign||LA99_0==LeftParenthesis||LA99_0==RULE_ID) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5692:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5692:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5693:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5693:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5694:3: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13038);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"paramTypes",
                                      		lv_paramTypes_1_0, 
                                      		"JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5710:2: (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop98:
                            do {
                                int alt98=2;
                                int LA98_0 = input.LA(1);

                                if ( (LA98_0==Comma) ) {
                                    alt98=1;
                                }


                                switch (alt98) {
                            	case 1 :
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5711:2: otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_Comma_in_ruleXFunctionTypeRef13052); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5715:1: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5716:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5716:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5717:3: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13072);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"paramTypes",
                            	              		lv_paramTypes_3_0, 
                            	              		"JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop98;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_RightParenthesis_in_ruleXFunctionTypeRef13089); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_EqualsSignGreaterThanSign_in_ruleXFunctionTypeRef13103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5743:1: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5744:1: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5744:1: (lv_returnType_6_0= ruleJvmTypeReference )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5745:3: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13123);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_6_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5769:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5770:2: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5771:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_entryRuleJvmParameterizedTypeReference13158);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmParameterizedTypeReference13168); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5778:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5781:28: ( ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5782:1: ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5782:1: ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5782:2: ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5782:2: ( ( ruleQualifiedName ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5783:1: ( ruleQualifiedName )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5783:1: ( ruleQualifiedName )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5784:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleJvmParameterizedTypeReference13216);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5797:2: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?
            int alt105=2;
            alt105 = dfa105.predict(input);
            switch (alt105) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5797:3: ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5797:3: ( ( LessThanSign )=>otherlv_1= LessThanSign )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5797:4: ( LessThanSign )=>otherlv_1= LessThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleJvmParameterizedTypeReference13237); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5804:2: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5805:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5805:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5806:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13258);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_2_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5822:2: (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==Comma) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5823:2: otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_Comma_in_ruleJvmParameterizedTypeReference13272); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5827:1: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5828:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5828:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5829:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13292);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"arguments",
                    	              		lv_arguments_4_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop101;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleJvmParameterizedTypeReference13307); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                          
                    }
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:1: ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==FullStop) ) {
                            int LA104_2 = input.LA(2);

                            if ( (LA104_2==RULE_ID) ) {
                                int LA104_3 = input.LA(3);

                                if ( (synpred45_InternalRuleEngineParser()) ) {
                                    alt104=1;
                                }


                            }


                        }


                        switch (alt104) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:2: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:2: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:3: ( ( () FullStop ) )=> ( () otherlv_7= FullStop )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5853:5: ( () otherlv_7= FullStop )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5853:6: () otherlv_7= FullStop
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5853:6: ()
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5854:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,FullStop,FOLLOW_FullStop_in_ruleJvmParameterizedTypeReference13342); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	          
                    	    }

                    	    }


                    	    }

                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5864:3: ( ( ruleValidID ) )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5865:1: ( ruleValidID )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5865:1: ( ruleValidID )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5866:3: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	              
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleValidID_in_ruleJvmParameterizedTypeReference13366);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5879:2: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
                    	    int alt103=2;
                    	    alt103 = dfa103.predict(input);
                    	    switch (alt103) {
                    	        case 1 :
                    	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5879:3: ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign
                    	            {
                    	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5879:3: ( ( LessThanSign )=>otherlv_9= LessThanSign )
                    	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5879:4: ( LessThanSign )=>otherlv_9= LessThanSign
                    	            {
                    	            otherlv_9=(Token)match(input,LessThanSign,FOLLOW_LessThanSign_in_ruleJvmParameterizedTypeReference13387); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	                  
                    	            }

                    	            }

                    	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5886:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5887:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5887:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5888:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13408);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"arguments",
                    	                      		lv_arguments_10_0, 
                    	                      		"JvmArgumentTypeReference");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }

                    	            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5904:2: (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop102:
                    	            do {
                    	                int alt102=2;
                    	                int LA102_0 = input.LA(1);

                    	                if ( (LA102_0==Comma) ) {
                    	                    alt102=1;
                    	                }


                    	                switch (alt102) {
                    	            	case 1 :
                    	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5905:2: otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,Comma,FOLLOW_Comma_in_ruleJvmParameterizedTypeReference13422); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	          	newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	          
                    	            	    }
                    	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5909:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5910:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5910:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5911:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {
                    	            	       
                    	            	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
                    	            	      	    
                    	            	    }
                    	            	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13442);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      	        if (current==null) {
                    	            	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      	        }
                    	            	             		add(
                    	            	             			current, 
                    	            	             			"arguments",
                    	            	              		lv_arguments_12_0, 
                    	            	              		"JvmArgumentTypeReference");
                    	            	      	        afterParserOrEnumRuleCall();
                    	            	      	    
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop102;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_ruleJvmParameterizedTypeReference13457); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5940:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5941:2: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5942:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_entryRuleJvmArgumentTypeReference13497);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmArgumentTypeReference13507); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5949:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5952:28: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5953:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5953:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==EqualsSignGreaterThanSign||LA106_0==LeftParenthesis||LA106_0==RULE_ID) ) {
                alt106=1;
            }
            else if ( (LA106_0==QuestionMark) ) {
                alt106=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5954:5: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmArgumentTypeReference13554);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JvmTypeReference_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5964:5: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmWildcardTypeReference_in_ruleJvmArgumentTypeReference13581);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JvmWildcardTypeReference_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5980:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5981:2: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5982:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmWildcardTypeReference_in_entryRuleJvmWildcardTypeReference13615);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmWildcardTypeReference13625); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5989:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5992:28: ( ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5993:1: ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5993:1: ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5993:2: () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5993:2: ()
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5994:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,QuestionMark,FOLLOW_QuestionMark_in_ruleJvmWildcardTypeReference13672); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6004:1: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt109=3;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==Extends) ) {
                alt109=1;
            }
            else if ( (LA109_0==Super) ) {
                alt109=2;
            }
            switch (alt109) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6004:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6004:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6004:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6004:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6005:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6005:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6006:3: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmUpperBound_in_ruleJvmWildcardTypeReference13694);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_2_0, 
                              		"JvmUpperBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6022:2: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==Ampersand) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6023:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6023:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6024:3: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmUpperBoundAnded_in_ruleJvmWildcardTypeReference13715);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_3_0, 
                    	              		"JvmUpperBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop107;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6041:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6041:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6041:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6041:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6042:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6042:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6043:3: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmLowerBound_in_ruleJvmWildcardTypeReference13745);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_4_0, 
                              		"JvmLowerBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6059:2: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==Ampersand) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6060:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6060:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6061:3: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmLowerBoundAnded_in_ruleJvmWildcardTypeReference13766);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_5_0, 
                    	              		"JvmLowerBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop108;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6085:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6086:2: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6087:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_ruleJvmUpperBound_in_entryRuleJvmUpperBound13805);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmUpperBound13815); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6094:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6097:28: ( (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6098:1: (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6098:1: (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6099:2: otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Extends,FOLLOW_Extends_in_ruleJvmUpperBound13853); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6103:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6104:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6104:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6105:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBound13873);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6129:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6130:2: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6131:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded13908);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmUpperBoundAnded13918); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6138:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6141:28: ( (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6142:1: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6142:1: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6143:2: otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Ampersand,FOLLOW_Ampersand_in_ruleJvmUpperBoundAnded13956); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6147:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6148:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6148:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6149:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBoundAnded13976);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6173:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6174:2: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6175:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_ruleJvmLowerBound_in_entryRuleJvmLowerBound14011);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmLowerBound14021); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6182:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6185:28: ( (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6186:1: (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6186:1: (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6187:2: otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Super,FOLLOW_Super_in_ruleJvmLowerBound14059); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6191:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6192:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6192:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6193:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBound14079);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6217:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6218:2: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6219:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_ruleJvmLowerBoundAnded_in_entryRuleJvmLowerBoundAnded14114);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmLowerBoundAnded14124); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6226:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6229:28: ( (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6230:1: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6230:1: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6231:2: otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Ampersand,FOLLOW_Ampersand_in_ruleJvmLowerBoundAnded14162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6235:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6236:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6236:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6237:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBoundAnded14182);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6263:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6264:1: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6265:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard14220);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard14231); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6272:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6276:6: ( (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6277:1: (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6277:1: (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6278:5: this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard14278);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            kw=(Token)match(input,FullStop,FOLLOW_FullStop_in_ruleQualifiedNameWithWildcard14296); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); 
                  
            }
            kw=(Token)match(input,Asterisk,FOLLOW_Asterisk_in_ruleQualifiedNameWithWildcard14309); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6308:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6309:1: (iv_ruleValidID= ruleValidID EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6310:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_ruleValidID_in_entryRuleValidID14349);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleValidID14360); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6317:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6321:6: (this_ID_0= RULE_ID )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6322:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleValidID14399); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportDeclaration"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6339:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6340:2: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6341:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleXImportDeclaration_in_entryRuleXImportDeclaration14444);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXImportDeclaration14454); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6348:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6351:28: ( (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? ) )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6352:1: (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? )
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6352:1: (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6353:2: otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )?
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_Import_in_ruleXImportDeclaration14492); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
                  
            }
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6357:1: ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt112=3;
            alt112 = dfa112.predict(input);
            switch (alt112) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6357:2: ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6357:2: ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6357:3: ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6357:3: ( (lv_static_1_0= Static ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6358:1: (lv_static_1_0= Static )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6358:1: (lv_static_1_0= Static )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6359:3: lv_static_1_0= Static
                    {
                    lv_static_1_0=(Token)match(input,Static,FOLLOW_Static_in_ruleXImportDeclaration14512); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6373:2: ( (lv_extension_2_0= Extension ) )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==Extension) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6374:1: (lv_extension_2_0= Extension )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6374:1: (lv_extension_2_0= Extension )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6375:3: lv_extension_2_0= Extension
                            {
                            lv_extension_2_0=(Token)match(input,Extension,FOLLOW_Extension_in_ruleXImportDeclaration14542); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "extension", true, "extension");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6389:3: ( ( ruleQualifiedNameInStaticImport ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6390:1: ( ruleQualifiedNameInStaticImport )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6390:1: ( ruleQualifiedNameInStaticImport )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6391:3: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedNameInStaticImport_in_ruleXImportDeclaration14577);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6404:2: ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==Asterisk) ) {
                        alt111=1;
                    }
                    else if ( (LA111_0==RULE_ID) ) {
                        alt111=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 111, 0, input);

                        throw nvae;
                    }
                    switch (alt111) {
                        case 1 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6404:3: ( (lv_wildcard_4_0= Asterisk ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6404:3: ( (lv_wildcard_4_0= Asterisk ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6405:1: (lv_wildcard_4_0= Asterisk )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6405:1: (lv_wildcard_4_0= Asterisk )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6406:3: lv_wildcard_4_0= Asterisk
                            {
                            lv_wildcard_4_0=(Token)match(input,Asterisk,FOLLOW_Asterisk_in_ruleXImportDeclaration14597); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "wildcard", true, "*");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6421:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6421:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6422:1: (lv_memberName_5_0= ruleValidID )
                            {
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6422:1: (lv_memberName_5_0= ruleValidID )
                            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6423:3: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleValidID_in_ruleXImportDeclaration14635);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"memberName",
                                      		lv_memberName_5_0, 
                                      		"ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6440:6: ( ( ruleQualifiedName ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6440:6: ( ( ruleQualifiedName ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6441:1: ( ruleQualifiedName )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6441:1: ( ruleQualifiedName )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6442:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleXImportDeclaration14666);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6456:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6456:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6457:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6457:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6458:3: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedNameWithWildcard_in_ruleXImportDeclaration14693);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"importedNamespace",
                              		lv_importedNamespace_7_0, 
                              		"QualifiedNameWithWildcard");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6474:3: (otherlv_8= Semicolon )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==Semicolon) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6475:2: otherlv_8= Semicolon
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_Semicolon_in_ruleXImportDeclaration14708); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6487:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6488:1: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6489:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedNameInStaticImport_in_entryRuleQualifiedNameInStaticImport14745);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedNameInStaticImport14756); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6496:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= FullStop )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6500:6: ( (this_ValidID_0= ruleValidID kw= FullStop )+ )
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6501:1: (this_ValidID_0= ruleValidID kw= FullStop )+
            {
            // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6501:1: (this_ValidID_0= ruleValidID kw= FullStop )+
            int cnt114=0;
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==RULE_ID) ) {
                    int LA114_2 = input.LA(2);

                    if ( (LA114_2==FullStop) ) {
                        alt114=1;
                    }


                }


                switch (alt114) {
            	case 1 :
            	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:6502:5: this_ValidID_0= ruleValidID kw= FullStop
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedNameInStaticImport14803);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }
            	    kw=(Token)match(input,FullStop,FOLLOW_FullStop_in_ruleQualifiedNameInStaticImport14821); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt114 >= 1 ) break loop114;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(114, input);
                        throw eee;
                }
                cnt114++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"

    // $ANTLR start synpred1_InternalRuleEngineParser
    public final void synpred1_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:4: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:4: ( () ( ( ruleOpMultiAssign ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:5: () ( ( ruleOpMultiAssign ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:519:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:520:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:520:2: ( ( ruleOpMultiAssign ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:521:1: ( ruleOpMultiAssign )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:521:1: ( ruleOpMultiAssign )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:522:3: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_ruleOpMultiAssign_in_synpred1_InternalRuleEngineParser1107);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalRuleEngineParser

    // $ANTLR start synpred2_InternalRuleEngineParser
    public final void synpred2_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:3: ( ( () ( ( ruleOpOr ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:4: ( () ( ( ruleOpOr ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:4: ( () ( ( ruleOpOr ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:5: () ( ( ruleOpOr ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:715:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:716:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:716:2: ( ( ruleOpOr ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:717:1: ( ruleOpOr )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:717:1: ( ruleOpOr )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:718:3: ruleOpOr
        {
        pushFollow(FOLLOW_ruleOpOr_in_synpred2_InternalRuleEngineParser1627);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalRuleEngineParser

    // $ANTLR start synpred3_InternalRuleEngineParser
    public final void synpred3_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:3: ( ( () ( ( ruleOpAnd ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:4: ( () ( ( ruleOpAnd ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:4: ( () ( ( ruleOpAnd ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:5: () ( ( ruleOpAnd ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:817:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:818:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:818:2: ( ( ruleOpAnd ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:819:1: ( ruleOpAnd )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:819:1: ( ruleOpAnd )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:820:3: ruleOpAnd
        {
        pushFollow(FOLLOW_ruleOpAnd_in_synpred3_InternalRuleEngineParser1884);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalRuleEngineParser

    // $ANTLR start synpred4_InternalRuleEngineParser
    public final void synpred4_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:3: ( ( () ( ( ruleOpEquality ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:4: ( () ( ( ruleOpEquality ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:4: ( () ( ( ruleOpEquality ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:5: () ( ( ruleOpEquality ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:919:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:920:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:920:2: ( ( ruleOpEquality ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:921:1: ( ruleOpEquality )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:921:1: ( ruleOpEquality )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:922:3: ruleOpEquality
        {
        pushFollow(FOLLOW_ruleOpEquality_in_synpred4_InternalRuleEngineParser2141);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalRuleEngineParser

    // $ANTLR start synpred5_InternalRuleEngineParser
    public final void synpred5_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:4: ( ( () Instanceof ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:5: ( () Instanceof )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:5: ( () Instanceof )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:6: () Instanceof
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1042:6: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1043:1: 
        {
        }

        match(input,Instanceof,FOLLOW_Instanceof_in_synpred5_InternalRuleEngineParser2453); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalRuleEngineParser

    // $ANTLR start synpred6_InternalRuleEngineParser
    public final void synpred6_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:8: ( ( () ( ( ruleOpCompare ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:9: ( () ( ( ruleOpCompare ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:9: ( () ( ( ruleOpCompare ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:10: () ( ( ruleOpCompare ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1075:10: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1076:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1076:2: ( ( ruleOpCompare ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1077:1: ( ruleOpCompare )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1077:1: ( ruleOpCompare )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1078:3: ruleOpCompare
        {
        pushFollow(FOLLOW_ruleOpCompare_in_synpred6_InternalRuleEngineParser2523);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalRuleEngineParser

    // $ANTLR start synpred7_InternalRuleEngineParser
    public final void synpred7_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:3: ( ( () ( ( ruleOpOther ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:4: ( () ( ( ruleOpOther ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:4: ( () ( ( ruleOpOther ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:5: () ( ( ruleOpOther ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1204:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1205:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1205:2: ( ( ruleOpOther ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1206:1: ( ruleOpOther )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1206:1: ( ruleOpOther )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1207:3: ruleOpOther
        {
        pushFollow(FOLLOW_ruleOpOther_in_synpred7_InternalRuleEngineParser2855);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalRuleEngineParser

    // $ANTLR start synpred8_InternalRuleEngineParser
    public final void synpred8_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1317:3: ( ( GreaterThanSign GreaterThanSign ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1317:4: ( GreaterThanSign GreaterThanSign )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1317:4: ( GreaterThanSign GreaterThanSign )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1318:2: GreaterThanSign GreaterThanSign
        {
        match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_synpred8_InternalRuleEngineParser3123); if (state.failed) return ;
        match(input,GreaterThanSign,FOLLOW_GreaterThanSign_in_synpred8_InternalRuleEngineParser3128); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalRuleEngineParser

    // $ANTLR start synpred9_InternalRuleEngineParser
    public final void synpred9_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1347:3: ( ( LessThanSign LessThanSign ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1347:4: ( LessThanSign LessThanSign )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1347:4: ( LessThanSign LessThanSign )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1348:2: LessThanSign LessThanSign
        {
        match(input,LessThanSign,FOLLOW_LessThanSign_in_synpred9_InternalRuleEngineParser3210); if (state.failed) return ;
        match(input,LessThanSign,FOLLOW_LessThanSign_in_synpred9_InternalRuleEngineParser3215); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalRuleEngineParser

    // $ANTLR start synpred10_InternalRuleEngineParser
    public final void synpred10_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:3: ( ( () ( ( ruleOpAdd ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:4: ( () ( ( ruleOpAdd ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:4: ( () ( ( ruleOpAdd ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:5: () ( ( ruleOpAdd ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1421:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1422:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1422:2: ( ( ruleOpAdd ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1423:1: ( ruleOpAdd )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1423:1: ( ruleOpAdd )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1424:3: ruleOpAdd
        {
        pushFollow(FOLLOW_ruleOpAdd_in_synpred10_InternalRuleEngineParser3436);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalRuleEngineParser

    // $ANTLR start synpred11_InternalRuleEngineParser
    public final void synpred11_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:3: ( ( () ( ( ruleOpMulti ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:4: ( () ( ( ruleOpMulti ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:4: ( () ( ( ruleOpMulti ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:5: () ( ( ruleOpMulti ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1530:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1531:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1531:2: ( ( ruleOpMulti ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1532:1: ( ruleOpMulti )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1532:1: ( ruleOpMulti )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1533:3: ruleOpMulti
        {
        pushFollow(FOLLOW_ruleOpMulti_in_synpred11_InternalRuleEngineParser3714);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalRuleEngineParser

    // $ANTLR start synpred12_InternalRuleEngineParser
    public final void synpred12_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:3: ( ( () As ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:4: ( () As )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:4: ( () As )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:5: () As
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1765:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1766:1: 
        {
        }

        match(input,As,FOLLOW_As_in_synpred12_InternalRuleEngineParser4304); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalRuleEngineParser

    // $ANTLR start synpred13_InternalRuleEngineParser
    public final void synpred13_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1827:2: ( ( () ( ( ruleOpPostfix ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1827:3: ( () ( ( ruleOpPostfix ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1827:3: ( () ( ( ruleOpPostfix ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1827:4: () ( ( ruleOpPostfix ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1827:4: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1828:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1828:2: ( ( ruleOpPostfix ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1829:1: ( ruleOpPostfix )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1829:1: ( ruleOpPostfix )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1830:3: ruleOpPostfix
        {
        pushFollow(FOLLOW_ruleOpPostfix_in_synpred13_InternalRuleEngineParser4459);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalRuleEngineParser

    // $ANTLR start synpred14_InternalRuleEngineParser
    public final void synpred14_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:4: ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:5: ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:5: ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:6: () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1918:6: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1919:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1919:2: ( FullStop | ( ( ColonColon ) ) )
        int alt115=2;
        int LA115_0 = input.LA(1);

        if ( (LA115_0==FullStop) ) {
            alt115=1;
        }
        else if ( (LA115_0==ColonColon) ) {
            alt115=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 115, 0, input);

            throw nvae;
        }
        switch (alt115) {
            case 1 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1920:1: FullStop
                {
                match(input,FullStop,FOLLOW_FullStop_in_synpred14_InternalRuleEngineParser4712); if (state.failed) return ;

                }
                break;
            case 2 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1922:6: ( ( ColonColon ) )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1922:6: ( ( ColonColon ) )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1923:1: ( ColonColon )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1923:1: ( ColonColon )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1925:1: ColonColon
                {
                match(input,ColonColon,FOLLOW_ColonColon_in_synpred14_InternalRuleEngineParser4725); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1929:3: ( ( ruleFeatureCallID ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1930:1: ( ruleFeatureCallID )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1930:1: ( ruleFeatureCallID )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:1931:3: ruleFeatureCallID
        {
        pushFollow(FOLLOW_ruleFeatureCallID_in_synpred14_InternalRuleEngineParser4739);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_ruleOpSingleAssign_in_synpred14_InternalRuleEngineParser4744);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalRuleEngineParser

    // $ANTLR start synpred15_InternalRuleEngineParser
    public final void synpred15_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:8: ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:9: ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:9: ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:10: () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2003:10: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2004:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2004:2: ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) )
        int alt116=3;
        switch ( input.LA(1) ) {
        case FullStop:
            {
            alt116=1;
            }
            break;
        case QuestionMarkFullStop:
            {
            alt116=2;
            }
            break;
        case ColonColon:
            {
            alt116=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 116, 0, input);

            throw nvae;
        }

        switch (alt116) {
            case 1 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2005:1: FullStop
                {
                match(input,FullStop,FOLLOW_FullStop_in_synpred15_InternalRuleEngineParser4885); if (state.failed) return ;

                }
                break;
            case 2 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2007:6: ( ( QuestionMarkFullStop ) )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2007:6: ( ( QuestionMarkFullStop ) )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2008:1: ( QuestionMarkFullStop )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2008:1: ( QuestionMarkFullStop )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2010:1: QuestionMarkFullStop
                {
                match(input,QuestionMarkFullStop,FOLLOW_QuestionMarkFullStop_in_synpred15_InternalRuleEngineParser4898); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2015:6: ( ( ColonColon ) )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2015:6: ( ( ColonColon ) )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2016:1: ( ColonColon )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2016:1: ( ColonColon )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2018:1: ColonColon
                {
                match(input,ColonColon,FOLLOW_ColonColon_in_synpred15_InternalRuleEngineParser4916); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalRuleEngineParser

    // $ANTLR start synpred16_InternalRuleEngineParser
    public final void synpred16_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2133:4: ( ( LeftParenthesis ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2134:1: ( LeftParenthesis )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2134:1: ( LeftParenthesis )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2136:1: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_synpred16_InternalRuleEngineParser5139); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalRuleEngineParser

    // $ANTLR start synpred17_InternalRuleEngineParser
    public final void synpred17_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:6: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2156:6: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2157:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2157:2: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt118=2;
        int LA118_0 = input.LA(1);

        if ( (LA118_0==EqualsSignGreaterThanSign||LA118_0==LeftParenthesis||LA118_0==RULE_ID) ) {
            alt118=1;
        }
        switch (alt118) {
            case 1 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2157:3: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2157:3: ( ( ruleJvmFormalParameter ) )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2158:1: ( ruleJvmFormalParameter )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2158:1: ( ruleJvmFormalParameter )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2159:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred17_InternalRuleEngineParser5188);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2161:2: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop117:
                do {
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==Comma) ) {
                        alt117=1;
                    }


                    switch (alt117) {
                	case 1 :
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2162:1: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_Comma_in_synpred17_InternalRuleEngineParser5195); if (state.failed) return ;
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2163:1: ( ( ruleJvmFormalParameter ) )
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2164:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2164:1: ( ruleJvmFormalParameter )
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2165:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred17_InternalRuleEngineParser5201);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop117;
                    }
                } while (true);


                }
                break;

        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2167:6: ( ( VerticalLine ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2168:1: ( VerticalLine )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2168:1: ( VerticalLine )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2170:1: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_VerticalLine_in_synpred17_InternalRuleEngineParser5215); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalRuleEngineParser

    // $ANTLR start synpred18_InternalRuleEngineParser
    public final void synpred18_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2239:4: ( ( () LeftSquareBracket ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2239:5: ( () LeftSquareBracket )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2239:5: ( () LeftSquareBracket )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2239:6: () LeftSquareBracket
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2239:6: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2240:1: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_LeftSquareBracket_in_synpred18_InternalRuleEngineParser5333); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalRuleEngineParser

    // $ANTLR start synpred19_InternalRuleEngineParser
    public final void synpred19_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2311:7: ( ( () Synchronized LeftParenthesis ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2311:8: ( () Synchronized LeftParenthesis )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2311:8: ( () Synchronized LeftParenthesis )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2311:9: () Synchronized LeftParenthesis
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2311:9: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2312:1: 
        {
        }

        match(input,Synchronized,FOLLOW_Synchronized_in_synpred19_InternalRuleEngineParser5520); if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_synpred19_InternalRuleEngineParser5523); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalRuleEngineParser

    // $ANTLR start synpred20_InternalRuleEngineParser
    public final void synpred20_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2356:7: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2356:8: ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2356:8: ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2356:9: () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2356:9: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2357:1: 
        {
        }

        match(input,For,FOLLOW_For_in_synpred20_InternalRuleEngineParser5644); if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_synpred20_InternalRuleEngineParser5647); if (state.failed) return ;
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2361:1: ( ( ruleJvmFormalParameter ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2362:1: ( ruleJvmFormalParameter )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2362:1: ( ruleJvmFormalParameter )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2363:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred20_InternalRuleEngineParser5653);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_Colon_in_synpred20_InternalRuleEngineParser5659); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalRuleEngineParser

    // $ANTLR start synpred21_InternalRuleEngineParser
    public final void synpred21_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2477:7: ( ( () LeftSquareBracket ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2477:8: ( () LeftSquareBracket )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2477:8: ( () LeftSquareBracket )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2477:9: () LeftSquareBracket
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2477:9: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2478:1: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_LeftSquareBracket_in_synpred21_InternalRuleEngineParser5979); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalRuleEngineParser

    // $ANTLR start synpred23_InternalRuleEngineParser
    public final void synpred23_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:5: ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:5: ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:6: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:6: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt120=2;
        int LA120_0 = input.LA(1);

        if ( (LA120_0==EqualsSignGreaterThanSign||LA120_0==LeftParenthesis||LA120_0==RULE_ID) ) {
            alt120=1;
        }
        switch (alt120) {
            case 1 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:7: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2780:7: ( ( ruleJvmFormalParameter ) )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2781:1: ( ruleJvmFormalParameter )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2781:1: ( ruleJvmFormalParameter )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2782:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred23_InternalRuleEngineParser6723);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2784:2: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop119:
                do {
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==Comma) ) {
                        alt119=1;
                    }


                    switch (alt119) {
                	case 1 :
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2785:1: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_Comma_in_synpred23_InternalRuleEngineParser6730); if (state.failed) return ;
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2786:1: ( ( ruleJvmFormalParameter ) )
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2787:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2787:1: ( ruleJvmFormalParameter )
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2788:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred23_InternalRuleEngineParser6736);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop119;
                    }
                } while (true);


                }
                break;

        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2790:6: ( ( VerticalLine ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2791:1: ( VerticalLine )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2791:1: ( VerticalLine )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:2793:1: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_VerticalLine_in_synpred23_InternalRuleEngineParser6750); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalRuleEngineParser

    // $ANTLR start synpred25_InternalRuleEngineParser
    public final void synpred25_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3165:4: ( Else )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3166:1: Else
        {
        match(input,Else,FOLLOW_Else_in_synpred25_InternalRuleEngineParser7522); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalRuleEngineParser

    // $ANTLR start synpred26_InternalRuleEngineParser
    public final void synpred26_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:4: ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:5: ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3222:5: ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3223:1: LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon
        {
        match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_synpred26_InternalRuleEngineParser7659); if (state.failed) return ;
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3224:1: ( ( ruleJvmFormalParameter ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3225:1: ( ruleJvmFormalParameter )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3225:1: ( ruleJvmFormalParameter )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3226:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred26_InternalRuleEngineParser7665);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_Colon_in_synpred26_InternalRuleEngineParser7671); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalRuleEngineParser

    // $ANTLR start synpred27_InternalRuleEngineParser
    public final void synpred27_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:8: ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:9: ( ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:9: ( ( ( ruleJvmFormalParameter ) ) Colon )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:10: ( ( ruleJvmFormalParameter ) ) Colon
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3282:10: ( ( ruleJvmFormalParameter ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3283:1: ( ruleJvmFormalParameter )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3283:1: ( ruleJvmFormalParameter )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:3284:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred27_InternalRuleEngineParser7772);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_Colon_in_synpred27_InternalRuleEngineParser7778); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalRuleEngineParser

    // $ANTLR start synpred29_InternalRuleEngineParser
    public final void synpred29_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:5: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:5: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4025:6: ( ( ruleJvmTypeReference ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4026:1: ( ruleJvmTypeReference )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4026:1: ( ruleJvmTypeReference )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4027:1: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_ruleJvmTypeReference_in_synpred29_InternalRuleEngineParser9250);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4029:2: ( ( ruleValidID ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4030:1: ( ruleValidID )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4030:1: ( ruleValidID )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4031:1: ruleValidID
        {
        pushFollow(FOLLOW_ruleValidID_in_synpred29_InternalRuleEngineParser9259);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalRuleEngineParser

    // $ANTLR start synpred30_InternalRuleEngineParser
    public final void synpred30_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4318:4: ( ( LeftParenthesis ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4319:1: ( LeftParenthesis )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4319:1: ( LeftParenthesis )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4321:1: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_synpred30_InternalRuleEngineParser9794); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalRuleEngineParser

    // $ANTLR start synpred31_InternalRuleEngineParser
    public final void synpred31_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:6: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4341:6: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4342:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4342:2: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt124=2;
        int LA124_0 = input.LA(1);

        if ( (LA124_0==EqualsSignGreaterThanSign||LA124_0==LeftParenthesis||LA124_0==RULE_ID) ) {
            alt124=1;
        }
        switch (alt124) {
            case 1 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4342:3: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4342:3: ( ( ruleJvmFormalParameter ) )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4343:1: ( ruleJvmFormalParameter )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4343:1: ( ruleJvmFormalParameter )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4344:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalRuleEngineParser9843);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4346:2: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop123:
                do {
                    int alt123=2;
                    int LA123_0 = input.LA(1);

                    if ( (LA123_0==Comma) ) {
                        alt123=1;
                    }


                    switch (alt123) {
                	case 1 :
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4347:1: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_Comma_in_synpred31_InternalRuleEngineParser9850); if (state.failed) return ;
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4348:1: ( ( ruleJvmFormalParameter ) )
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4349:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4349:1: ( ruleJvmFormalParameter )
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4350:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalRuleEngineParser9856);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop123;
                    }
                } while (true);


                }
                break;

        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4352:6: ( ( VerticalLine ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4353:1: ( VerticalLine )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4353:1: ( VerticalLine )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4355:1: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_VerticalLine_in_synpred31_InternalRuleEngineParser9870); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalRuleEngineParser

    // $ANTLR start synpred32_InternalRuleEngineParser
    public final void synpred32_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4424:4: ( ( () LeftSquareBracket ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4424:5: ( () LeftSquareBracket )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4424:5: ( () LeftSquareBracket )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4424:6: () LeftSquareBracket
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4424:6: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4425:1: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_LeftSquareBracket_in_synpred32_InternalRuleEngineParser9988); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalRuleEngineParser

    // $ANTLR start synpred33_InternalRuleEngineParser
    public final void synpred33_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4593:4: ( LessThanSign )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4594:1: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_LessThanSign_in_synpred33_InternalRuleEngineParser10433); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalRuleEngineParser

    // $ANTLR start synpred34_InternalRuleEngineParser
    public final void synpred34_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4646:5: ( ( LeftParenthesis ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4647:1: ( LeftParenthesis )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4647:1: ( LeftParenthesis )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4649:1: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_LeftParenthesis_in_synpred34_InternalRuleEngineParser10528); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalRuleEngineParser

    // $ANTLR start synpred35_InternalRuleEngineParser
    public final void synpred35_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:6: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4669:6: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4670:1: 
        {
        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4670:2: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt126=2;
        int LA126_0 = input.LA(1);

        if ( (LA126_0==EqualsSignGreaterThanSign||LA126_0==LeftParenthesis||LA126_0==RULE_ID) ) {
            alt126=1;
        }
        switch (alt126) {
            case 1 :
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4670:3: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4670:3: ( ( ruleJvmFormalParameter ) )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4671:1: ( ruleJvmFormalParameter )
                {
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4671:1: ( ruleJvmFormalParameter )
                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4672:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred35_InternalRuleEngineParser10577);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4674:2: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop125:
                do {
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( (LA125_0==Comma) ) {
                        alt125=1;
                    }


                    switch (alt125) {
                	case 1 :
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4675:1: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_Comma_in_synpred35_InternalRuleEngineParser10584); if (state.failed) return ;
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4676:1: ( ( ruleJvmFormalParameter ) )
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4677:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4677:1: ( ruleJvmFormalParameter )
                	    // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4678:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred35_InternalRuleEngineParser10590);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop125;
                    }
                } while (true);


                }
                break;

        }

        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4680:6: ( ( VerticalLine ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4681:1: ( VerticalLine )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4681:1: ( VerticalLine )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4683:1: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_VerticalLine_in_synpred35_InternalRuleEngineParser10604); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalRuleEngineParser

    // $ANTLR start synpred36_InternalRuleEngineParser
    public final void synpred36_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4752:4: ( ( () LeftSquareBracket ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4752:5: ( () LeftSquareBracket )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4752:5: ( () LeftSquareBracket )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4752:6: () LeftSquareBracket
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4752:6: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:4753:1: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_LeftSquareBracket_in_synpred36_InternalRuleEngineParser10722); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalRuleEngineParser

    // $ANTLR start synpred37_InternalRuleEngineParser
    public final void synpred37_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5101:2: ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:
        {
        if ( input.LA(1)==Synchronized||input.LA(1)==Extension||input.LA(1)==Extends||(input.LA(1)>=Import && input.LA(1)<=Typeof)||(input.LA(1)>=False && input.LA(1)<=While)||input.LA(1)==Null||input.LA(1)==True||(input.LA(1)>=For && input.LA(1)<=Try)||(input.LA(1)>=Do && input.LA(1)<=If)||(input.LA(1)>=ExclamationMark && input.LA(1)<=NumberSign)||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==LessThanSign||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_BEGIN||(input.LA(1)>=RULE_HEX && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalRuleEngineParser

    // $ANTLR start synpred38_InternalRuleEngineParser
    public final void synpred38_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5221:5: ( Catch )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5222:1: Catch
        {
        match(input,Catch,FOLLOW_Catch_in_synpred38_InternalRuleEngineParser11851); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalRuleEngineParser

    // $ANTLR start synpred39_InternalRuleEngineParser
    public final void synpred39_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5241:5: ( Finally )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5242:1: Finally
        {
        match(input,Finally,FOLLOW_Finally_in_synpred39_InternalRuleEngineParser11880); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalRuleEngineParser

    // $ANTLR start synpred42_InternalRuleEngineParser
    public final void synpred42_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5480:3: ( FullStop )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5481:2: FullStop
        {
        match(input,FullStop,FOLLOW_FullStop_in_synpred42_InternalRuleEngineParser12398); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalRuleEngineParser

    // $ANTLR start synpred43_InternalRuleEngineParser
    public final void synpred43_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5607:2: ( ( () ruleArrayBrackets ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5607:3: ( () ruleArrayBrackets )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5607:3: ( () ruleArrayBrackets )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5607:4: () ruleArrayBrackets
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5607:4: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5608:1: 
        {
        }

        pushFollow(FOLLOW_ruleArrayBrackets_in_synpred43_InternalRuleEngineParser12780);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalRuleEngineParser

    // $ANTLR start synpred44_InternalRuleEngineParser
    public final void synpred44_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5797:4: ( LessThanSign )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5798:1: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_LessThanSign_in_synpred44_InternalRuleEngineParser13229); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalRuleEngineParser

    // $ANTLR start synpred45_InternalRuleEngineParser
    public final void synpred45_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:3: ( ( () FullStop ) )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:4: ( () FullStop )
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:4: ( () FullStop )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:5: () FullStop
        {
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5850:5: ()
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5851:1: 
        {
        }

        match(input,FullStop,FOLLOW_FullStop_in_synpred45_InternalRuleEngineParser13323); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalRuleEngineParser

    // $ANTLR start synpred46_InternalRuleEngineParser
    public final void synpred46_InternalRuleEngineParser_fragment() throws RecognitionException {   
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5879:4: ( LessThanSign )
        // ../org.eclipse.xtext.example.homeautomation/src-gen/org/eclipse/xtext/example/homeautomation/parser/antlr/internal/InternalRuleEngineParser.g:5880:1: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_LessThanSign_in_synpred46_InternalRuleEngineParser13379); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalRuleEngineParser

    // Delegated rules

    public final boolean synpred20_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalRuleEngineParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalRuleEngineParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA112 dfa112 = new DFA112(this);
    static final String DFA7_eotS =
        "\12\uffff";
    static final String DFA7_eofS =
        "\1\10\11\uffff";
    static final String DFA7_minS =
        "\1\4\7\0\2\uffff";
    static final String DFA7_maxS =
        "\1\132\7\0\2\uffff";
    static final String DFA7_acceptS =
        "\10\uffff\1\2\1\1";
    static final String DFA7_specialS =
        "\1\uffff\1\4\1\6\1\2\1\3\1\1\1\5\1\0\2\uffff}>";
    static final String[] DFA7_transitionS = {
            "\6\10\1\uffff\12\10\1\uffff\3\10\1\uffff\1\10\1\uffff\3\10\1\uffff\6\10\1\5\2\10\1\3\1\10\1\1\1\10\1\2\2\10\1\4\10\10\1\uffff\6\10\1\uffff\12\10\1\6\1\uffff\1\7\1\uffff\3\10\1\uffff\10\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA7_eot = DFA.unpackEncodedString(DFA7_eotS);
    static final short[] DFA7_eof = DFA.unpackEncodedString(DFA7_eofS);
    static final char[] DFA7_min = DFA.unpackEncodedStringToUnsignedChars(DFA7_minS);
    static final char[] DFA7_max = DFA.unpackEncodedStringToUnsignedChars(DFA7_maxS);
    static final short[] DFA7_accept = DFA.unpackEncodedString(DFA7_acceptS);
    static final short[] DFA7_special = DFA.unpackEncodedString(DFA7_specialS);
    static final short[][] DFA7_transition;

    static {
        int numStates = DFA7_transitionS.length;
        DFA7_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA7_transition[i] = DFA.unpackEncodedString(DFA7_transitionS[i]);
        }
    }

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = DFA7_eot;
            this.eof = DFA7_eof;
            this.min = DFA7_min;
            this.max = DFA7_max;
            this.accept = DFA7_accept;
            this.special = DFA7_special;
            this.transition = DFA7_transition;
        }
        public String getDescription() {
            return "519:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_7 = input.LA(1);

                         
                        int index7_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRuleEngineParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index7_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_5 = input.LA(1);

                         
                        int index7_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRuleEngineParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index7_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA7_3 = input.LA(1);

                         
                        int index7_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRuleEngineParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index7_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA7_4 = input.LA(1);

                         
                        int index7_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRuleEngineParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index7_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA7_1 = input.LA(1);

                         
                        int index7_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRuleEngineParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index7_1);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA7_6 = input.LA(1);

                         
                        int index7_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRuleEngineParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index7_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA7_2 = input.LA(1);

                         
                        int index7_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRuleEngineParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index7_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA17_eotS =
        "\13\uffff";
    static final String DFA17_eofS =
        "\1\1\12\uffff";
    static final String DFA17_minS =
        "\1\4\1\uffff\10\0\1\uffff";
    static final String DFA17_maxS =
        "\1\132\1\uffff\10\0\1\uffff";
    static final String DFA17_acceptS =
        "\1\uffff\1\2\10\uffff\1\1";
    static final String DFA17_specialS =
        "\2\uffff\1\7\1\6\1\2\1\3\1\1\1\0\1\4\1\5\1\uffff}>";
    static final String[] DFA17_transitionS = {
            "\6\1\1\uffff\12\1\1\uffff\3\1\1\uffff\1\1\1\uffff\1\1\1\5\1\1\1\uffff\16\1\1\4\1\6\2\1\1\10\1\1\1\7\2\1\1\11\1\1\1\uffff\6\1\1\uffff\12\1\1\2\1\uffff\1\3\1\uffff\3\1\1\uffff\10\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA17_eot = DFA.unpackEncodedString(DFA17_eotS);
    static final short[] DFA17_eof = DFA.unpackEncodedString(DFA17_eofS);
    static final char[] DFA17_min = DFA.unpackEncodedStringToUnsignedChars(DFA17_minS);
    static final char[] DFA17_max = DFA.unpackEncodedStringToUnsignedChars(DFA17_maxS);
    static final short[] DFA17_accept = DFA.unpackEncodedString(DFA17_acceptS);
    static final short[] DFA17_special = DFA.unpackEncodedString(DFA17_specialS);
    static final short[][] DFA17_transition;

    static {
        int numStates = DFA17_transitionS.length;
        DFA17_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA17_transition[i] = DFA.unpackEncodedString(DFA17_transitionS[i]);
        }
    }

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = DFA17_eot;
            this.eof = DFA17_eof;
            this.min = DFA17_min;
            this.max = DFA17_max;
            this.accept = DFA17_accept;
            this.special = DFA17_special;
            this.transition = DFA17_transition;
        }
        public String getDescription() {
            return "()* loopback of 1204:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA17_7 = input.LA(1);

                         
                        int index17_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRuleEngineParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index17_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA17_6 = input.LA(1);

                         
                        int index17_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRuleEngineParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index17_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA17_4 = input.LA(1);

                         
                        int index17_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRuleEngineParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index17_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA17_5 = input.LA(1);

                         
                        int index17_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRuleEngineParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index17_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA17_8 = input.LA(1);

                         
                        int index17_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRuleEngineParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index17_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA17_9 = input.LA(1);

                         
                        int index17_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRuleEngineParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index17_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA17_3 = input.LA(1);

                         
                        int index17_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRuleEngineParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index17_3);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA17_2 = input.LA(1);

                         
                        int index17_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRuleEngineParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index17_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 17, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA20_eotS =
        "\13\uffff";
    static final String DFA20_eofS =
        "\13\uffff";
    static final String DFA20_minS =
        "\1\35\2\uffff\1\57\7\uffff";
    static final String DFA20_maxS =
        "\1\115\2\uffff\1\115\7\uffff";
    static final String DFA20_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String DFA20_specialS =
        "\13\uffff}>";
    static final String[] DFA20_transitionS = {
            "\1\2\20\uffff\1\1\1\4\2\uffff\1\7\1\uffff\1\5\2\uffff\1\10\23\uffff\1\6\1\uffff\1\3",
            "",
            "",
            "\1\11\35\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA20_eot = DFA.unpackEncodedString(DFA20_eotS);
    static final short[] DFA20_eof = DFA.unpackEncodedString(DFA20_eofS);
    static final char[] DFA20_min = DFA.unpackEncodedStringToUnsignedChars(DFA20_minS);
    static final char[] DFA20_max = DFA.unpackEncodedStringToUnsignedChars(DFA20_maxS);
    static final short[] DFA20_accept = DFA.unpackEncodedString(DFA20_acceptS);
    static final short[] DFA20_special = DFA.unpackEncodedString(DFA20_specialS);
    static final short[][] DFA20_transition;

    static {
        int numStates = DFA20_transitionS.length;
        DFA20_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA20_transition[i] = DFA.unpackEncodedString(DFA20_transitionS[i]);
        }
    }

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = DFA20_eot;
            this.eof = DFA20_eof;
            this.min = DFA20_min;
            this.max = DFA20_max;
            this.accept = DFA20_accept;
            this.special = DFA20_special;
            this.transition = DFA20_transition;
        }
        public String getDescription() {
            return "1270:1: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )";
        }
    }
    static final String DFA36_eotS =
        "\120\uffff";
    static final String DFA36_eofS =
        "\1\2\117\uffff";
    static final String DFA36_minS =
        "\1\4\1\0\116\uffff";
    static final String DFA36_maxS =
        "\1\132\1\0\116\uffff";
    static final String DFA36_acceptS =
        "\2\uffff\1\2\114\uffff\1\1";
    static final String DFA36_specialS =
        "\1\uffff\1\0\116\uffff}>";
    static final String[] DFA36_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\6\2\1\uffff\1\1\12\2\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA36_eot = DFA.unpackEncodedString(DFA36_eotS);
    static final short[] DFA36_eof = DFA.unpackEncodedString(DFA36_eofS);
    static final char[] DFA36_min = DFA.unpackEncodedStringToUnsignedChars(DFA36_minS);
    static final char[] DFA36_max = DFA.unpackEncodedStringToUnsignedChars(DFA36_maxS);
    static final short[] DFA36_accept = DFA.unpackEncodedString(DFA36_acceptS);
    static final short[] DFA36_special = DFA.unpackEncodedString(DFA36_specialS);
    static final short[][] DFA36_transition;

    static {
        int numStates = DFA36_transitionS.length;
        DFA36_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA36_transition[i] = DFA.unpackEncodedString(DFA36_transitionS[i]);
        }
    }

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = DFA36_eot;
            this.eof = DFA36_eof;
            this.min = DFA36_min;
            this.max = DFA36_max;
            this.accept = DFA36_accept;
            this.special = DFA36_special;
            this.transition = DFA36_transition;
        }
        public String getDescription() {
            return "2133:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_1 = input.LA(1);

                         
                        int index36_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index36_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA35_eotS =
        "\44\uffff";
    static final String DFA35_eofS =
        "\44\uffff";
    static final String DFA35_minS =
        "\1\4\2\0\41\uffff";
    static final String DFA35_maxS =
        "\1\132\2\0\41\uffff";
    static final String DFA35_acceptS =
        "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String DFA35_specialS =
        "\1\0\1\1\1\2\41\uffff}>";
    static final String[] DFA35_transitionS = {
            "\1\5\1\uffff\1\5\1\uffff\1\5\2\uffff\5\5\1\uffff\4\5\3\uffff\1\5\1\uffff\1\5\5\uffff\3\5\21\uffff\1\3\5\uffff\2\5\1\uffff\2\5\2\uffff\1\2\1\43\1\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff\1\5\2\uffff\1\4\1\uffff\1\5\1\uffff\3\5\1\1\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA35_eot = DFA.unpackEncodedString(DFA35_eotS);
    static final short[] DFA35_eof = DFA.unpackEncodedString(DFA35_eofS);
    static final char[] DFA35_min = DFA.unpackEncodedStringToUnsignedChars(DFA35_minS);
    static final char[] DFA35_max = DFA.unpackEncodedStringToUnsignedChars(DFA35_maxS);
    static final short[] DFA35_accept = DFA.unpackEncodedString(DFA35_acceptS);
    static final short[] DFA35_special = DFA.unpackEncodedString(DFA35_specialS);
    static final short[][] DFA35_transition;

    static {
        int numStates = DFA35_transitionS.length;
        DFA35_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA35_transition[i] = DFA.unpackEncodedString(DFA35_transitionS[i]);
        }
    }

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = DFA35_eot;
            this.eof = DFA35_eof;
            this.min = DFA35_min;
            this.max = DFA35_max;
            this.accept = DFA35_accept;
            this.special = DFA35_special;
            this.transition = DFA35_transition;
        }
        public String getDescription() {
            return "2156:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_0 = input.LA(1);

                         
                        int index35_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_0==RULE_ID) ) {s = 1;}

                        else if ( (LA35_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA35_0==EqualsSignGreaterThanSign) && (synpred17_InternalRuleEngineParser())) {s = 3;}

                        else if ( (LA35_0==VerticalLine) && (synpred17_InternalRuleEngineParser())) {s = 4;}

                        else if ( (LA35_0==Synchronized||LA35_0==Extension||LA35_0==Extends||(LA35_0>=Import && LA35_0<=Typeof)||(LA35_0>=False && LA35_0<=While)||LA35_0==Null||LA35_0==True||(LA35_0>=For && LA35_0<=Try)||(LA35_0>=Do && LA35_0<=If)||(LA35_0>=ExclamationMark && LA35_0<=NumberSign)||LA35_0==PlusSign||LA35_0==HyphenMinus||LA35_0==LessThanSign||LA35_0==LeftSquareBracket||LA35_0==RULE_BEGIN||(LA35_0>=RULE_HEX && LA35_0<=RULE_DECIMAL)||LA35_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA35_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index35_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA35_1 = input.LA(1);

                         
                        int index35_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalRuleEngineParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index35_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA35_2 = input.LA(1);

                         
                        int index35_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalRuleEngineParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index35_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA37_eotS =
        "\120\uffff";
    static final String DFA37_eofS =
        "\1\2\117\uffff";
    static final String DFA37_minS =
        "\1\4\1\0\116\uffff";
    static final String DFA37_maxS =
        "\1\132\1\0\116\uffff";
    static final String DFA37_acceptS =
        "\2\uffff\1\2\114\uffff\1\1";
    static final String DFA37_specialS =
        "\1\uffff\1\0\116\uffff}>";
    static final String[] DFA37_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\6\2\1\uffff\13\2\1\uffff\1\2\1\uffff\1\1\2\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA37_eot = DFA.unpackEncodedString(DFA37_eotS);
    static final short[] DFA37_eof = DFA.unpackEncodedString(DFA37_eofS);
    static final char[] DFA37_min = DFA.unpackEncodedStringToUnsignedChars(DFA37_minS);
    static final char[] DFA37_max = DFA.unpackEncodedStringToUnsignedChars(DFA37_maxS);
    static final short[] DFA37_accept = DFA.unpackEncodedString(DFA37_acceptS);
    static final short[] DFA37_special = DFA.unpackEncodedString(DFA37_specialS);
    static final short[][] DFA37_transition;

    static {
        int numStates = DFA37_transitionS.length;
        DFA37_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA37_transition[i] = DFA.unpackEncodedString(DFA37_transitionS[i]);
        }
    }

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = DFA37_eot;
            this.eof = DFA37_eof;
            this.min = DFA37_min;
            this.max = DFA37_max;
            this.accept = DFA37_accept;
            this.special = DFA37_special;
            this.transition = DFA37_transition;
        }
        public String getDescription() {
            return "2239:3: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_1 = input.LA(1);

                         
                        int index37_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index37_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA39_eotS =
        "\40\uffff";
    static final String DFA39_eofS =
        "\40\uffff";
    static final String DFA39_minS =
        "\1\4\26\uffff\1\0\10\uffff";
    static final String DFA39_maxS =
        "\1\132\26\uffff\1\0\10\uffff";
    static final String DFA39_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String DFA39_specialS =
        "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\4\1\uffff\1\5\1\uffff\1\5\2\uffff\1\5\1\33\1\5\1\3\1\14\1\uffff\1\14\1\5\1\32\1\30\3\uffff\1\14\1\uffff\1\14\5\uffff\1\27\1\1\1\34\27\uffff\1\31\1\26\2\uffff\1\14\2\uffff\1\35\11\uffff\1\5\3\uffff\1\14\4\uffff\1\2\1\uffff\3\14\1\5\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "2281:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_0 = input.LA(1);

                         
                        int index39_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA39_0==New) ) {s = 1;}

                        else if ( (LA39_0==RULE_BEGIN) ) {s = 2;}

                        else if ( (LA39_0==Switch) ) {s = 3;}

                        else if ( (LA39_0==Synchronized) && (synpred19_InternalRuleEngineParser())) {s = 4;}

                        else if ( (LA39_0==Extension||LA39_0==Extends||LA39_0==Import||LA39_0==Static||LA39_0==Super||LA39_0==LessThanSign||LA39_0==RULE_ID) ) {s = 5;}

                        else if ( (LA39_0==Typeof||LA39_0==False||LA39_0==Null||LA39_0==True||LA39_0==NumberSign||LA39_0==LeftSquareBracket||(LA39_0>=RULE_HEX && LA39_0<=RULE_DECIMAL)||LA39_0==RULE_STRING) ) {s = 12;}

                        else if ( (LA39_0==If) ) {s = 22;}

                        else if ( (LA39_0==For) ) {s = 23;}

                        else if ( (LA39_0==While) ) {s = 24;}

                        else if ( (LA39_0==Do) ) {s = 25;}

                        else if ( (LA39_0==Throw) ) {s = 26;}

                        else if ( (LA39_0==Return) ) {s = 27;}

                        else if ( (LA39_0==Try) ) {s = 28;}

                        else if ( (LA39_0==LeftParenthesis) ) {s = 29;}

                         
                        input.seek(index39_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA39_23 = input.LA(1);

                         
                        int index39_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalRuleEngineParser()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index39_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA48_eotS =
        "\46\uffff";
    static final String DFA48_eofS =
        "\46\uffff";
    static final String DFA48_minS =
        "\1\4\2\0\43\uffff";
    static final String DFA48_maxS =
        "\1\132\2\0\43\uffff";
    static final String DFA48_acceptS =
        "\3\uffff\2\1\1\2\40\uffff";
    static final String DFA48_specialS =
        "\1\0\1\1\1\2\43\uffff}>";
    static final String[] DFA48_transitionS = {
            "\1\5\1\uffff\1\5\1\uffff\1\5\2\uffff\5\5\1\uffff\4\5\3\uffff\1\5\1\uffff\1\5\5\uffff\5\5\17\uffff\1\3\5\uffff\2\5\1\uffff\2\5\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff\2\5\1\uffff\1\4\1\uffff\1\5\1\uffff\3\5\1\1\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA48_eot = DFA.unpackEncodedString(DFA48_eotS);
    static final short[] DFA48_eof = DFA.unpackEncodedString(DFA48_eofS);
    static final char[] DFA48_min = DFA.unpackEncodedStringToUnsignedChars(DFA48_minS);
    static final char[] DFA48_max = DFA.unpackEncodedStringToUnsignedChars(DFA48_maxS);
    static final short[] DFA48_accept = DFA.unpackEncodedString(DFA48_acceptS);
    static final short[] DFA48_special = DFA.unpackEncodedString(DFA48_specialS);
    static final short[][] DFA48_transition;

    static {
        int numStates = DFA48_transitionS.length;
        DFA48_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA48_transition[i] = DFA.unpackEncodedString(DFA48_transitionS[i]);
        }
    }

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = DFA48_eot;
            this.eof = DFA48_eof;
            this.min = DFA48_min;
            this.max = DFA48_max;
            this.accept = DFA48_accept;
            this.special = DFA48_special;
            this.transition = DFA48_transition;
        }
        public String getDescription() {
            return "2780:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_0 = input.LA(1);

                         
                        int index48_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA48_0==RULE_ID) ) {s = 1;}

                        else if ( (LA48_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA48_0==EqualsSignGreaterThanSign) && (synpred23_InternalRuleEngineParser())) {s = 3;}

                        else if ( (LA48_0==VerticalLine) && (synpred23_InternalRuleEngineParser())) {s = 4;}

                        else if ( (LA48_0==Synchronized||LA48_0==Extension||LA48_0==Extends||(LA48_0>=Import && LA48_0<=Typeof)||(LA48_0>=False && LA48_0<=While)||LA48_0==Null||LA48_0==True||(LA48_0>=For && LA48_0<=Var)||(LA48_0>=Do && LA48_0<=If)||(LA48_0>=ExclamationMark && LA48_0<=NumberSign)||LA48_0==PlusSign||LA48_0==HyphenMinus||LA48_0==LessThanSign||(LA48_0>=LeftSquareBracket && LA48_0<=RightSquareBracket)||LA48_0==RULE_BEGIN||(LA48_0>=RULE_HEX && LA48_0<=RULE_DECIMAL)||LA48_0==RULE_STRING) ) {s = 5;}

                         
                        input.seek(index48_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalRuleEngineParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalRuleEngineParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA55_eotS =
        "\43\uffff";
    static final String DFA55_eofS =
        "\43\uffff";
    static final String DFA55_minS =
        "\1\4\1\0\41\uffff";
    static final String DFA55_maxS =
        "\1\132\1\0\41\uffff";
    static final String DFA55_acceptS =
        "\2\uffff\1\2\37\uffff\1\1";
    static final String DFA55_specialS =
        "\1\uffff\1\0\41\uffff}>";
    static final String[] DFA55_transitionS = {
            "\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\5\2\1\uffff\4\2\3\uffff\1\2\1\uffff\1\2\5\uffff\3\2\21\uffff\1\2\5\uffff\2\2\1\uffff\2\2\2\uffff\1\1\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff\1\2\1\uffff\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
    static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
    static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
    static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
    static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
    static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
    static final short[][] DFA55_transition;

    static {
        int numStates = DFA55_transitionS.length;
        DFA55_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
        }
    }

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = DFA55_eot;
            this.eof = DFA55_eof;
            this.min = DFA55_min;
            this.max = DFA55_max;
            this.accept = DFA55_accept;
            this.special = DFA55_special;
            this.transition = DFA55_transition;
        }
        public String getDescription() {
            return "3222:1: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalRuleEngineParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA54_eotS =
        "\42\uffff";
    static final String DFA54_eofS =
        "\42\uffff";
    static final String DFA54_minS =
        "\1\4\2\0\37\uffff";
    static final String DFA54_maxS =
        "\1\132\2\0\37\uffff";
    static final String DFA54_acceptS =
        "\3\uffff\1\1\1\2\35\uffff";
    static final String DFA54_specialS =
        "\1\0\1\1\1\2\37\uffff}>";
    static final String[] DFA54_transitionS = {
            "\1\4\1\uffff\1\4\1\uffff\1\4\2\uffff\5\4\1\uffff\4\4\3\uffff\1\4\1\uffff\1\4\5\uffff\3\4\21\uffff\1\3\5\uffff\2\4\1\uffff\2\4\2\uffff\1\2\2\uffff\1\4\1\uffff\1\4\4\uffff\1\4\3\uffff\1\4\4\uffff\1\4\1\uffff\3\4\1\1\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA54_eot = DFA.unpackEncodedString(DFA54_eotS);
    static final short[] DFA54_eof = DFA.unpackEncodedString(DFA54_eofS);
    static final char[] DFA54_min = DFA.unpackEncodedStringToUnsignedChars(DFA54_minS);
    static final char[] DFA54_max = DFA.unpackEncodedStringToUnsignedChars(DFA54_maxS);
    static final short[] DFA54_accept = DFA.unpackEncodedString(DFA54_acceptS);
    static final short[] DFA54_special = DFA.unpackEncodedString(DFA54_specialS);
    static final short[][] DFA54_transition;

    static {
        int numStates = DFA54_transitionS.length;
        DFA54_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA54_transition[i] = DFA.unpackEncodedString(DFA54_transitionS[i]);
        }
    }

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = DFA54_eot;
            this.eof = DFA54_eof;
            this.min = DFA54_min;
            this.max = DFA54_max;
            this.accept = DFA54_accept;
            this.special = DFA54_special;
            this.transition = DFA54_transition;
        }
        public String getDescription() {
            return "3282:7: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA54_0 = input.LA(1);

                         
                        int index54_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA54_0==RULE_ID) ) {s = 1;}

                        else if ( (LA54_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA54_0==EqualsSignGreaterThanSign) && (synpred27_InternalRuleEngineParser())) {s = 3;}

                        else if ( (LA54_0==Synchronized||LA54_0==Extension||LA54_0==Extends||(LA54_0>=Import && LA54_0<=Typeof)||(LA54_0>=False && LA54_0<=While)||LA54_0==Null||LA54_0==True||(LA54_0>=For && LA54_0<=Try)||(LA54_0>=Do && LA54_0<=If)||(LA54_0>=ExclamationMark && LA54_0<=NumberSign)||LA54_0==PlusSign||LA54_0==HyphenMinus||LA54_0==LessThanSign||LA54_0==LeftSquareBracket||LA54_0==RULE_BEGIN||(LA54_0>=RULE_HEX && LA54_0<=RULE_DECIMAL)||LA54_0==RULE_STRING) ) {s = 4;}

                         
                        input.seek(index54_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA54_1 = input.LA(1);

                         
                        int index54_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalRuleEngineParser()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index54_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA54_2 = input.LA(1);

                         
                        int index54_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalRuleEngineParser()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index54_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 54, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA75_eotS =
        "\120\uffff";
    static final String DFA75_eofS =
        "\1\2\117\uffff";
    static final String DFA75_minS =
        "\1\4\1\0\116\uffff";
    static final String DFA75_maxS =
        "\1\132\1\0\116\uffff";
    static final String DFA75_acceptS =
        "\2\uffff\1\2\114\uffff\1\1";
    static final String DFA75_specialS =
        "\1\uffff\1\0\116\uffff}>";
    static final String[] DFA75_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\6\2\1\uffff\1\1\12\2\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA75_eot = DFA.unpackEncodedString(DFA75_eotS);
    static final short[] DFA75_eof = DFA.unpackEncodedString(DFA75_eofS);
    static final char[] DFA75_min = DFA.unpackEncodedStringToUnsignedChars(DFA75_minS);
    static final char[] DFA75_max = DFA.unpackEncodedStringToUnsignedChars(DFA75_maxS);
    static final short[] DFA75_accept = DFA.unpackEncodedString(DFA75_acceptS);
    static final short[] DFA75_special = DFA.unpackEncodedString(DFA75_specialS);
    static final short[][] DFA75_transition;

    static {
        int numStates = DFA75_transitionS.length;
        DFA75_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA75_transition[i] = DFA.unpackEncodedString(DFA75_transitionS[i]);
        }
    }

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = DFA75_eot;
            this.eof = DFA75_eof;
            this.min = DFA75_min;
            this.max = DFA75_max;
            this.accept = DFA75_accept;
            this.special = DFA75_special;
            this.transition = DFA75_transition;
        }
        public String getDescription() {
            return "4318:2: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_1 = input.LA(1);

                         
                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA74_eotS =
        "\44\uffff";
    static final String DFA74_eofS =
        "\44\uffff";
    static final String DFA74_minS =
        "\1\4\2\0\41\uffff";
    static final String DFA74_maxS =
        "\1\132\2\0\41\uffff";
    static final String DFA74_acceptS =
        "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String DFA74_specialS =
        "\1\0\1\1\1\2\41\uffff}>";
    static final String[] DFA74_transitionS = {
            "\1\5\1\uffff\1\5\1\uffff\1\5\2\uffff\5\5\1\uffff\4\5\3\uffff\1\5\1\uffff\1\5\5\uffff\3\5\21\uffff\1\3\5\uffff\2\5\1\uffff\2\5\2\uffff\1\2\1\43\1\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff\1\5\2\uffff\1\4\1\uffff\1\5\1\uffff\3\5\1\1\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
    static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
    static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
    static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
    static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
    static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
    static final short[][] DFA74_transition;

    static {
        int numStates = DFA74_transitionS.length;
        DFA74_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = DFA74_eot;
            this.eof = DFA74_eof;
            this.min = DFA74_min;
            this.max = DFA74_max;
            this.accept = DFA74_accept;
            this.special = DFA74_special;
            this.transition = DFA74_transition;
        }
        public String getDescription() {
            return "4341:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_0 = input.LA(1);

                         
                        int index74_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA74_0==RULE_ID) ) {s = 1;}

                        else if ( (LA74_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA74_0==EqualsSignGreaterThanSign) && (synpred31_InternalRuleEngineParser())) {s = 3;}

                        else if ( (LA74_0==VerticalLine) && (synpred31_InternalRuleEngineParser())) {s = 4;}

                        else if ( (LA74_0==Synchronized||LA74_0==Extension||LA74_0==Extends||(LA74_0>=Import && LA74_0<=Typeof)||(LA74_0>=False && LA74_0<=While)||LA74_0==Null||LA74_0==True||(LA74_0>=For && LA74_0<=Try)||(LA74_0>=Do && LA74_0<=If)||(LA74_0>=ExclamationMark && LA74_0<=NumberSign)||LA74_0==PlusSign||LA74_0==HyphenMinus||LA74_0==LessThanSign||LA74_0==LeftSquareBracket||LA74_0==RULE_BEGIN||(LA74_0>=RULE_HEX && LA74_0<=RULE_DECIMAL)||LA74_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA74_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index74_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalRuleEngineParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalRuleEngineParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA76_eotS =
        "\120\uffff";
    static final String DFA76_eofS =
        "\1\2\117\uffff";
    static final String DFA76_minS =
        "\1\4\1\0\116\uffff";
    static final String DFA76_maxS =
        "\1\132\1\0\116\uffff";
    static final String DFA76_acceptS =
        "\2\uffff\1\2\114\uffff\1\1";
    static final String DFA76_specialS =
        "\1\uffff\1\0\116\uffff}>";
    static final String[] DFA76_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\6\2\1\uffff\13\2\1\uffff\1\2\1\uffff\1\1\2\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA76_eot = DFA.unpackEncodedString(DFA76_eotS);
    static final short[] DFA76_eof = DFA.unpackEncodedString(DFA76_eofS);
    static final char[] DFA76_min = DFA.unpackEncodedStringToUnsignedChars(DFA76_minS);
    static final char[] DFA76_max = DFA.unpackEncodedStringToUnsignedChars(DFA76_maxS);
    static final short[] DFA76_accept = DFA.unpackEncodedString(DFA76_acceptS);
    static final short[] DFA76_special = DFA.unpackEncodedString(DFA76_specialS);
    static final short[][] DFA76_transition;

    static {
        int numStates = DFA76_transitionS.length;
        DFA76_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA76_transition[i] = DFA.unpackEncodedString(DFA76_transitionS[i]);
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = DFA76_eot;
            this.eof = DFA76_eof;
            this.min = DFA76_min;
            this.max = DFA76_max;
            this.accept = DFA76_accept;
            this.special = DFA76_special;
            this.transition = DFA76_transition;
        }
        public String getDescription() {
            return "4424:3: ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA80_eotS =
        "\120\uffff";
    static final String DFA80_eofS =
        "\1\2\117\uffff";
    static final String DFA80_minS =
        "\1\4\1\0\116\uffff";
    static final String DFA80_maxS =
        "\1\132\1\0\116\uffff";
    static final String DFA80_acceptS =
        "\2\uffff\1\2\114\uffff\1\1";
    static final String DFA80_specialS =
        "\1\uffff\1\0\116\uffff}>";
    static final String[] DFA80_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\6\2\1\uffff\12\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA80_eot = DFA.unpackEncodedString(DFA80_eotS);
    static final short[] DFA80_eof = DFA.unpackEncodedString(DFA80_eofS);
    static final char[] DFA80_min = DFA.unpackEncodedStringToUnsignedChars(DFA80_minS);
    static final char[] DFA80_max = DFA.unpackEncodedStringToUnsignedChars(DFA80_maxS);
    static final short[] DFA80_accept = DFA.unpackEncodedString(DFA80_acceptS);
    static final short[] DFA80_special = DFA.unpackEncodedString(DFA80_specialS);
    static final short[][] DFA80_transition;

    static {
        int numStates = DFA80_transitionS.length;
        DFA80_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA80_transition[i] = DFA.unpackEncodedString(DFA80_transitionS[i]);
        }
    }

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = DFA80_eot;
            this.eof = DFA80_eof;
            this.min = DFA80_min;
            this.max = DFA80_max;
            this.accept = DFA80_accept;
            this.special = DFA80_special;
            this.transition = DFA80_transition;
        }
        public String getDescription() {
            return "4593:2: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_1 = input.LA(1);

                         
                        int index80_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index80_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA83_eotS =
        "\120\uffff";
    static final String DFA83_eofS =
        "\1\2\117\uffff";
    static final String DFA83_minS =
        "\1\4\1\0\116\uffff";
    static final String DFA83_maxS =
        "\1\132\1\0\116\uffff";
    static final String DFA83_acceptS =
        "\2\uffff\1\2\114\uffff\1\1";
    static final String DFA83_specialS =
        "\1\uffff\1\0\116\uffff}>";
    static final String[] DFA83_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\6\2\1\uffff\1\1\12\2\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA83_eot = DFA.unpackEncodedString(DFA83_eotS);
    static final short[] DFA83_eof = DFA.unpackEncodedString(DFA83_eofS);
    static final char[] DFA83_min = DFA.unpackEncodedStringToUnsignedChars(DFA83_minS);
    static final char[] DFA83_max = DFA.unpackEncodedStringToUnsignedChars(DFA83_maxS);
    static final short[] DFA83_accept = DFA.unpackEncodedString(DFA83_acceptS);
    static final short[] DFA83_special = DFA.unpackEncodedString(DFA83_specialS);
    static final short[][] DFA83_transition;

    static {
        int numStates = DFA83_transitionS.length;
        DFA83_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA83_transition[i] = DFA.unpackEncodedString(DFA83_transitionS[i]);
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = DFA83_eot;
            this.eof = DFA83_eof;
            this.min = DFA83_min;
            this.max = DFA83_max;
            this.accept = DFA83_accept;
            this.special = DFA83_special;
            this.transition = DFA83_transition;
        }
        public String getDescription() {
            return "4646:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_1 = input.LA(1);

                         
                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA82_eotS =
        "\44\uffff";
    static final String DFA82_eofS =
        "\44\uffff";
    static final String DFA82_minS =
        "\1\4\2\0\41\uffff";
    static final String DFA82_maxS =
        "\1\132\2\0\41\uffff";
    static final String DFA82_acceptS =
        "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String DFA82_specialS =
        "\1\0\1\1\1\2\41\uffff}>";
    static final String[] DFA82_transitionS = {
            "\1\5\1\uffff\1\5\1\uffff\1\5\2\uffff\5\5\1\uffff\4\5\3\uffff\1\5\1\uffff\1\5\5\uffff\3\5\21\uffff\1\3\5\uffff\2\5\1\uffff\2\5\2\uffff\1\2\1\43\1\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff\1\5\2\uffff\1\4\1\uffff\1\5\1\uffff\3\5\1\1\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA82_eot = DFA.unpackEncodedString(DFA82_eotS);
    static final short[] DFA82_eof = DFA.unpackEncodedString(DFA82_eofS);
    static final char[] DFA82_min = DFA.unpackEncodedStringToUnsignedChars(DFA82_minS);
    static final char[] DFA82_max = DFA.unpackEncodedStringToUnsignedChars(DFA82_maxS);
    static final short[] DFA82_accept = DFA.unpackEncodedString(DFA82_acceptS);
    static final short[] DFA82_special = DFA.unpackEncodedString(DFA82_specialS);
    static final short[][] DFA82_transition;

    static {
        int numStates = DFA82_transitionS.length;
        DFA82_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA82_transition[i] = DFA.unpackEncodedString(DFA82_transitionS[i]);
        }
    }

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = DFA82_eot;
            this.eof = DFA82_eof;
            this.min = DFA82_min;
            this.max = DFA82_max;
            this.accept = DFA82_accept;
            this.special = DFA82_special;
            this.transition = DFA82_transition;
        }
        public String getDescription() {
            return "4669:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_0 = input.LA(1);

                         
                        int index82_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA82_0==RULE_ID) ) {s = 1;}

                        else if ( (LA82_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA82_0==EqualsSignGreaterThanSign) && (synpred35_InternalRuleEngineParser())) {s = 3;}

                        else if ( (LA82_0==VerticalLine) && (synpred35_InternalRuleEngineParser())) {s = 4;}

                        else if ( (LA82_0==Synchronized||LA82_0==Extension||LA82_0==Extends||(LA82_0>=Import && LA82_0<=Typeof)||(LA82_0>=False && LA82_0<=While)||LA82_0==Null||LA82_0==True||(LA82_0>=For && LA82_0<=Try)||(LA82_0>=Do && LA82_0<=If)||(LA82_0>=ExclamationMark && LA82_0<=NumberSign)||LA82_0==PlusSign||LA82_0==HyphenMinus||LA82_0==LessThanSign||LA82_0==LeftSquareBracket||LA82_0==RULE_BEGIN||(LA82_0>=RULE_HEX && LA82_0<=RULE_DECIMAL)||LA82_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA82_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index82_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_1 = input.LA(1);

                         
                        int index82_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalRuleEngineParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index82_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_2 = input.LA(1);

                         
                        int index82_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalRuleEngineParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index82_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA84_eotS =
        "\120\uffff";
    static final String DFA84_eofS =
        "\1\2\117\uffff";
    static final String DFA84_minS =
        "\1\4\1\0\116\uffff";
    static final String DFA84_maxS =
        "\1\132\1\0\116\uffff";
    static final String DFA84_acceptS =
        "\2\uffff\1\2\114\uffff\1\1";
    static final String DFA84_specialS =
        "\1\uffff\1\0\116\uffff}>";
    static final String[] DFA84_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\6\2\1\uffff\13\2\1\uffff\1\2\1\uffff\1\1\2\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA84_eot = DFA.unpackEncodedString(DFA84_eotS);
    static final short[] DFA84_eof = DFA.unpackEncodedString(DFA84_eofS);
    static final char[] DFA84_min = DFA.unpackEncodedStringToUnsignedChars(DFA84_minS);
    static final char[] DFA84_max = DFA.unpackEncodedStringToUnsignedChars(DFA84_maxS);
    static final short[] DFA84_accept = DFA.unpackEncodedString(DFA84_acceptS);
    static final short[] DFA84_special = DFA.unpackEncodedString(DFA84_specialS);
    static final short[][] DFA84_transition;

    static {
        int numStates = DFA84_transitionS.length;
        DFA84_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA84_transition[i] = DFA.unpackEncodedString(DFA84_transitionS[i]);
        }
    }

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = DFA84_eot;
            this.eof = DFA84_eof;
            this.min = DFA84_min;
            this.max = DFA84_max;
            this.accept = DFA84_accept;
            this.special = DFA84_special;
            this.transition = DFA84_transition;
        }
        public String getDescription() {
            return "4752:3: ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_1 = input.LA(1);

                         
                        int index84_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index84_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA87_eotS =
        "\120\uffff";
    static final String DFA87_eofS =
        "\1\41\117\uffff";
    static final String DFA87_minS =
        "\1\4\40\0\57\uffff";
    static final String DFA87_maxS =
        "\1\132\40\0\57\uffff";
    static final String DFA87_acceptS =
        "\41\uffff\1\2\55\uffff\1\1";
    static final String DFA87_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\57\uffff}>";
    static final String[] DFA87_transitionS = {
            "\1\14\1\41\1\5\1\41\1\2\1\41\1\uffff\1\4\1\36\1\3\1\13\1\30\1\41\1\21\1\16\1\35\1\33\1\uffff\2\41\1\26\1\uffff\1\22\1\uffff\3\41\1\uffff\1\32\1\11\1\37\26\41\1\uffff\1\34\1\31\1\41\1\6\1\17\1\41\1\uffff\1\40\2\41\1\10\1\41\1\7\4\41\1\15\1\uffff\1\41\1\uffff\1\20\2\41\1\uffff\1\41\1\12\1\41\1\23\1\24\1\25\1\1\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
    static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
    static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
    static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
    static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
    static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
    static final short[][] DFA87_transition;

    static {
        int numStates = DFA87_transitionS.length;
        DFA87_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = DFA87_eot;
            this.eof = DFA87_eof;
            this.min = DFA87_min;
            this.max = DFA87_max;
            this.accept = DFA87_accept;
            this.special = DFA87_special;
            this.transition = DFA87_transition;
        }
        public String getDescription() {
            return "5101:1: ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_1 = input.LA(1);

                         
                        int index87_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_2 = input.LA(1);

                         
                        int index87_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_3 = input.LA(1);

                         
                        int index87_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_4 = input.LA(1);

                         
                        int index87_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA87_5 = input.LA(1);

                         
                        int index87_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA87_6 = input.LA(1);

                         
                        int index87_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA87_7 = input.LA(1);

                         
                        int index87_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA87_8 = input.LA(1);

                         
                        int index87_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA87_9 = input.LA(1);

                         
                        int index87_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA87_10 = input.LA(1);

                         
                        int index87_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA87_11 = input.LA(1);

                         
                        int index87_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA87_12 = input.LA(1);

                         
                        int index87_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA87_13 = input.LA(1);

                         
                        int index87_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA87_14 = input.LA(1);

                         
                        int index87_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA87_15 = input.LA(1);

                         
                        int index87_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA87_16 = input.LA(1);

                         
                        int index87_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA87_17 = input.LA(1);

                         
                        int index87_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA87_18 = input.LA(1);

                         
                        int index87_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA87_19 = input.LA(1);

                         
                        int index87_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA87_20 = input.LA(1);

                         
                        int index87_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA87_21 = input.LA(1);

                         
                        int index87_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA87_22 = input.LA(1);

                         
                        int index87_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA87_23 = input.LA(1);

                         
                        int index87_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA87_24 = input.LA(1);

                         
                        int index87_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA87_25 = input.LA(1);

                         
                        int index87_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA87_26 = input.LA(1);

                         
                        int index87_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA87_27 = input.LA(1);

                         
                        int index87_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA87_28 = input.LA(1);

                         
                        int index87_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA87_29 = input.LA(1);

                         
                        int index87_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA87_30 = input.LA(1);

                         
                        int index87_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA87_31 = input.LA(1);

                         
                        int index87_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA87_32 = input.LA(1);

                         
                        int index87_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRuleEngineParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index87_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA105_eotS =
        "\121\uffff";
    static final String DFA105_eofS =
        "\1\2\120\uffff";
    static final String DFA105_minS =
        "\1\4\1\0\117\uffff";
    static final String DFA105_maxS =
        "\1\132\1\0\117\uffff";
    static final String DFA105_acceptS =
        "\2\uffff\1\2\115\uffff\1\1";
    static final String DFA105_specialS =
        "\1\uffff\1\0\117\uffff}>";
    static final String[] DFA105_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\21\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA105_eot = DFA.unpackEncodedString(DFA105_eotS);
    static final short[] DFA105_eof = DFA.unpackEncodedString(DFA105_eofS);
    static final char[] DFA105_min = DFA.unpackEncodedStringToUnsignedChars(DFA105_minS);
    static final char[] DFA105_max = DFA.unpackEncodedStringToUnsignedChars(DFA105_maxS);
    static final short[] DFA105_accept = DFA.unpackEncodedString(DFA105_acceptS);
    static final short[] DFA105_special = DFA.unpackEncodedString(DFA105_specialS);
    static final short[][] DFA105_transition;

    static {
        int numStates = DFA105_transitionS.length;
        DFA105_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA105_transition[i] = DFA.unpackEncodedString(DFA105_transitionS[i]);
        }
    }

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = DFA105_eot;
            this.eof = DFA105_eof;
            this.min = DFA105_min;
            this.max = DFA105_max;
            this.accept = DFA105_accept;
            this.special = DFA105_special;
            this.transition = DFA105_transition;
        }
        public String getDescription() {
            return "5797:2: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_1 = input.LA(1);

                         
                        int index105_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalRuleEngineParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index105_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA103_eotS =
        "\121\uffff";
    static final String DFA103_eofS =
        "\1\2\120\uffff";
    static final String DFA103_minS =
        "\1\4\1\0\117\uffff";
    static final String DFA103_maxS =
        "\1\132\1\0\117\uffff";
    static final String DFA103_acceptS =
        "\2\uffff\1\2\115\uffff\1\1";
    static final String DFA103_specialS =
        "\1\uffff\1\0\117\uffff}>";
    static final String[] DFA103_transitionS = {
            "\6\2\1\uffff\12\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\31\2\1\uffff\21\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA103_eot = DFA.unpackEncodedString(DFA103_eotS);
    static final short[] DFA103_eof = DFA.unpackEncodedString(DFA103_eofS);
    static final char[] DFA103_min = DFA.unpackEncodedStringToUnsignedChars(DFA103_minS);
    static final char[] DFA103_max = DFA.unpackEncodedStringToUnsignedChars(DFA103_maxS);
    static final short[] DFA103_accept = DFA.unpackEncodedString(DFA103_acceptS);
    static final short[] DFA103_special = DFA.unpackEncodedString(DFA103_specialS);
    static final short[][] DFA103_transition;

    static {
        int numStates = DFA103_transitionS.length;
        DFA103_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA103_transition[i] = DFA.unpackEncodedString(DFA103_transitionS[i]);
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = DFA103_eot;
            this.eof = DFA103_eof;
            this.min = DFA103_min;
            this.max = DFA103_max;
            this.accept = DFA103_accept;
            this.special = DFA103_special;
            this.transition = DFA103_transition;
        }
        public String getDescription() {
            return "5879:2: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_1 = input.LA(1);

                         
                        int index103_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalRuleEngineParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index103_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA112_eotS =
        "\7\uffff";
    static final String DFA112_eofS =
        "\2\uffff\1\4\3\uffff\1\4";
    static final String DFA112_minS =
        "\1\15\1\uffff\1\107\1\103\2\uffff\1\107";
    static final String DFA112_maxS =
        "\1\131\1\uffff\1\112\1\131\2\uffff\1\112";
    static final String DFA112_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\1\3\1\uffff";
    static final String DFA112_specialS =
        "\7\uffff}>";
    static final String[] DFA112_transitionS = {
            "\1\1\113\uffff\1\2",
            "",
            "\1\3\2\uffff\1\4",
            "\1\5\25\uffff\1\6",
            "",
            "",
            "\1\3\2\uffff\1\4"
    };

    static final short[] DFA112_eot = DFA.unpackEncodedString(DFA112_eotS);
    static final short[] DFA112_eof = DFA.unpackEncodedString(DFA112_eofS);
    static final char[] DFA112_min = DFA.unpackEncodedStringToUnsignedChars(DFA112_minS);
    static final char[] DFA112_max = DFA.unpackEncodedStringToUnsignedChars(DFA112_maxS);
    static final short[] DFA112_accept = DFA.unpackEncodedString(DFA112_acceptS);
    static final short[] DFA112_special = DFA.unpackEncodedString(DFA112_specialS);
    static final short[][] DFA112_transition;

    static {
        int numStates = DFA112_transitionS.length;
        DFA112_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA112_transition[i] = DFA.unpackEncodedString(DFA112_transitionS[i]);
        }
    }

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = DFA112_eot;
            this.eof = DFA112_eof;
            this.min = DFA112_min;
            this.max = DFA112_max;
            this.accept = DFA112_accept;
            this.special = DFA112_special;
            this.transition = DFA112_transition;
        }
        public String getDescription() {
            return "6357:1: ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_ruleModel_in_entryRuleModel67 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleModel77 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDeclaration_in_ruleModel122 = new BitSet(new long[]{0x0000000000200402L});
    public static final BitSet FOLLOW_ruleDeclaration_in_entryRuleDeclaration157 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDeclaration167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDevice_in_ruleDeclaration214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRule_in_ruleDeclaration241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDevice_in_entryRuleDevice275 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDevice285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Device_in_ruleDevice323 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleDevice339 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_Can_in_ruleDevice357 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_Be_in_ruleDevice369 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleState_in_ruleDevice390 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_Comma_in_ruleDevice404 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleState_in_ruleDevice424 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_ruleState_in_entryRuleState463 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleState473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleState514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRule_in_entryRuleRule553 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRule563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Rule_in_ruleRule601 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleRule617 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_When_in_ruleRule635 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleRule657 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_Then_in_ruleRule670 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleRule690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_entryRuleXBlockExpression725 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXBlockExpression735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_BEGIN_in_ruleXBlockExpression780 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007F08852L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBlockExpression801 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007F08C52L});
    public static final BitSet FOLLOW_Semicolon_in_ruleXBlockExpression815 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007F08852L});
    public static final BitSet FOLLOW_RULE_END_in_ruleXBlockExpression829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpression_in_entryRuleXExpression863 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpression873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXExpression919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAssignment_in_entryRuleXAssignment952 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAssignment962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXAssignment1020 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_ruleXAssignment1036 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXAssignment1056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOrExpression_in_ruleXAssignment1086 = new BitSet(new long[]{0x00012A4000000002L,0x0000000000002800L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_ruleXAssignment1139 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXAssignment1162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_entryRuleOpSingleAssign1201 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpSingleAssign1212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EqualsSign_in_ruleOpSingleAssign1249 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_entryRuleOpMultiAssign1288 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpMultiAssign1299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PlusSignEqualsSign_in_ruleOpMultiAssign1337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HyphenMinusEqualsSign_in_ruleOpMultiAssign1356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AsteriskEqualsSign_in_ruleOpMultiAssign1375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SolidusEqualsSign_in_ruleOpMultiAssign1394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PercentSignEqualsSign_in_ruleOpMultiAssign1413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleOpMultiAssign1433 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleOpMultiAssign1446 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_EqualsSign_in_ruleOpMultiAssign1459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleOpMultiAssign1480 = new BitSet(new long[]{0x0020000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleOpMultiAssign1494 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_GreaterThanSignEqualsSign_in_ruleOpMultiAssign1509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOrExpression_in_entryRuleXOrExpression1549 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXOrExpression1559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_ruleXOrExpression1606 = new BitSet(new long[]{0x1000000000000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_ruleXOrExpression1659 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_ruleXOrExpression1682 = new BitSet(new long[]{0x1000000000000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_entryRuleOpOr1720 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpOr1731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VerticalLineVerticalLine_in_ruleOpOr1768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_entryRuleXAndExpression1806 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAndExpression1816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression1863 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_ruleXAndExpression1916 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression1939 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_entryRuleOpAnd1977 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpAnd1988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AmpersandAmpersand_in_ruleOpAnd2025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_entryRuleXEqualityExpression2063 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXEqualityExpression2073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression2120 = new BitSet(new long[]{0x0008002050000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_ruleXEqualityExpression2173 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression2196 = new BitSet(new long[]{0x0008002050000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_entryRuleOpEquality2234 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpEquality2245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EqualsSignEqualsSign_in_ruleOpEquality2283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ExclamationMarkEqualsSign_in_ruleOpEquality2302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EqualsSignEqualsSignEqualsSign_in_ruleOpEquality2321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ExclamationMarkEqualsSignEqualsSign_in_ruleOpEquality2340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_entryRuleXRelationalExpression2379 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXRelationalExpression2389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression2436 = new BitSet(new long[]{0x0020000000000022L,0x0000000000002800L});
    public static final BitSet FOLLOW_Instanceof_in_ruleXRelationalExpression2472 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXRelationalExpression2494 = new BitSet(new long[]{0x0020000000000022L,0x0000000000002800L});
    public static final BitSet FOLLOW_ruleOpCompare_in_ruleXRelationalExpression2555 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression2578 = new BitSet(new long[]{0x0020000000000022L,0x0000000000002800L});
    public static final BitSet FOLLOW_ruleOpCompare_in_entryRuleOpCompare2617 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpCompare2628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GreaterThanSignEqualsSign_in_ruleOpCompare2666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleOpCompare2686 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_EqualsSign_in_ruleOpCompare2699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleOpCompare2719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleOpCompare2738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_entryRuleXOtherOperatorExpression2777 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXOtherOperatorExpression2787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression2834 = new BitSet(new long[]{0x0094C00020000002L,0x0000000000002800L});
    public static final BitSet FOLLOW_ruleOpOther_in_ruleXOtherOperatorExpression2887 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression2910 = new BitSet(new long[]{0x0094C00020000002L,0x0000000000002800L});
    public static final BitSet FOLLOW_ruleOpOther_in_entryRuleOpOther2948 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpOther2959 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HyphenMinusGreaterThanSign_in_ruleOpOther2997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FullStopFullStopLessThanSign_in_ruleOpOther3016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleOpOther3036 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_FullStopFullStop_in_ruleOpOther3049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FullStopFullStop_in_ruleOpOther3069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EqualsSignGreaterThanSign_in_ruleOpOther3088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleOpOther3108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleOpOther3139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleOpOther3152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleOpOther3173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleOpOther3195 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleOpOther3226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleOpOther3239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleOpOther3260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EqualsSignGreaterThanSign_in_ruleOpOther3279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSignGreaterThanSign_in_ruleOpOther3300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QuestionMarkColon_in_ruleOpOther3319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_entryRuleXAdditiveExpression3358 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAdditiveExpression3368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression3415 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000050L});
    public static final BitSet FOLLOW_ruleOpAdd_in_ruleXAdditiveExpression3468 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression3491 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000050L});
    public static final BitSet FOLLOW_ruleOpAdd_in_entryRuleOpAdd3529 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpAdd3540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PlusSign_in_ruleOpAdd3578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HyphenMinus_in_ruleOpAdd3597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_entryRuleXMultiplicativeExpression3636 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXMultiplicativeExpression3646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression3693 = new BitSet(new long[]{0x8000010000000002L,0x0000000000000108L});
    public static final BitSet FOLLOW_ruleOpMulti_in_ruleXMultiplicativeExpression3746 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression3769 = new BitSet(new long[]{0x8000010000000002L,0x0000000000000108L});
    public static final BitSet FOLLOW_ruleOpMulti_in_entryRuleOpMulti3807 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpMulti3818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Asterisk_in_ruleOpMulti3856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AsteriskAsterisk_in_ruleOpMulti3875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Solidus_in_ruleOpMulti3894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PercentSign_in_ruleOpMulti3913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_entryRuleXUnaryOperation3952 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXUnaryOperation3962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpUnary_in_ruleXUnaryOperation4020 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXUnaryOperation4041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCastedExpression_in_ruleXUnaryOperation4070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpUnary_in_entryRuleOpUnary4105 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpUnary4116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ExclamationMark_in_ruleOpUnary4154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HyphenMinus_in_ruleOpUnary4173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PlusSign_in_ruleOpUnary4192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCastedExpression_in_entryRuleXCastedExpression4231 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCastedExpression4241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXPostfixOperation_in_ruleXCastedExpression4288 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_As_in_ruleXCastedExpression4323 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXCastedExpression4345 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_ruleXPostfixOperation_in_entryRuleXPostfixOperation4382 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXPostfixOperation4392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMemberFeatureCall_in_ruleXPostfixOperation4439 = new BitSet(new long[]{0x0000140000000002L});
    public static final BitSet FOLLOW_ruleOpPostfix_in_ruleXPostfixOperation4491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpPostfix_in_entryRuleOpPostfix4530 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpPostfix4541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PlusSignPlusSign_in_ruleOpPostfix4579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HyphenMinusHyphenMinus_in_ruleOpPostfix4598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMemberFeatureCall_in_entryRuleXMemberFeatureCall4637 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXMemberFeatureCall4647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXPrimaryExpression_in_ruleXMemberFeatureCall4694 = new BitSet(new long[]{0x0042000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_FullStop_in_ruleXMemberFeatureCall4763 = new BitSet(new long[]{0x0000000000002940L,0x0000000002000000L});
    public static final BitSet FOLLOW_ColonColon_in_ruleXMemberFeatureCall4787 = new BitSet(new long[]{0x0000000000002940L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall4822 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_ruleXMemberFeatureCall4838 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXMemberFeatureCall4860 = new BitSet(new long[]{0x0042000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_FullStop_in_ruleXMemberFeatureCall4942 = new BitSet(new long[]{0x0000000000042940L,0x0000000002000800L});
    public static final BitSet FOLLOW_QuestionMarkFullStop_in_ruleXMemberFeatureCall4966 = new BitSet(new long[]{0x0000000000042940L,0x0000000002000800L});
    public static final BitSet FOLLOW_ColonColon_in_ruleXMemberFeatureCall5002 = new BitSet(new long[]{0x0000000000042940L,0x0000000002000800L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleXMemberFeatureCall5030 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall5050 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_Comma_in_ruleXMemberFeatureCall5064 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall5084 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleXMemberFeatureCall5099 = new BitSet(new long[]{0x0000000000042940L,0x0000000002000800L});
    public static final BitSet FOLLOW_ruleIdOrSuper_in_ruleXMemberFeatureCall5123 = new BitSet(new long[]{0x0042000000000002L,0x0000000000008082L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXMemberFeatureCall5156 = new BitSet(new long[]{0x6C10001F051EF950L,0x0000000007D48856L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXMemberFeatureCall5236 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall5264 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_Comma_in_ruleXMemberFeatureCall5278 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall5298 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXMemberFeatureCall5316 = new BitSet(new long[]{0x0042000000000002L,0x0000000000008080L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXMemberFeatureCall5349 = new BitSet(new long[]{0x0042000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_ruleXPrimaryExpression_in_entryRuleXPrimaryExpression5388 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXPrimaryExpression5398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXConstructorCall_in_ruleXPrimaryExpression5445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleXPrimaryExpression5472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSwitchExpression_in_ruleXPrimaryExpression5499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSynchronizedExpression_in_ruleXPrimaryExpression5541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFeatureCall_in_ruleXPrimaryExpression5569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXLiteral_in_ruleXPrimaryExpression5596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXIfExpression_in_ruleXPrimaryExpression5623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXForLoopExpression_in_ruleXPrimaryExpression5677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBasicForLoopExpression_in_ruleXPrimaryExpression5705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXWhileExpression_in_ruleXPrimaryExpression5732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXDoWhileExpression_in_ruleXPrimaryExpression5759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXThrowExpression_in_ruleXPrimaryExpression5786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXReturnExpression_in_ruleXPrimaryExpression5813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTryCatchFinallyExpression_in_ruleXPrimaryExpression5840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXParenthesizedExpression_in_ruleXPrimaryExpression5867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXLiteral_in_entryRuleXLiteral5901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXLiteral5911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCollectionLiteral_in_ruleXLiteral5958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXLiteral5997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBooleanLiteral_in_ruleXLiteral6025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNumberLiteral_in_ruleXLiteral6052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNullLiteral_in_ruleXLiteral6079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXStringLiteral_in_ruleXLiteral6106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTypeLiteral_in_ruleXLiteral6133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCollectionLiteral_in_entryRuleXCollectionLiteral6167 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCollectionLiteral6177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSetLiteral_in_ruleXCollectionLiteral6224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXListLiteral_in_ruleXCollectionLiteral6251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSetLiteral_in_entryRuleXSetLiteral6285 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXSetLiteral6295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NumberSign_in_ruleXSetLiteral6342 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_LeftCurlyBracket_in_ruleXSetLiteral6354 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D88852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSetLiteral6375 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080020L});
    public static final BitSet FOLLOW_Comma_in_ruleXSetLiteral6389 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSetLiteral6409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080020L});
    public static final BitSet FOLLOW_RightCurlyBracket_in_ruleXSetLiteral6426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXListLiteral_in_entryRuleXListLiteral6460 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXListLiteral6470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NumberSign_in_ruleXListLiteral6517 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_LeftSquareBracket_in_ruleXListLiteral6529 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D18852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXListLiteral6550 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010020L});
    public static final BitSet FOLLOW_Comma_in_ruleXListLiteral6564 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXListLiteral6584 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010020L});
    public static final BitSet FOLLOW_RightSquareBracket_in_ruleXListLiteral6601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_entryRuleXClosure6635 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXClosure6645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftSquareBracket_in_ruleXClosure6705 = new BitSet(new long[]{0x6C10001F051EF950L,0x0000000007D58852L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXClosure6774 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_Comma_in_ruleXClosure6788 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXClosure6808 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_VerticalLine_in_ruleXClosure6831 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D18852L});
    public static final BitSet FOLLOW_ruleXExpressionInClosure_in_ruleXClosure6866 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_RightSquareBracket_in_ruleXClosure6879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionInClosure_in_entryRuleXExpressionInClosure6913 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpressionInClosure6923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXExpressionInClosure6979 = new BitSet(new long[]{0x6C00001F051EF952L,0x0000000007D08C52L});
    public static final BitSet FOLLOW_Semicolon_in_ruleXExpressionInClosure6993 = new BitSet(new long[]{0x6C00001F051EF952L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_entryRuleXShortClosure7031 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXShortClosure7041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure7146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_Comma_in_ruleXShortClosure7160 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure7180 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_VerticalLine_in_ruleXShortClosure7203 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXShortClosure7237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXParenthesizedExpression_in_entryRuleXParenthesizedExpression7272 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXParenthesizedExpression7282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXParenthesizedExpression7320 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXParenthesizedExpression7341 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXParenthesizedExpression7353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXIfExpression_in_entryRuleXIfExpression7387 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXIfExpression7397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_If_in_ruleXIfExpression7444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXIfExpression7456 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression7476 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXIfExpression7489 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression7509 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_Else_in_ruleXIfExpression7530 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression7551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSwitchExpression_in_entryRuleXSwitchExpression7588 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXSwitchExpression7598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Switch_in_ruleXSwitchExpression7645 = new BitSet(new long[]{0x6C10001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXSwitchExpression7681 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXSwitchExpression7701 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_Colon_in_ruleXSwitchExpression7714 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression7736 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXSwitchExpression7749 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXSwitchExpression7796 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_Colon_in_ruleXSwitchExpression7809 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression7832 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_LeftCurlyBracket_in_ruleXSwitchExpression7847 = new BitSet(new long[]{0x0010000000400080L,0x0000000002080222L});
    public static final BitSet FOLLOW_ruleXCasePart_in_ruleXSwitchExpression7867 = new BitSet(new long[]{0x0010000000400080L,0x0000000002080222L});
    public static final BitSet FOLLOW_Default_in_ruleXSwitchExpression7882 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_Colon_in_ruleXSwitchExpression7894 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression7914 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_RightCurlyBracket_in_ruleXSwitchExpression7929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCasePart_in_entryRuleXCasePart7963 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCasePart7973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXCasePart8028 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000220L});
    public static final BitSet FOLLOW_Case_in_ruleXCasePart8043 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCasePart8063 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000220L});
    public static final BitSet FOLLOW_Colon_in_ruleXCasePart8080 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCasePart8100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Comma_in_ruleXCasePart8126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXForLoopExpression_in_entryRuleXForLoopExpression8173 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXForLoopExpression8183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_For_in_ruleXForLoopExpression8258 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXForLoopExpression8270 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXForLoopExpression8290 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_Colon_in_ruleXForLoopExpression8303 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXForLoopExpression8325 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXForLoopExpression8338 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXForLoopExpression8358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBasicForLoopExpression_in_entryRuleXBasicForLoopExpression8393 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXBasicForLoopExpression8403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_For_in_ruleXBasicForLoopExpression8450 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXBasicForLoopExpression8462 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08C52L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBasicForLoopExpression8483 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000420L});
    public static final BitSet FOLLOW_Comma_in_ruleXBasicForLoopExpression8497 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBasicForLoopExpression8517 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000420L});
    public static final BitSet FOLLOW_Semicolon_in_ruleXBasicForLoopExpression8534 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08C52L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression8554 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_Semicolon_in_ruleXBasicForLoopExpression8568 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08856L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression8589 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_Comma_in_ruleXBasicForLoopExpression8603 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression8623 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXBasicForLoopExpression8640 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression8660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXWhileExpression_in_entryRuleXWhileExpression8695 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXWhileExpression8705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_While_in_ruleXWhileExpression8752 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXWhileExpression8764 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXWhileExpression8784 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXWhileExpression8797 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXWhileExpression8817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXDoWhileExpression_in_entryRuleXDoWhileExpression8852 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXDoWhileExpression8862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Do_in_ruleXDoWhileExpression8909 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXDoWhileExpression8929 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_While_in_ruleXDoWhileExpression8942 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXDoWhileExpression8954 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXDoWhileExpression8974 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXDoWhileExpression8987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_entryRuleXExpressionOrVarDeclaration9021 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpressionOrVarDeclaration9031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXVariableDeclaration_in_ruleXExpressionOrVarDeclaration9078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXExpressionOrVarDeclaration9105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXVariableDeclaration_in_entryRuleXVariableDeclaration9139 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXVariableDeclaration9149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Var_in_ruleXVariableDeclaration9203 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_Val_in_ruleXVariableDeclaration9233 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXVariableDeclaration9280 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXVariableDeclaration9301 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXVariableDeclaration9330 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_EqualsSign_in_ruleXVariableDeclaration9345 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXVariableDeclaration9365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_entryRuleJvmFormalParameter9402 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmFormalParameter9412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmFormalParameter9458 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleJvmFormalParameter9480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFullJvmFormalParameter_in_entryRuleFullJvmFormalParameter9515 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFullJvmFormalParameter9525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleFullJvmFormalParameter9571 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleFullJvmFormalParameter9592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFeatureCall_in_entryRuleXFeatureCall9627 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXFeatureCall9637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleXFeatureCall9685 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall9705 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_Comma_in_ruleXFeatureCall9719 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall9739 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleXFeatureCall9754 = new BitSet(new long[]{0x0000000000042940L,0x0000000002000800L});
    public static final BitSet FOLLOW_ruleIdOrSuper_in_ruleXFeatureCall9778 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXFeatureCall9811 = new BitSet(new long[]{0x6C10001F051EF950L,0x0000000007D48856L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXFeatureCall9891 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXFeatureCall9919 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_Comma_in_ruleXFeatureCall9933 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXFeatureCall9953 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXFeatureCall9971 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXFeatureCall10004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_entryRuleFeatureCallID10041 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFeatureCallID10052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleFeatureCallID10099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Extends_in_ruleFeatureCallID10123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Static_in_ruleFeatureCallID10142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Import_in_ruleFeatureCallID10161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Extension_in_ruleFeatureCallID10180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIdOrSuper_in_entryRuleIdOrSuper10220 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIdOrSuper10231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleIdOrSuper10278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Super_in_ruleIdOrSuper10302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXConstructorCall_in_entryRuleXConstructorCall10341 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXConstructorCall10351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_New_in_ruleXConstructorCall10398 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXConstructorCall10420 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008802L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleXConstructorCall10441 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall10462 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_Comma_in_ruleXConstructorCall10476 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall10496 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleXConstructorCall10511 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXConstructorCall10545 = new BitSet(new long[]{0x6C10001F051EF950L,0x0000000007D48856L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXConstructorCall10625 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXConstructorCall10653 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_Comma_in_ruleXConstructorCall10667 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXConstructorCall10687 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXConstructorCall10705 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXConstructorCall10738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBooleanLiteral_in_entryRuleXBooleanLiteral10774 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXBooleanLiteral10784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_False_in_ruleXBooleanLiteral10832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_True_in_ruleXBooleanLiteral10856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNullLiteral_in_entryRuleXNullLiteral10903 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXNullLiteral10913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Null_in_ruleXNullLiteral10960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNumberLiteral_in_entryRuleXNumberLiteral10994 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXNumberLiteral11004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleXNumberLiteral11059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXStringLiteral_in_entryRuleXStringLiteral11094 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXStringLiteral11104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleXStringLiteral11155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTypeLiteral_in_entryRuleXTypeLiteral11195 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXTypeLiteral11205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Typeof_in_ruleXTypeLiteral11252 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXTypeLiteral11264 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXTypeLiteral11286 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008004L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_ruleXTypeLiteral11307 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXTypeLiteral11321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXThrowExpression_in_entryRuleXThrowExpression11355 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXThrowExpression11365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Throw_in_ruleXThrowExpression11412 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXThrowExpression11432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXReturnExpression_in_entryRuleXReturnExpression11467 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXReturnExpression11477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Return_in_ruleXReturnExpression11524 = new BitSet(new long[]{0x6C00001F051EF952L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXReturnExpression11724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTryCatchFinallyExpression_in_entryRuleXTryCatchFinallyExpression11760 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXTryCatchFinallyExpression11770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Try_in_ruleXTryCatchFinallyExpression11817 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression11837 = new BitSet(new long[]{0x0000000000010200L});
    public static final BitSet FOLLOW_ruleXCatchClause_in_ruleXTryCatchFinallyExpression11866 = new BitSet(new long[]{0x0000000000010202L});
    public static final BitSet FOLLOW_Finally_in_ruleXTryCatchFinallyExpression11888 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression11909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Finally_in_ruleXTryCatchFinallyExpression11932 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression11952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSynchronizedExpression_in_entryRuleXSynchronizedExpression11989 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXSynchronizedExpression11999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Synchronized_in_ruleXSynchronizedExpression12062 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXSynchronizedExpression12074 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSynchronizedExpression12096 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXSynchronizedExpression12109 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSynchronizedExpression12129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCatchClause_in_entryRuleXCatchClause12164 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCatchClause12174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Catch_in_ruleXCatchClause12219 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXCatchClause12232 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleFullJvmFormalParameter_in_ruleXCatchClause12252 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXCatchClause12265 = new BitSet(new long[]{0x6C00001F051EF950L,0x0000000007D08852L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCatchClause12285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName12321 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName12332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedName12379 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_FullStop_in_ruleQualifiedName12407 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedName12430 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_ruleNumber_in_entryRuleNumber12483 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNumber12494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleNumber12538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleNumber12566 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_RULE_DECIMAL_in_ruleNumber12592 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_FullStop_in_ruleNumber12612 = new BitSet(new long[]{0x0000000000000000L,0x0000000001800000L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleNumber12628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_DECIMAL_in_ruleNumber12654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference12708 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmTypeReference12718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleJvmTypeReference12766 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_ruleJvmTypeReference12801 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_ruleXFunctionTypeRef_in_ruleJvmTypeReference12832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_entryRuleArrayBrackets12867 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleArrayBrackets12878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftSquareBracket_in_ruleArrayBrackets12916 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_RightSquareBracket_in_ruleArrayBrackets12929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFunctionTypeRef_in_entryRuleXFunctionTypeRef12968 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXFunctionTypeRef12978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_ruleXFunctionTypeRef13017 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000006L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13038 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_Comma_in_ruleXFunctionTypeRef13052 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13072 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});
    public static final BitSet FOLLOW_RightParenthesis_in_ruleXFunctionTypeRef13089 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_EqualsSignGreaterThanSign_in_ruleXFunctionTypeRef13103 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_entryRuleJvmParameterizedTypeReference13158 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmParameterizedTypeReference13168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleJvmParameterizedTypeReference13216 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleJvmParameterizedTypeReference13237 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13258 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_Comma_in_ruleJvmParameterizedTypeReference13272 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13292 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleJvmParameterizedTypeReference13307 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_FullStop_in_ruleJvmParameterizedTypeReference13342 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleJvmParameterizedTypeReference13366 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000880L});
    public static final BitSet FOLLOW_LessThanSign_in_ruleJvmParameterizedTypeReference13387 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13408 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_Comma_in_ruleJvmParameterizedTypeReference13422 = new BitSet(new long[]{0x0010000000000000L,0x0000000002004002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13442 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002020L});
    public static final BitSet FOLLOW_GreaterThanSign_in_ruleJvmParameterizedTypeReference13457 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_entryRuleJvmArgumentTypeReference13497 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmArgumentTypeReference13507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmArgumentTypeReference13554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmWildcardTypeReference_in_ruleJvmArgumentTypeReference13581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmWildcardTypeReference_in_entryRuleJvmWildcardTypeReference13615 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmWildcardTypeReference13625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QuestionMark_in_ruleJvmWildcardTypeReference13672 = new BitSet(new long[]{0x0000000000040102L});
    public static final BitSet FOLLOW_ruleJvmUpperBound_in_ruleJvmWildcardTypeReference13694 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleJvmUpperBoundAnded_in_ruleJvmWildcardTypeReference13715 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleJvmLowerBound_in_ruleJvmWildcardTypeReference13745 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleJvmLowerBoundAnded_in_ruleJvmWildcardTypeReference13766 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleJvmUpperBound_in_entryRuleJvmUpperBound13805 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmUpperBound13815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Extends_in_ruleJvmUpperBound13853 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBound13873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded13908 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmUpperBoundAnded13918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Ampersand_in_ruleJvmUpperBoundAnded13956 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBoundAnded13976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmLowerBound_in_entryRuleJvmLowerBound14011 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmLowerBound14021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Super_in_ruleJvmLowerBound14059 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBound14079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmLowerBoundAnded_in_entryRuleJvmLowerBoundAnded14114 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmLowerBoundAnded14124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Ampersand_in_ruleJvmLowerBoundAnded14162 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBoundAnded14182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard14220 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard14231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard14278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_FullStop_in_ruleQualifiedNameWithWildcard14296 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_Asterisk_in_ruleQualifiedNameWithWildcard14309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_entryRuleValidID14349 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValidID14360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleValidID14399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXImportDeclaration_in_entryRuleXImportDeclaration14444 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXImportDeclaration14454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Import_in_ruleXImportDeclaration14492 = new BitSet(new long[]{0x0000000000002000L,0x0000000002000000L});
    public static final BitSet FOLLOW_Static_in_ruleXImportDeclaration14512 = new BitSet(new long[]{0x0000000000000040L,0x0000000002000000L});
    public static final BitSet FOLLOW_Extension_in_ruleXImportDeclaration14542 = new BitSet(new long[]{0x0000000000000040L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleQualifiedNameInStaticImport_in_ruleXImportDeclaration14577 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000008L});
    public static final BitSet FOLLOW_Asterisk_in_ruleXImportDeclaration14597 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXImportDeclaration14635 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXImportDeclaration14666 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_ruleXImportDeclaration14693 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_Semicolon_in_ruleXImportDeclaration14708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedNameInStaticImport_in_entryRuleQualifiedNameInStaticImport14745 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedNameInStaticImport14756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedNameInStaticImport14803 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_FullStop_in_ruleQualifiedNameInStaticImport14821 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_synpred1_InternalRuleEngineParser1107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_synpred2_InternalRuleEngineParser1627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_synpred3_InternalRuleEngineParser1884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_synpred4_InternalRuleEngineParser2141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Instanceof_in_synpred5_InternalRuleEngineParser2453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpCompare_in_synpred6_InternalRuleEngineParser2523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpOther_in_synpred7_InternalRuleEngineParser2855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GreaterThanSign_in_synpred8_InternalRuleEngineParser3123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_GreaterThanSign_in_synpred8_InternalRuleEngineParser3128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_synpred9_InternalRuleEngineParser3210 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_LessThanSign_in_synpred9_InternalRuleEngineParser3215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpAdd_in_synpred10_InternalRuleEngineParser3436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpMulti_in_synpred11_InternalRuleEngineParser3714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_As_in_synpred12_InternalRuleEngineParser4304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpPostfix_in_synpred13_InternalRuleEngineParser4459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FullStop_in_synpred14_InternalRuleEngineParser4712 = new BitSet(new long[]{0x0000000000002940L,0x0000000002000000L});
    public static final BitSet FOLLOW_ColonColon_in_synpred14_InternalRuleEngineParser4725 = new BitSet(new long[]{0x0000000000002940L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_synpred14_InternalRuleEngineParser4739 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_synpred14_InternalRuleEngineParser4744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FullStop_in_synpred15_InternalRuleEngineParser4885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QuestionMarkFullStop_in_synpred15_InternalRuleEngineParser4898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ColonColon_in_synpred15_InternalRuleEngineParser4916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_synpred16_InternalRuleEngineParser5139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred17_InternalRuleEngineParser5188 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_Comma_in_synpred17_InternalRuleEngineParser5195 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred17_InternalRuleEngineParser5201 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_VerticalLine_in_synpred17_InternalRuleEngineParser5215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftSquareBracket_in_synpred18_InternalRuleEngineParser5333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Synchronized_in_synpred19_InternalRuleEngineParser5520 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_synpred19_InternalRuleEngineParser5523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_For_in_synpred20_InternalRuleEngineParser5644 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_synpred20_InternalRuleEngineParser5647 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred20_InternalRuleEngineParser5653 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_Colon_in_synpred20_InternalRuleEngineParser5659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftSquareBracket_in_synpred21_InternalRuleEngineParser5979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred23_InternalRuleEngineParser6723 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_Comma_in_synpred23_InternalRuleEngineParser6730 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred23_InternalRuleEngineParser6736 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_VerticalLine_in_synpred23_InternalRuleEngineParser6750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Else_in_synpred25_InternalRuleEngineParser7522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_synpred26_InternalRuleEngineParser7659 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred26_InternalRuleEngineParser7665 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_Colon_in_synpred26_InternalRuleEngineParser7671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred27_InternalRuleEngineParser7772 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_Colon_in_synpred27_InternalRuleEngineParser7778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_synpred29_InternalRuleEngineParser9250 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_ruleValidID_in_synpred29_InternalRuleEngineParser9259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_synpred30_InternalRuleEngineParser9794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalRuleEngineParser9843 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_Comma_in_synpred31_InternalRuleEngineParser9850 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalRuleEngineParser9856 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_VerticalLine_in_synpred31_InternalRuleEngineParser9870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftSquareBracket_in_synpred32_InternalRuleEngineParser9988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_synpred33_InternalRuleEngineParser10433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftParenthesis_in_synpred34_InternalRuleEngineParser10528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred35_InternalRuleEngineParser10577 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_Comma_in_synpred35_InternalRuleEngineParser10584 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred35_InternalRuleEngineParser10590 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L});
    public static final BitSet FOLLOW_VerticalLine_in_synpred35_InternalRuleEngineParser10604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LeftSquareBracket_in_synpred36_InternalRuleEngineParser10722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_synpred37_InternalRuleEngineParser11533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Catch_in_synpred38_InternalRuleEngineParser11851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Finally_in_synpred39_InternalRuleEngineParser11880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FullStop_in_synpred42_InternalRuleEngineParser12398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_synpred43_InternalRuleEngineParser12780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_synpred44_InternalRuleEngineParser13229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FullStop_in_synpred45_InternalRuleEngineParser13323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LessThanSign_in_synpred46_InternalRuleEngineParser13379 = new BitSet(new long[]{0x0000000000000002L});

}