/*
 * generated by Xtext
 */
grammar PsiInternalInheritanceTest3Language;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.grammarinheritance.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.grammarinheritance.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.grammarinheritance.idea.lang.InheritanceTest3LanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.grammarinheritance.services.InheritanceTest3LanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected InheritanceTest3LanguageGrammarAccess grammarAccess;

	protected InheritanceTest3LanguageElementTypeProvider elementTypeProvider;

	public PsiInternalInheritanceTest3LanguageParser(PsiBuilder builder, TokenStream input, InheritanceTest3LanguageElementTypeProvider elementTypeProvider, InheritanceTest3LanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Model";
	}

}

//Entry rule entryRuleModel
entryRuleModel returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getModelElementType()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [Boolean current=false]
:
	{
		markComposite(elementTypeProvider.getModel_ModelParserRuleCallElementType());
	}
	this_Model_0=superModel
	{
		$current = $this_Model_0.current;
		doneComposite();
	}
;

//Entry rule entryRuleElement
entryRuleElement returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getElementElementType()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getElement_ElementParserRuleCall_0ElementType());
		}
		this_Element_0=superElement
		{
			$current = $this_Element_0.current;
			doneComposite();
		}
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getElement_ElementAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getElement_ElementKeyword_1_1ElementType());
			}
			otherlv_2='element'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getElement_NameIDTerminalRuleCall_1_2_0ElementType());
					}
					lv_name_3_0=SUPER_ID
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_name_3_0);
					}
				)
			)
		)
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getElement_ElementAction_2_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getElement_ElementKeyword_2_1ElementType());
			}
			otherlv_5='element'
			{
				doneLeaf(otherlv_5);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getElement_NameIDTerminalRuleCall_2_2_0ElementType());
					}
					lv_name_6_0=SUPER_1_ID
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_name_6_0);
					}
				)
			)
		)
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getElement_ElementAction_3_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getElement_ElementKeyword_3_1ElementType());
			}
			otherlv_8='element'
			{
				doneLeaf(otherlv_8);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getElement_NameSTRINGTerminalRuleCall_3_2_0ElementType());
					}
					lv_name_9_0=RULE_STRING
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_name_9_0);
					}
				)
			)
		)
	)
;

//Entry rule entrySuperModel
entrySuperModel returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getInheritanceTestLanguageModelElementType()); }
	iv_superModel=superModel
	{ $current=$iv_superModel.current; }
	EOF;

// Rule Model
superModel returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getInheritanceTestLanguageModel_ModelKeyword_0ElementType());
		}
		otherlv_0='model'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getInheritanceTestLanguageModel_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getInheritanceTestLanguageModel_LeftCurlyBracketKeyword_2ElementType());
		}
		otherlv_2='{'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getInheritanceTestLanguageModel_ElementsElementParserRuleCall_3_0ElementType());
				}
				lv_elements_3_0=ruleElement
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)*
		{
			markLeaf(elementTypeProvider.getInheritanceTestLanguageModel_RightCurlyBracketKeyword_4ElementType());
		}
		otherlv_4='}'
		{
			doneLeaf(otherlv_4);
		}
	)
;

//Entry rule entrySuperElement
entrySuperElement returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getInheritanceTestLanguageElementElementType()); }
	iv_superElement=superElement
	{ $current=$iv_superElement.current; }
	EOF;

// Rule Element
superElement returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getInheritanceTestLanguageElement_ElementKeyword_0ElementType());
		}
		otherlv_0='element'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getInheritanceTestLanguageElement_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
	)
;

RULE_ID : 'id';

SUPER_ID : ('a'..'z')+;

SUPER_1_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
