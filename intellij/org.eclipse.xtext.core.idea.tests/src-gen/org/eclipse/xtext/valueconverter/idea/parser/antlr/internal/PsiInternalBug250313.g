/*
 * generated by Xtext
 */
grammar PsiInternalBug250313;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.valueconverter.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.valueconverter.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.valueconverter.idea.lang.Bug250313ElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.valueconverter.services.Bug250313GrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected Bug250313GrammarAccess grammarAccess;

	protected Bug250313ElementTypeProvider elementTypeProvider;

	public PsiInternalBug250313Parser(PsiBuilder builder, TokenStream input, Bug250313ElementTypeProvider elementTypeProvider, Bug250313GrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Model";
	}

}

//Entry rule entryRuleModel
entryRuleModel:
	{ markComposite(elementTypeProvider.getModelElementType()); }
	ruleModel
	EOF;

// Rule Model
ruleModel:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getModel_DigitOneKeyword_0_0ElementType());
				}
				otherlv_0='1'
				{
					doneLeaf(otherlv_0);
				}
			)?
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getModel_ValueMykeyword1Keyword_0_1_0_0ElementType());
						}
						lv_value_1_1='mykeyword1'
						{
							doneLeaf(lv_value_1_1);
						}
						    |
						{
							markLeaf(elementTypeProvider.getModel_ValueSTRINGTerminalRuleCall_0_1_0_1ElementType());
						}
						lv_value_1_2=RULE_STRING
						{
							doneLeaf(lv_value_1_2);
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_ValueNestedDatatypeParserRuleCall_0_1_0_2ElementType());
						}
						lv_value_1_3=ruleNestedDatatype
						{
							doneComposite();
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_ValueDatatypeParserRuleCall_0_1_0_3ElementType());
						}
						lv_value_1_4=ruleDatatype
						{
							doneComposite();
						}
						    |
						{
							markLeaf(elementTypeProvider.getModel_ValueIDTerminalRuleCall_0_1_0_4ElementType());
						}
						lv_value_1_5=RULE_ID
						{
							doneLeaf(lv_value_1_5);
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_DigitOnePlusSignKeyword_1_0ElementType());
			}
			otherlv_2='1+'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getModel_MultiValueMykeyword1Keyword_1_1_0_0ElementType());
						}
						lv_multiValue_3_1='mykeyword1'
						{
							doneLeaf(lv_multiValue_3_1);
						}
						    |
						{
							markLeaf(elementTypeProvider.getModel_MultiValueSTRINGTerminalRuleCall_1_1_0_1ElementType());
						}
						lv_multiValue_3_2=RULE_STRING
						{
							doneLeaf(lv_multiValue_3_2);
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_MultiValueNestedDatatypeParserRuleCall_1_1_0_2ElementType());
						}
						lv_multiValue_3_3=ruleNestedDatatype
						{
							doneComposite();
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_MultiValueDatatypeParserRuleCall_1_1_0_3ElementType());
						}
						lv_multiValue_3_4=ruleDatatype
						{
							doneComposite();
						}
						    |
						{
							markLeaf(elementTypeProvider.getModel_MultiValueIDTerminalRuleCall_1_1_0_4ElementType());
						}
						lv_multiValue_3_5=RULE_ID
						{
							doneLeaf(lv_multiValue_3_5);
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_DigitTwoKeyword_2_0ElementType());
			}
			otherlv_4='2'
			{
				doneLeaf(otherlv_4);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getModel_ValueSTRINGTerminalRuleCall_2_1_0ElementType());
					}
					lv_value_5_0=RULE_STRING
					{
						doneLeaf(lv_value_5_0);
					}
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_DigitTwoPlusSignKeyword_3_0ElementType());
			}
			otherlv_6='2+'
			{
				doneLeaf(otherlv_6);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getModel_MultiValueSTRINGTerminalRuleCall_3_1_0ElementType());
					}
					lv_multiValue_7_0=RULE_STRING
					{
						doneLeaf(lv_multiValue_7_0);
					}
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_DigitThreeKeyword_4_0ElementType());
			}
			otherlv_8='3'
			{
				doneLeaf(otherlv_8);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_ValueDatatypeParserRuleCall_4_1_0ElementType());
					}
					lv_value_9_0=ruleDatatype
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_DigitThreePlusSignKeyword_5_0ElementType());
			}
			otherlv_10='3+'
			{
				doneLeaf(otherlv_10);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_MultiValueDatatypeParserRuleCall_5_1_0ElementType());
					}
					lv_multiValue_11_0=ruleDatatype
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_DigitFourKeyword_6_0ElementType());
			}
			otherlv_12='4'
			{
				doneLeaf(otherlv_12);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_ValueNestedDatatypeParserRuleCall_6_1_0ElementType());
					}
					lv_value_13_0=ruleNestedDatatype
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_DigitFourPlusSignKeyword_7_0ElementType());
			}
			otherlv_14='4+'
			{
				doneLeaf(otherlv_14);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_MultiValueNestedDatatypeParserRuleCall_7_1_0ElementType());
					}
					lv_multiValue_15_0=ruleNestedDatatype
					{
						doneComposite();
					}
				)
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getModel_ContentKeyword_8_0_0ElementType());
				}
				otherlv_16='content'
				{
					doneLeaf(otherlv_16);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getModel_ChildrenChildParserRuleCall_8_0_1_0ElementType());
						}
						lv_children_17_0=ruleChild
						{
							doneComposite();
						}
					)
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getModel_RefKeyword_8_1_0ElementType());
				}
				otherlv_18='ref'
				{
					doneLeaf(otherlv_18);
				}
				(
					(
						(
							{
								markLeaf(elementTypeProvider.getModel_RefChild1CrossReference_8_1_1_0_0ElementType());
							}
							otherlv_19=RULE_STRING
							{
								doneLeaf(otherlv_19);
							}
							    |
							{
								markLeaf(elementTypeProvider.getModel_RefChild2CrossReference_8_1_1_0_1ElementType());
							}
							otherlv_19=RULE_ID
							{
								doneLeaf(otherlv_19);
							}
						)
					)
				)
			)?
		)
	)
;

//Entry rule entryRuleDatatype
entryRuleDatatype:
	{ markComposite(elementTypeProvider.getDatatypeElementType()); }
	ruleDatatype
	EOF;

// Rule Datatype
ruleDatatype:
	(
		{
			markLeaf(elementTypeProvider.getDatatype_IDTerminalRuleCall_0ElementType());
		}
		this_ID_0=RULE_ID
		{
			doneLeaf(this_ID_0);
		}
		{
			markLeaf(elementTypeProvider.getDatatype_HyphenMinusKeyword_1ElementType());
		}
		kw='-'
		{
			doneLeaf(kw);
		}
		{
			markLeaf(elementTypeProvider.getDatatype_IDTerminalRuleCall_2ElementType());
		}
		this_ID_2=RULE_ID
		{
			doneLeaf(this_ID_2);
		}
	)
;

//Entry rule entryRuleNestedDatatype
entryRuleNestedDatatype:
	{ markComposite(elementTypeProvider.getNestedDatatypeElementType()); }
	ruleNestedDatatype
	EOF;

// Rule NestedDatatype
ruleNestedDatatype:
	(
		{
			markLeaf(elementTypeProvider.getNestedDatatype_IDTerminalRuleCall_0ElementType());
		}
		this_ID_0=RULE_ID
		{
			doneLeaf(this_ID_0);
		}
		{
			markLeaf(elementTypeProvider.getNestedDatatype_PlusSignKeyword_1ElementType());
		}
		kw='+'
		{
			doneLeaf(kw);
		}
		(
			{
				markComposite(elementTypeProvider.getNestedDatatype_DatatypeParserRuleCall_2ElementType());
			}
			ruleDatatype
			{
				doneComposite();
			}
		)?
	)
;

//Entry rule entryRuleChild
entryRuleChild:
	{ markComposite(elementTypeProvider.getChildElementType()); }
	ruleChild
	EOF;

// Rule Child
ruleChild:
	(
		{
			markComposite(elementTypeProvider.getChild_Child1ParserRuleCall_0ElementType());
		}
		ruleChild1
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getChild_Child2ParserRuleCall_1ElementType());
		}
		ruleChild2
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleChild1
entryRuleChild1:
	{ markComposite(elementTypeProvider.getChild1ElementType()); }
	ruleChild1
	EOF;

// Rule Child1
ruleChild1:
	(
		(
			{
				markLeaf(elementTypeProvider.getChild1_NameIDTerminalRuleCall_0ElementType());
			}
			lv_name_0_0=RULE_ID
			{
				doneLeaf(lv_name_0_0);
			}
		)
	)
;

//Entry rule entryRuleChild2
entryRuleChild2:
	{ markComposite(elementTypeProvider.getChild2ElementType()); }
	ruleChild2
	EOF;

// Rule Child2
ruleChild2:
	(
		(
			{
				markLeaf(elementTypeProvider.getChild2_NameSTRINGTerminalRuleCall_0ElementType());
			}
			lv_name_0_0=RULE_STRING
			{
				doneLeaf(lv_name_0_0);
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
