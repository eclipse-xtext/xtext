/*
 * generated by Xtext
 */
grammar PsiInternalBug385636;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.resource.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.resource.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.resource.idea.lang.Bug385636ElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.resource.services.Bug385636GrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected Bug385636GrammarAccess grammarAccess;

	protected Bug385636ElementTypeProvider elementTypeProvider;

	public PsiInternalBug385636Parser(PsiBuilder builder, TokenStream input, Bug385636ElementTypeProvider elementTypeProvider, Bug385636GrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Program";
	}

}

//Entry rule entryRuleProgram
entryRuleProgram:
	{ markComposite(elementTypeProvider.getProgramElementType()); }
	ruleProgram
	EOF;

// Rule Program
ruleProgram:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getProgram_DefineDefineVariablesParserRuleCall_0_0ElementType());
				}
				lv_define_0_0=ruleDefineVariables
				{
					doneComposite();
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getProgram_StatementsStatementParserRuleCall_1_0ElementType());
				}
				lv_statements_1_0=ruleStatement
				{
					doneComposite();
				}
			)
		)*
		{
			markLeaf(elementTypeProvider.getProgram_ENDKeyword_2ElementType());
		}
		otherlv_2='END'
		{
			doneLeaf(otherlv_2);
		}
	)
;

//Entry rule entryRuleDefineVariables
entryRuleDefineVariables:
	{ markComposite(elementTypeProvider.getDefineVariablesElementType()); }
	ruleDefineVariables
	EOF;

// Rule DefineVariables
ruleDefineVariables:
	(
		{
			markLeaf(elementTypeProvider.getDefineVariables_VARIABLESKeyword_0ElementType());
		}
		otherlv_0='VARIABLES'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getDefineVariables_VariablesDefineVariableParserRuleCall_1_0ElementType());
				}
				lv_variables_1_0=ruleDefineVariable
				{
					doneComposite();
				}
			)
		)+
		{
			markLeaf(elementTypeProvider.getDefineVariables_ENDVARIABLESKeyword_2ElementType());
		}
		otherlv_2='ENDVARIABLES'
		{
			doneLeaf(otherlv_2);
		}
	)
;

//Entry rule entryRuleDefineVariable
entryRuleDefineVariable:
	{ markComposite(elementTypeProvider.getDefineVariableElementType()); }
	ruleDefineVariable
	EOF;

// Rule DefineVariable
ruleDefineVariable:
	(
		{
			markLeaf(elementTypeProvider.getDefineVariable_NAMEKeyword_0ElementType());
		}
		otherlv_0='NAME'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getDefineVariable_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
	)
;

//Entry rule entryRuleNVariableAccess
entryRuleNVariableAccess:
	{ markComposite(elementTypeProvider.getNVariableAccessElementType()); }
	ruleNVariableAccess
	EOF;

// Rule NVariableAccess
ruleNVariableAccess:
	(
		(
			{
				markLeaf(elementTypeProvider.getNVariableAccess_VariableDefineVariableCrossReference_0ElementType());
			}
			otherlv_0=RULE_ID
			{
				doneLeaf(otherlv_0);
			}
		)
	)
;

//Entry rule entryRuleStatement
entryRuleStatement:
	{ markComposite(elementTypeProvider.getStatementElementType()); }
	ruleStatement
	EOF;

// Rule Statement
ruleStatement:
	(
		{
			markComposite(elementTypeProvider.getStatement_Expression_VariableNameParserRuleCall_0ElementType());
		}
		ruleExpression_VariableName
		{
			doneComposite();
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getStatement_C1Keyword_1_0_0ElementType());
				}
				otherlv_1='C1'
				{
					doneLeaf(otherlv_1);
				}
				(
					{
						precedeComposite(elementTypeProvider.getStatement_Expression_Larger_EqualLeftAction_1_0_1ElementType());
						doneComposite();
					}
				)
				(
					(
						{
							markComposite(elementTypeProvider.getStatement_RightExpression_VariableNameParserRuleCall_1_0_2_0ElementType());
						}
						lv_right_3_0=ruleExpression_VariableName
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getStatement_C2Keyword_1_1_0ElementType());
				}
				otherlv_4='C2'
				{
					doneLeaf(otherlv_4);
				}
				(
					{
						precedeComposite(elementTypeProvider.getStatement_Expression_SmallerLeftAction_1_1_1ElementType());
						doneComposite();
					}
				)
				(
					(
						{
							markComposite(elementTypeProvider.getStatement_RightExpression_VariableNameParserRuleCall_1_1_2_0ElementType());
						}
						lv_right_6_0=ruleExpression_VariableName
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getStatement_C3Keyword_1_2_0ElementType());
				}
				otherlv_7='C3'
				{
					doneLeaf(otherlv_7);
				}
				(
					{
						precedeComposite(elementTypeProvider.getStatement_Expression_Smaller_EqualLeftAction_1_2_1ElementType());
						doneComposite();
					}
				)
				(
					(
						{
							markComposite(elementTypeProvider.getStatement_RightExpression_VariableNameParserRuleCall_1_2_2_0ElementType());
						}
						lv_right_9_0=ruleExpression_VariableName
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getStatement_C4Keyword_1_3_0ElementType());
				}
				otherlv_10='C4'
				{
					doneLeaf(otherlv_10);
				}
				(
					{
						precedeComposite(elementTypeProvider.getStatement_Expression_EqualLeftAction_1_3_1ElementType());
						doneComposite();
					}
				)
				(
					(
						{
							markComposite(elementTypeProvider.getStatement_RightExpression_VariableNameParserRuleCall_1_3_2_0ElementType());
						}
						lv_right_12_0=ruleExpression_VariableName
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getStatement_C5Keyword_1_4_0ElementType());
				}
				otherlv_13='C5'
				{
					doneLeaf(otherlv_13);
				}
				(
					{
						precedeComposite(elementTypeProvider.getStatement_Expression_Not_EqualLeftAction_1_4_1ElementType());
						doneComposite();
					}
				)
				(
					(
						{
							markComposite(elementTypeProvider.getStatement_RightExpression_VariableNameParserRuleCall_1_4_2_0ElementType());
						}
						lv_right_15_0=ruleExpression_VariableName
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				(
					{
						markLeaf(elementTypeProvider.getStatement_C6Keyword_1_5_0_0ElementType());
					}
					otherlv_16='C6'
					{
						doneLeaf(otherlv_16);
					}
					{
						markLeaf(elementTypeProvider.getStatement_C7Keyword_1_5_0_1ElementType());
					}
					otherlv_17='C7'
					{
						doneLeaf(otherlv_17);
					}
				)
				(
					{
						precedeComposite(elementTypeProvider.getStatement_Expression_Not_LessLeftAction_1_5_1ElementType());
						doneComposite();
					}
				)
				(
					(
						{
							markComposite(elementTypeProvider.getStatement_RightExpression_VariableNameParserRuleCall_1_5_2_0ElementType());
						}
						lv_right_19_0=ruleExpression_VariableName
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				(
					{
						markLeaf(elementTypeProvider.getStatement_C6Keyword_1_6_0_0ElementType());
					}
					otherlv_20='C6'
					{
						doneLeaf(otherlv_20);
					}
					{
						markLeaf(elementTypeProvider.getStatement_C8Keyword_1_6_0_1ElementType());
					}
					otherlv_21='C8'
					{
						doneLeaf(otherlv_21);
					}
				)
				(
					{
						precedeComposite(elementTypeProvider.getStatement_Expression_Not_GreaterLeftAction_1_6_1ElementType());
						doneComposite();
					}
				)
				(
					(
						{
							markComposite(elementTypeProvider.getStatement_RightExpression_VariableNameParserRuleCall_1_6_2_0ElementType());
						}
						lv_right_23_0=ruleExpression_VariableName
						{
							doneComposite();
						}
					)
				)
			)
		)*
	)
;

//Entry rule entryRuleExpression_VariableName
entryRuleExpression_VariableName:
	{ markComposite(elementTypeProvider.getExpression_VariableNameElementType()); }
	ruleExpression_VariableName
	EOF;

// Rule Expression_VariableName
ruleExpression_VariableName:
	(
		(
			{
				markComposite(elementTypeProvider.getExpression_VariableName_VariableNVariableAccessParserRuleCall_0ElementType());
			}
			lv_variable_0_0=ruleNVariableAccess
			{
				doneComposite();
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
