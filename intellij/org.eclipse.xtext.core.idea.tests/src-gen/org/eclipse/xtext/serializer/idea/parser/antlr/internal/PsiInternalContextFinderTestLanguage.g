/*
 * generated by Xtext
 */
grammar PsiInternalContextFinderTestLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.serializer.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.serializer.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.serializer.idea.lang.ContextFinderTestLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.serializer.services.ContextFinderTestLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected ContextFinderTestLanguageGrammarAccess grammarAccess;

	protected ContextFinderTestLanguageElementTypeProvider elementTypeProvider;

	public PsiInternalContextFinderTestLanguageParser(PsiBuilder builder, TokenStream input, ContextFinderTestLanguageElementTypeProvider elementTypeProvider, ContextFinderTestLanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Model";
	}

}

//Entry rule entryRuleModel
entryRuleModel returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getModelElementType()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitZeroKeyword_0_0ElementType());
			}
			otherlv_0='#0'
			{
				doneLeaf(otherlv_0);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getModel_ModelModel2ParserRuleCall_0_1_0ElementType());
					}
					lv_model_1_0=ruleModel2
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitOneKeyword_1_0ElementType());
			}
			otherlv_2='#1'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					(
						{
							markComposite(elementTypeProvider.getModel_AttributeExclusionAttributeExclusionTest1ParserRuleCall_1_1_0_0ElementType());
						}
						lv_attributeExclusion_3_1=ruleAttributeExclusionTest1
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_AttributeExclusionAttributeExclusionTest2ParserRuleCall_1_1_0_1ElementType());
						}
						lv_attributeExclusion_3_2=ruleAttributeExclusionTest2
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitTwoKeyword_2_0ElementType());
			}
			otherlv_4='#2'
			{
				doneLeaf(otherlv_4);
			}
			(
				(
					(
						{
							markComposite(elementTypeProvider.getModel_NestedTypeNestedTypeTest1ParserRuleCall_2_1_0_0ElementType());
						}
						lv_nestedType_5_1=ruleNestedTypeTest1
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_NestedTypeNestedTypeTest2ParserRuleCall_2_1_0_1ElementType());
						}
						lv_nestedType_5_2=ruleNestedTypeTest2
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitThreeKeyword_3_0ElementType());
			}
			otherlv_6='#3'
			{
				doneLeaf(otherlv_6);
			}
			(
				(
					(
						{
							markComposite(elementTypeProvider.getModel_NestedTypeRecursiveTest2NestedTypeRecursiveTest1ParserRuleCall_3_1_0_0ElementType());
						}
						lv_nestedTypeRecursiveTest2_7_1=ruleNestedTypeRecursiveTest1
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_NestedTypeRecursiveTest2NestedTypeRecursiveTest2ParserRuleCall_3_1_0_1ElementType());
						}
						lv_nestedTypeRecursiveTest2_7_2=ruleNestedTypeRecursiveTest2
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitFourKeyword_4_0ElementType());
			}
			otherlv_8='#4'
			{
				doneLeaf(otherlv_8);
			}
			(
				(
					(
						{
							markComposite(elementTypeProvider.getModel_ParentRefParentRefTest1ParserRuleCall_4_1_0_0ElementType());
						}
						lv_parentRef_9_1=ruleParentRefTest1
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_ParentRefParentRefTest2ParserRuleCall_4_1_0_1ElementType());
						}
						lv_parentRef_9_2=ruleParentRefTest2
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitFiveKeyword_5_0ElementType());
			}
			otherlv_10='#5'
			{
				doneLeaf(otherlv_10);
			}
			(
				(
					(
						{
							markComposite(elementTypeProvider.getModel_QuantityExclusionQuantityExclusionTest1ParserRuleCall_5_1_0_0ElementType());
						}
						lv_quantityExclusion_11_1=ruleQuantityExclusionTest1
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_QuantityExclusionQuantityExclusionTest2ParserRuleCall_5_1_0_1ElementType());
						}
						lv_quantityExclusion_11_2=ruleQuantityExclusionTest2
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitSixKeyword_6_0ElementType());
			}
			otherlv_12='#6'
			{
				doneLeaf(otherlv_12);
			}
			(
				(
					(
						{
							markComposite(elementTypeProvider.getModel_ValueExclusionValueExclusionTest1ParserRuleCall_6_1_0_0ElementType());
						}
						lv_valueExclusion_13_1=ruleValueExclusionTest1
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_ValueExclusionValueExclusionTest2ParserRuleCall_6_1_0_1ElementType());
						}
						lv_valueExclusion_13_2=ruleValueExclusionTest2
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitSevenKeyword_7_0ElementType());
			}
			otherlv_14='#7'
			{
				doneLeaf(otherlv_14);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getModel_NameSTRINGTerminalRuleCall_7_1_0ElementType());
					}
					lv_name_15_0=RULE_STRING
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_name_15_0);
					}
				)
			)
			(
				(
					(
						{
							markComposite(elementTypeProvider.getModel_NodeExclusionNodeExclusion1ParserRuleCall_7_2_0_0ElementType());
						}
						lv_nodeExclusion_16_1=ruleNodeExclusion1
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_NodeExclusionNodeExclusion2ParserRuleCall_7_2_0_1ElementType());
						}
						lv_nodeExclusion_16_2=ruleNodeExclusion2
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getModel_NumberSignDigitEightKeyword_8_0ElementType());
			}
			otherlv_17='#8'
			{
				doneLeaf(otherlv_17);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getModel_NameSTRINGTerminalRuleCall_8_1_0ElementType());
					}
					lv_name_18_0=RULE_STRING
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_name_18_0);
					}
				)
			)
			(
				(
					(
						{
							markComposite(elementTypeProvider.getModel_NodeExclusionListNodeExclusion1ListParserRuleCall_8_2_0_0ElementType());
						}
						lv_nodeExclusionList_19_1=ruleNodeExclusion1List
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markComposite(elementTypeProvider.getModel_NodeExclusionListNodeExclusion2ListParserRuleCall_8_2_0_1ElementType());
						}
						lv_nodeExclusionList_19_2=ruleNodeExclusion2List
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)
	)
;

//Entry rule entryRuleModel2
entryRuleModel2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getModel2ElementType()); }
	iv_ruleModel2=ruleModel2
	{ $current=$iv_ruleModel2.current; }
	EOF;

// Rule Model2
ruleModel2 returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getModel2_ModelAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getModel2_ModelKeyword_1ElementType());
		}
		otherlv_1='model'
		{
			doneLeaf(otherlv_1);
		}
	)
;

//Entry rule entryRuleAttributeExclusionTest1
entryRuleAttributeExclusionTest1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAttributeExclusionTest1ElementType()); }
	iv_ruleAttributeExclusionTest1=ruleAttributeExclusionTest1
	{ $current=$iv_ruleAttributeExclusionTest1.current; }
	EOF;

// Rule AttributeExclusionTest1
ruleAttributeExclusionTest1 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getAttributeExclusionTest1_Kw1Keyword_0ElementType());
		}
		otherlv_0='kw1'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getAttributeExclusionTest1_Attr1IDTerminalRuleCall_1_0ElementType());
				}
				lv_attr1_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_attr1_1_0);
				}
			)
		)
	)
;

//Entry rule entryRuleAttributeExclusionTest2
entryRuleAttributeExclusionTest2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAttributeExclusionTest2ElementType()); }
	iv_ruleAttributeExclusionTest2=ruleAttributeExclusionTest2
	{ $current=$iv_ruleAttributeExclusionTest2.current; }
	EOF;

// Rule AttributeExclusionTest2
ruleAttributeExclusionTest2 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getAttributeExclusionTest2_Kw2Keyword_0ElementType());
		}
		otherlv_0='kw2'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getAttributeExclusionTest2_Attr2IDTerminalRuleCall_1_0ElementType());
				}
				lv_attr2_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_attr2_1_0);
				}
			)
		)
	)
;

//Entry rule entryRuleNestedTypeTest1
entryRuleNestedTypeTest1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNestedTypeTest1ElementType()); }
	iv_ruleNestedTypeTest1=ruleNestedTypeTest1
	{ $current=$iv_ruleNestedTypeTest1.current; }
	EOF;

// Rule NestedTypeTest1
ruleNestedTypeTest1 returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getNestedTypeTest1_NestedNestedTypeChild1ParserRuleCall_0ElementType());
			}
			lv_nested_0_0=ruleNestedTypeChild1
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleNestedTypeTest2
entryRuleNestedTypeTest2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNestedTypeTest2ElementType()); }
	iv_ruleNestedTypeTest2=ruleNestedTypeTest2
	{ $current=$iv_ruleNestedTypeTest2.current; }
	EOF;

// Rule NestedTypeTest2
ruleNestedTypeTest2 returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getNestedTypeTest2_NestedNestedTypeChild2ParserRuleCall_0ElementType());
			}
			lv_nested_0_0=ruleNestedTypeChild2
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleNestedTypeChild1
entryRuleNestedTypeChild1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNestedTypeChild1ElementType()); }
	iv_ruleNestedTypeChild1=ruleNestedTypeChild1
	{ $current=$iv_ruleNestedTypeChild1.current; }
	EOF;

// Rule NestedTypeChild1
ruleNestedTypeChild1 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getNestedTypeChild1_Kw1Keyword_0ElementType());
		}
		otherlv_0='kw1'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getNestedTypeChild1_ValIDTerminalRuleCall_1_0ElementType());
				}
				lv_val_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_val_1_0);
				}
			)
		)
	)
;

//Entry rule entryRuleNestedTypeChild2
entryRuleNestedTypeChild2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNestedTypeChild2ElementType()); }
	iv_ruleNestedTypeChild2=ruleNestedTypeChild2
	{ $current=$iv_ruleNestedTypeChild2.current; }
	EOF;

// Rule NestedTypeChild2
ruleNestedTypeChild2 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getNestedTypeChild2_Kw2Keyword_0ElementType());
		}
		otherlv_0='kw2'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getNestedTypeChild2_ValIDTerminalRuleCall_1_0ElementType());
				}
				lv_val_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_val_1_0);
				}
			)
		)
	)
;

//Entry rule entryRuleNestedTypeRecursiveTest1
entryRuleNestedTypeRecursiveTest1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNestedTypeRecursiveTest1ElementType()); }
	iv_ruleNestedTypeRecursiveTest1=ruleNestedTypeRecursiveTest1
	{ $current=$iv_ruleNestedTypeRecursiveTest1.current; }
	EOF;

// Rule NestedTypeRecursiveTest1
ruleNestedTypeRecursiveTest1 returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getNestedTypeRecursiveTest1_NestedTypeRecursiveTest1Action_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getNestedTypeRecursiveTest1_Kw1Keyword_1ElementType());
		}
		otherlv_1='kw1'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getNestedTypeRecursiveTest1_NestedTypeRecursiveTestLeftAction_2_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getNestedTypeRecursiveTest1_FullStopKeyword_2_1ElementType());
			}
			otherlv_3='.'
			{
				doneLeaf(otherlv_3);
			}
		)+
	)
;

//Entry rule entryRuleNestedTypeRecursiveTest2
entryRuleNestedTypeRecursiveTest2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNestedTypeRecursiveTest2ElementType()); }
	iv_ruleNestedTypeRecursiveTest2=ruleNestedTypeRecursiveTest2
	{ $current=$iv_ruleNestedTypeRecursiveTest2.current; }
	EOF;

// Rule NestedTypeRecursiveTest2
ruleNestedTypeRecursiveTest2 returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getNestedTypeRecursiveTest2_NestedTypeRecursiveTest2Action_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getNestedTypeRecursiveTest2_Kw2Keyword_1ElementType());
		}
		otherlv_1='kw2'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getNestedTypeRecursiveTest2_NestedTypeRecursiveTestLeftAction_2_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getNestedTypeRecursiveTest2_FullStopKeyword_2_1ElementType());
			}
			otherlv_3='.'
			{
				doneLeaf(otherlv_3);
			}
		)+
	)
;

//Entry rule entryRuleParentRefTest1
entryRuleParentRefTest1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getParentRefTest1ElementType()); }
	iv_ruleParentRefTest1=ruleParentRefTest1
	{ $current=$iv_ruleParentRefTest1.current; }
	EOF;

// Rule ParentRefTest1
ruleParentRefTest1 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getParentRefTest1_Kw1Keyword_0ElementType());
		}
		otherlv_0='kw1'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getParentRefTest1_Child1ParentRefTestChild1ParserRuleCall_1_0ElementType());
				}
				lv_child1_1_0=ruleParentRefTestChild1
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleParentRefTest2
entryRuleParentRefTest2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getParentRefTest2ElementType()); }
	iv_ruleParentRefTest2=ruleParentRefTest2
	{ $current=$iv_ruleParentRefTest2.current; }
	EOF;

// Rule ParentRefTest2
ruleParentRefTest2 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getParentRefTest2_Kw2Keyword_0ElementType());
		}
		otherlv_0='kw2'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getParentRefTest2_Child2ParentRefTestChild2ParserRuleCall_1_0ElementType());
				}
				lv_child2_1_0=ruleParentRefTestChild2
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleParentRefTestChild1
entryRuleParentRefTestChild1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getParentRefTestChild1ElementType()); }
	iv_ruleParentRefTestChild1=ruleParentRefTestChild1
	{ $current=$iv_ruleParentRefTestChild1.current; }
	EOF;

// Rule ParentRefTestChild1
ruleParentRefTestChild1 returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getParentRefTestChild1_ParentRefTestChildAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getParentRefTestChild1_FooKeyword_1ElementType());
		}
		otherlv_1='foo'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getParentRefTestChild1_ChildParentRefTestChild1ParserRuleCall_2_0ElementType());
				}
				lv_child_2_0=ruleParentRefTestChild1
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleParentRefTestChild2
entryRuleParentRefTestChild2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getParentRefTestChild2ElementType()); }
	iv_ruleParentRefTestChild2=ruleParentRefTestChild2
	{ $current=$iv_ruleParentRefTestChild2.current; }
	EOF;

// Rule ParentRefTestChild2
ruleParentRefTestChild2 returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getParentRefTestChild2_ParentRefTestChildAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getParentRefTestChild2_FooKeyword_1ElementType());
		}
		otherlv_1='foo'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getParentRefTestChild2_ChildParentRefTestChild2ParserRuleCall_2_0ElementType());
				}
				lv_child_2_0=ruleParentRefTestChild2
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleQuantityExclusionTest1
entryRuleQuantityExclusionTest1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getQuantityExclusionTest1ElementType()); }
	iv_ruleQuantityExclusionTest1=ruleQuantityExclusionTest1
	{ $current=$iv_ruleQuantityExclusionTest1.current; }
	EOF;

// Rule QuantityExclusionTest1
ruleQuantityExclusionTest1 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getQuantityExclusionTest1_Kw1Keyword_0ElementType());
		}
		otherlv_0='kw1'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getQuantityExclusionTest1_Attr1IDTerminalRuleCall_1_0ElementType());
				}
				lv_attr1_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_attr1_1_0);
				}
			)
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getQuantityExclusionTest1_Attr2IDTerminalRuleCall_2_0ElementType());
				}
				lv_attr2_2_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_attr2_2_0);
				}
			)
		)?
	)
;

//Entry rule entryRuleQuantityExclusionTest2
entryRuleQuantityExclusionTest2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getQuantityExclusionTest2ElementType()); }
	iv_ruleQuantityExclusionTest2=ruleQuantityExclusionTest2
	{ $current=$iv_ruleQuantityExclusionTest2.current; }
	EOF;

// Rule QuantityExclusionTest2
ruleQuantityExclusionTest2 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getQuantityExclusionTest2_Kw2Keyword_0ElementType());
		}
		otherlv_0='kw2'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getQuantityExclusionTest2_Attr1IDTerminalRuleCall_1_0ElementType());
				}
				lv_attr1_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_attr1_1_0);
				}
			)
		)?
		(
			(
				{
					markLeaf(elementTypeProvider.getQuantityExclusionTest2_Attr2IDTerminalRuleCall_2_0ElementType());
				}
				lv_attr2_2_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_attr2_2_0);
				}
			)
		)
	)
;

//Entry rule entryRuleValueExclusionTest1
entryRuleValueExclusionTest1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getValueExclusionTest1ElementType()); }
	iv_ruleValueExclusionTest1=ruleValueExclusionTest1
	{ $current=$iv_ruleValueExclusionTest1.current; }
	EOF;

// Rule ValueExclusionTest1
ruleValueExclusionTest1 returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getValueExclusionTest1_ValValueExclusionTestEn1EnumRuleCall_0ElementType());
			}
			lv_val_0_0=ruleValueExclusionTestEn1
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleValueExclusionTest2
entryRuleValueExclusionTest2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getValueExclusionTest2ElementType()); }
	iv_ruleValueExclusionTest2=ruleValueExclusionTest2
	{ $current=$iv_ruleValueExclusionTest2.current; }
	EOF;

// Rule ValueExclusionTest2
ruleValueExclusionTest2 returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getValueExclusionTest2_ValValueExclusionTestEn2EnumRuleCall_0ElementType());
			}
			lv_val_0_0=ruleValueExclusionTestEn2
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleNodeExclusion1
entryRuleNodeExclusion1 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNodeExclusion1ElementType()); }
	iv_ruleNodeExclusion1=ruleNodeExclusion1
	{ $current=$iv_ruleNodeExclusion1.current; }
	EOF;

// Rule NodeExclusion1
ruleNodeExclusion1 returns [Boolean current=false]
:
	(
		(
			{
				if (!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
			{
				markLeaf(elementTypeProvider.getNodeExclusion1_RefModelCrossReference_0ElementType());
			}
			otherlv_0=RULE_ID
			{
				doneLeaf(otherlv_0);
			}
		)
	)
;

//Entry rule entryRuleNodeExclusion2
entryRuleNodeExclusion2 returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNodeExclusion2ElementType()); }
	iv_ruleNodeExclusion2=ruleNodeExclusion2
	{ $current=$iv_ruleNodeExclusion2.current; }
	EOF;

// Rule NodeExclusion2
ruleNodeExclusion2 returns [Boolean current=false]
:
	(
		(
			{
				if (!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
			{
				markLeaf(elementTypeProvider.getNodeExclusion2_RefModelCrossReference_0ElementType());
			}
			otherlv_0=RULE_STRING
			{
				doneLeaf(otherlv_0);
			}
		)
	)
;

//Entry rule entryRuleNodeExclusion1List
entryRuleNodeExclusion1List returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNodeExclusion1ListElementType()); }
	iv_ruleNodeExclusion1List=ruleNodeExclusion1List
	{ $current=$iv_ruleNodeExclusion1List.current; }
	EOF;

// Rule NodeExclusion1List
ruleNodeExclusion1List returns [Boolean current=false]
:
	(
		(
			{
				if (!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
			{
				markLeaf(elementTypeProvider.getNodeExclusion1List_RefModelCrossReference_0ElementType());
			}
			otherlv_0=RULE_ID
			{
				doneLeaf(otherlv_0);
			}
		)
	)+
;

//Entry rule entryRuleNodeExclusion2List
entryRuleNodeExclusion2List returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNodeExclusion2ListElementType()); }
	iv_ruleNodeExclusion2List=ruleNodeExclusion2List
	{ $current=$iv_ruleNodeExclusion2List.current; }
	EOF;

// Rule NodeExclusion2List
ruleNodeExclusion2List returns [Boolean current=false]
:
	(
		(
			{
				if (!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
			{
				markLeaf(elementTypeProvider.getNodeExclusion2List_RefModelCrossReference_0ElementType());
			}
			otherlv_0=RULE_STRING
			{
				doneLeaf(otherlv_0);
			}
		)
	)+
;

// Rule ValueExclusionTestEn1
ruleValueExclusionTestEn1 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getValueExclusionTestEn1_Lit1EnumLiteralDeclarationElementType());
		}
		enumLiteral_0='lit1'
		{
			doneLeaf(enumLiteral_0);
		}
	)
;

// Rule ValueExclusionTestEn2
ruleValueExclusionTestEn2 returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getValueExclusionTestEn2_Lit2EnumLiteralDeclarationElementType());
		}
		enumLiteral_0='lit2'
		{
			doneLeaf(enumLiteral_0);
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
