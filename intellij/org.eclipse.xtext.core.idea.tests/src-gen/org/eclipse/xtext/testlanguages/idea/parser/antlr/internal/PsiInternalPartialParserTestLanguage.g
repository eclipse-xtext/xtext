/*
 * generated by Xtext
 */
grammar PsiInternalPartialParserTestLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.testlanguages.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.testlanguages.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.testlanguages.idea.lang.PartialParserTestLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.testlanguages.services.PartialParserTestLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected PartialParserTestLanguageGrammarAccess grammarAccess;

	protected PartialParserTestLanguageElementTypeProvider elementTypeProvider;

	public PsiInternalPartialParserTestLanguageParser(PsiBuilder builder, TokenStream input, PartialParserTestLanguageElementTypeProvider elementTypeProvider, PartialParserTestLanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "SomeContainer";
	}

}

//Entry rule entryRuleSomeContainer
entryRuleSomeContainer returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSomeContainerElementType()); }
	iv_ruleSomeContainer=ruleSomeContainer
	{ $current=$iv_ruleSomeContainer.current; }
	EOF;

// Rule SomeContainer
ruleSomeContainer returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getSomeContainer_ContainerKeyword_0ElementType());
		}
		otherlv_0='container'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getSomeContainer_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getSomeContainer_LeftCurlyBracketKeyword_2ElementType());
		}
		otherlv_2='{'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				(
					{
						markComposite(elementTypeProvider.getSomeContainer_NestedNestedParserRuleCall_3_0_0ElementType());
					}
					lv_nested_3_0=ruleNested
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getSomeContainer_ContentContentParserRuleCall_3_1_0ElementType());
					}
					lv_content_4_0=ruleContent
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getSomeContainer_RightCurlyBracketKeyword_4ElementType());
		}
		otherlv_5='}'
		{
			doneLeaf(otherlv_5);
		}
	)
;

//Entry rule entryRuleNested
entryRuleNested returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNestedElementType()); }
	iv_ruleNested=ruleNested
	{ $current=$iv_ruleNested.current; }
	EOF;

// Rule Nested
ruleNested returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getNested_NestedKeyword_0ElementType());
		}
		otherlv_0='nested'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getNested_LeftCurlyBracketKeyword_1ElementType());
		}
		otherlv_1='{'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getNested_NestedSomeContainerParserRuleCall_2_0ElementType());
				}
				lv_nested_2_0=ruleSomeContainer
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		{
			markLeaf(elementTypeProvider.getNested_RightCurlyBracketKeyword_3ElementType());
		}
		otherlv_3='}'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleContent
entryRuleContent returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getContentElementType()); }
	iv_ruleContent=ruleContent
	{ $current=$iv_ruleContent.current; }
	EOF;

// Rule Content
ruleContent returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getContent_ChildrenParserRuleCall_0ElementType());
		}
		this_Children_0=ruleChildren
		{
			$current = $this_Children_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getContent_AbstractChildrenParserRuleCall_1ElementType());
		}
		this_AbstractChildren_1=ruleAbstractChildren
		{
			$current = $this_AbstractChildren_1.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleChildren
entryRuleChildren returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getChildrenElementType()); }
	iv_ruleChildren=ruleChildren
	{ $current=$iv_ruleChildren.current; }
	EOF;

// Rule Children
ruleChildren returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getChildren_ChildrenKeyword_0ElementType());
		}
		otherlv_0='children'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getChildren_LeftCurlyBracketKeyword_1ElementType());
		}
		otherlv_1='{'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getChildren_ChildrenChildParserRuleCall_2_0ElementType());
				}
				lv_children_2_0=ruleChild
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getChildren_CommaKeyword_3_0ElementType());
			}
			otherlv_3=','
			{
				doneLeaf(otherlv_3);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getChildren_ChildrenChildParserRuleCall_3_1_0ElementType());
					}
					lv_children_4_0=ruleChild
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getChildren_RightCurlyBracketKeyword_4ElementType());
		}
		otherlv_5='}'
		{
			doneLeaf(otherlv_5);
		}
	)
;

//Entry rule entryRuleChild
entryRuleChild returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getChildElementType()); }
	iv_ruleChild=ruleChild
	{ $current=$iv_ruleChild.current; }
	EOF;

// Rule Child
ruleChild returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getChild_HyphenMinusGreaterThanSignKeyword_0ElementType());
		}
		otherlv_0='->'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getChild_CKeyword_1ElementType());
		}
		otherlv_1='C'
		{
			doneLeaf(otherlv_1);
		}
		{
			markLeaf(elementTypeProvider.getChild_LeftParenthesisKeyword_2ElementType());
		}
		otherlv_2='('
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getChild_ValueNamedParserRuleCall_3_0ElementType());
				}
				lv_value_3_0=ruleNamed
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getChild_RightParenthesisKeyword_4ElementType());
		}
		otherlv_4=')'
		{
			doneLeaf(otherlv_4);
		}
	)
;

//Entry rule entryRuleAbstractChildren
entryRuleAbstractChildren returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAbstractChildrenElementType()); }
	iv_ruleAbstractChildren=ruleAbstractChildren
	{ $current=$iv_ruleAbstractChildren.current; }
	EOF;

// Rule AbstractChildren
ruleAbstractChildren returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getAbstractChildren_AbstractChildrenKeyword_0ElementType());
		}
		otherlv_0='abstract children'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getAbstractChildren_LeftCurlyBracketKeyword_1ElementType());
		}
		otherlv_1='{'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getAbstractChildren_AbstractChildrenAbstractChildParserRuleCall_2_0ElementType());
				}
				lv_abstractChildren_2_0=ruleAbstractChild
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		{
			markLeaf(elementTypeProvider.getAbstractChildren_RightCurlyBracketKeyword_3ElementType());
		}
		otherlv_3='}'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleAbstractChild
entryRuleAbstractChild returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAbstractChildElementType()); }
	iv_ruleAbstractChild=ruleAbstractChild
	{ $current=$iv_ruleAbstractChild.current; }
	EOF;

// Rule AbstractChild
ruleAbstractChild returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getAbstractChild_FirstConcreteParserRuleCall_0ElementType());
		}
		this_FirstConcrete_0=ruleFirstConcrete
		{
			$current = $this_FirstConcrete_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractChild_SecondConcreteParserRuleCall_1ElementType());
		}
		this_SecondConcrete_1=ruleSecondConcrete
		{
			$current = $this_SecondConcrete_1.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleFirstConcrete
entryRuleFirstConcrete returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getFirstConcreteElementType()); }
	iv_ruleFirstConcrete=ruleFirstConcrete
	{ $current=$iv_ruleFirstConcrete.current; }
	EOF;

// Rule FirstConcrete
ruleFirstConcrete returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getFirstConcrete_HyphenMinusGreaterThanSignKeyword_0ElementType());
		}
		otherlv_0='->'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getFirstConcrete_FKeyword_1ElementType());
		}
		otherlv_1='F'
		{
			doneLeaf(otherlv_1);
		}
		{
			markLeaf(elementTypeProvider.getFirstConcrete_LeftParenthesisKeyword_2ElementType());
		}
		otherlv_2='('
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getFirstConcrete_ValueNamedParserRuleCall_3_0ElementType());
				}
				lv_value_3_0=ruleNamed
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markLeaf(elementTypeProvider.getFirstConcrete_ReferencedContainerSomeContainerCrossReference_4_0ElementType());
				}
				otherlv_4=RULE_ID
				{
					doneLeaf(otherlv_4);
				}
			)
		)?
		{
			markLeaf(elementTypeProvider.getFirstConcrete_RightParenthesisKeyword_5ElementType());
		}
		otherlv_5=')'
		{
			doneLeaf(otherlv_5);
		}
	)
;

//Entry rule entryRuleSecondConcrete
entryRuleSecondConcrete returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSecondConcreteElementType()); }
	iv_ruleSecondConcrete=ruleSecondConcrete
	{ $current=$iv_ruleSecondConcrete.current; }
	EOF;

// Rule SecondConcrete
ruleSecondConcrete returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getSecondConcrete_HyphenMinusGreaterThanSignKeyword_0ElementType());
		}
		otherlv_0='->'
		{
			doneLeaf(otherlv_0);
		}
		{
			markLeaf(elementTypeProvider.getSecondConcrete_FKeyword_1ElementType());
		}
		otherlv_1='F'
		{
			doneLeaf(otherlv_1);
		}
		{
			markLeaf(elementTypeProvider.getSecondConcrete_SKeyword_2ElementType());
		}
		otherlv_2='S'
		{
			doneLeaf(otherlv_2);
		}
		{
			markLeaf(elementTypeProvider.getSecondConcrete_LeftParenthesisKeyword_3ElementType());
		}
		otherlv_3='('
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getSecondConcrete_ValueNamedParserRuleCall_4_0ElementType());
				}
				lv_value_4_0=ruleNamed
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markLeaf(elementTypeProvider.getSecondConcrete_ReferencedChildrenChildCrossReference_5_0ElementType());
				}
				otherlv_5=RULE_ID
				{
					doneLeaf(otherlv_5);
				}
			)
		)?
		{
			markLeaf(elementTypeProvider.getSecondConcrete_RightParenthesisKeyword_6ElementType());
		}
		otherlv_6=')'
		{
			doneLeaf(otherlv_6);
		}
	)
;

//Entry rule entryRuleNamed
entryRuleNamed returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getNamedElementType()); }
	iv_ruleNamed=ruleNamed
	{ $current=$iv_ruleNamed.current; }
	EOF;

// Rule Named
ruleNamed returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getNamed_NameIDTerminalRuleCall_0ElementType());
			}
			lv_name_0_0=RULE_ID
			{
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
			{
				doneLeaf(lv_name_0_0);
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
