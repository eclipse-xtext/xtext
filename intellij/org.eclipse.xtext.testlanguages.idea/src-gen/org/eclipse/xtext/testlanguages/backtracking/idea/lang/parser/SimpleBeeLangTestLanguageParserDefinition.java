/*
 * generated by Xtext
 */
package org.eclipse.xtext.testlanguages.backtracking.idea.lang.parser;

import com.google.inject.Inject;
import com.intellij.lang.ASTNode;
import com.intellij.psi.FileViewProvider;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiFile;
import com.intellij.psi.tree.IElementType;
import org.eclipse.xtext.idea.nodemodel.IASTNodeAwareNodeModelBuilder;
import org.eclipse.xtext.idea.parser.AbstractXtextParserDefinition;
import org.eclipse.xtext.psi.impl.PsiNamedEObjectImpl;
import org.eclipse.xtext.testlanguages.backtracking.idea.lang.SimpleBeeLangTestLanguageElementTypeProvider;
import org.eclipse.xtext.testlanguages.backtracking.idea.lang.psi.impl.SimpleBeeLangTestLanguageFileImpl;

public class SimpleBeeLangTestLanguageParserDefinition extends AbstractXtextParserDefinition {

	@Inject 
	private SimpleBeeLangTestLanguageElementTypeProvider elementTypeProvider;

	@Override
	public PsiFile createFile(FileViewProvider viewProvider) {
		return new SimpleBeeLangTestLanguageFileImpl(viewProvider);
	}
	
	@Override
	@SuppressWarnings("rawtypes")
	public PsiElement createElement(ASTNode node) {
		Boolean hasSemanticElement = node.getUserData(IASTNodeAwareNodeModelBuilder.HAS_SEMANTIC_ELEMENT_KEY);
		if (hasSemanticElement != null && hasSemanticElement) {
			IElementType elementType = node.getElementType();
			if (elementType == elementTypeProvider.getDelegateModelElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getDelegateModel_ModelParserRuleCallElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getModelElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getModel_UnitsUnitParserRuleCall_0_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getModel_FunctionsFunctionParserRuleCall_1_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnitElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnit_UnitAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnit_ImplementsSimpleTypeRefParserRuleCall_5_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnit_ImplementsSimpleTypeRefParserRuleCall_5_2_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnit_ProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnit_RequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnit_MetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnit_FunctionsFunctionParserRuleCall_7_5_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getProvidedCapabilityElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getProvidedCapability_ProvidedCapabilityAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getProvidedCapability_CondExprExpressionParserRuleCall_2_1_0_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAliasedRequiredCapabilityElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAliasedRequiredCapability_CondExprExpressionParserRuleCall_3_1_0_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getRequiredCapabilityElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getRequiredCapability_RequiredCapabilityAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getRequiredCapability_CondExprExpressionParserRuleCall_3_1_0_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParameterListElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParameterList_ParametersFirstParameterParserRuleCall_0_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParameterList_ParametersFirstParameterParserRuleCall_1_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFirstParameterElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFirstParameter_ClosureParameterParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFirstParameter_ParameterParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParameterElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParameter_ExprExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureParameterElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureParameter_ExprClosureExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParameterDeclarationElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParameterDeclaration_TypeTypeRefParserRuleCall_0_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunctionElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunction_ReturnTypeTypeRefParserRuleCall_4_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunction_ParametersParameterDeclarationParserRuleCall_6_1_0_0_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunction_ParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunction_ParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunction_ParametersParameterDeclarationParserRuleCall_6_1_1_1_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunction_GuardGuardExpressionParserRuleCall_7_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunction_FuncExprExpressionParserRuleCall_8_0_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFunction_FuncExprBlockExpressionParserRuleCall_8_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getGuardExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getGuardExpression_GuardExprExpressionParserRuleCall_0_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getGuardExpression_GuardExprBlockExpressionParserRuleCall_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getTopLevelExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getTopLevelExpression_VarDeclarationParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getTopLevelExpression_ValDeclarationParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getTopLevelExpression_AssignmentExpressionParserRuleCall_2ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getExpression_AssignmentExpressionParserRuleCallElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAssignmentExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAssignmentExpression_CachedExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAssignmentExpression_AssignmentExpressionLeftExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAssignmentExpression_RightExprAssignmentExpressionParserRuleCall_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getVarDeclarationElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getVarDeclaration_DefValueAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getVarDeclaration_TypeTypeRefParserRuleCall_2_0_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getVarDeclaration_ValueExprExpressionParserRuleCall_3_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getValDeclarationElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getValDeclaration_DefValueAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getValDeclaration_TypeTypeRefParserRuleCall_3_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getValDeclaration_ValueExprExpressionParserRuleCall_6_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getTypeRefElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getTypeRef_ClosureTypeRefParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getTypeRef_SimpleTypeRefParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getSimpleTypeRefElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureTypeRefElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getCachedExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getCachedExpression_CachedExpressionAction_0_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getCachedExpression_ExprOrExpressionParserRuleCall_0_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getCachedExpression_OrExpressionParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOrExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOrExpression_AndExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOrExpression_OrExpressionLeftExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOrExpression_RightExprAndExpressionParserRuleCall_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAndExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAndExpression_RelationalExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAndExpression_AndExpressionLeftExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAndExpression_RightExprRelationalExpressionParserRuleCall_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getRelationalExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getRelationalExpression_AdditiveExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getRelationalExpression_BinaryOpExpressionLeftExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getRelationalExpression_RightExprAdditiveExpressionParserRuleCall_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAdditiveExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAdditiveExpression_MultiplicativeExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAdditiveExpression_BinaryOpExpressionLeftExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getAdditiveExpression_RightExprMultiplicativeExpressionParserRuleCall_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getMultiplicativeExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getMultiplicativeExpression_SetExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getMultiplicativeExpression_BinaryOpExpressionLeftExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getMultiplicativeExpression_RightExprSetExpressionParserRuleCall_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getSetExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getSetExpression_UnaryOrInfixExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getSetExpression_BinaryOpExpressionLeftExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getSetExpression_RightExprUnaryOrInfixExpressionParserRuleCall_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnaryOrInfixExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnaryOrInfixExpression_PostopExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnaryOrInfixExpression_UnaryExpressionParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnaryOrInfixExpression_PreopExpressionParserRuleCall_2ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnaryExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnaryExpression_UnaryOpExpressionAction_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getUnaryExpression_ExprInfixExpressionParserRuleCall_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPreopExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPreopExpression_UnaryPreOpExpressionAction_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPreopExpression_ExprInfixExpressionParserRuleCall_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPostopExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPostopExpression_InfixExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPostopExpression_UnaryPostOpExpressionExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInfixExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInfixExpression_CallExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInfixExpression_CallFeatureFuncExprAction_1_0_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInfixExpression_ParameterListParameterListParserRuleCall_1_0_4_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInfixExpression_AtExpressionObjExprAction_1_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInfixExpression_IndexExprExpressionParserRuleCall_1_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInfixExpression_FeatureExpressionObjExprAction_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getCallExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getCallExpression_PrimaryExpressionParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getCallExpression_CallFunctionFuncExprAction_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getCallExpression_ParameterListParameterListParserRuleCall_1_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_FeatureCallParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_ConstructorCallExpressionParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_ValueParserRuleCall_2ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_LiteralParserRuleCall_3ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_KeywordVariablesParserRuleCall_4ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_ParanthesizedExpressionParserRuleCall_5ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_BlockExpressionParserRuleCall_6ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_WithExpressionParserRuleCall_7ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getPrimaryExpression_WithContextExpressionParserRuleCall_8ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getWithExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getWithExpression_FuncExprExpressionParserRuleCall_2_0_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getWithExpression_FuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getWithContextExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getWithContextExpression_ExprExpressionParserRuleCall_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getWithContextExpression_ContextBlockBlockExpressionParserRuleCall_4_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getBlockExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getBlockExpression_ChainedExpressionAction_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getBlockExpression_ExpressionsTopLevelExpressionParserRuleCall_2_0_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getValueElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getValue_VariableExpressionAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getKeywordVariablesElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getKeywordVariables_VariableExpressionAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFeatureCallElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFeatureCall_OperationCallParserRuleCallElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOperationCallElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOperationCall_CallNamedFunctionAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOperationCall_ParameterListParameterListParserRuleCall_3_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getConstructorCallExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getConstructorCallExpression_CreateExpressionAction_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getConstructorCallExpression_ParameterListParameterListParserRuleCall_3_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getConstructorCallExpression_ContextBlockInitializationBlockExpressionParserRuleCall_5_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInitializationBlockExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInitializationBlockExpression_ChainedExpressionAction_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInitializationBlockExpression_ExpressionsInitializationExpressionParserRuleCall_2_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInitializationExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInitializationExpression_AssignmentExpressionAction_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInitializationExpression_LeftExprFeatureOfThisParserRuleCall_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getInitializationExpression_RightExprExpressionParserRuleCall_3_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFeatureOfThisElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getFeatureOfThis_FeatureExpressionAction_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getLiteralElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getLiteral_ValueLiteralParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getLiteral_LiteralFunctionParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getLiteralFunctionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getLiteralFunction_ClosureExpressionParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureExpression_FunctionAction_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureExpression_ReturnTypeTypeRefParserRuleCall_1_1_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureExpression_ParametersParameterDeclarationParserRuleCall_2_0_1_0_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureExpression_ParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureExpression_ParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureExpression_ParametersParameterDeclarationParserRuleCall_2_1_1_0ElementType()) {
				return new PsiNamedEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getClosureExpression_FuncExprOneOrManyExpressionsParserRuleCall_4_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOneOrManyExpressionsElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOneOrManyExpressions_BlockExpressionWithoutBracketsParserRuleCall_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getOneOrManyExpressions_ExpressionParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getBlockExpressionWithoutBracketsElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getBlockExpressionWithoutBrackets_ChainedExpressionAction_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getBlockExpressionWithoutBrackets_ExpressionsTopLevelExpressionParserRuleCall_1_0_0ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getValueLiteralElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParanthesizedExpressionElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			if (elementType == elementTypeProvider.getParanthesizedExpression_ExpressionParserRuleCall_1ElementType()) {
				return new org.eclipse.xtext.psi.impl.PsiEObjectImpl(node) {};
			}
			throw new IllegalStateException("Unexpected element type: " + elementType);
		}
		return super.createElement(node);
	}

}
