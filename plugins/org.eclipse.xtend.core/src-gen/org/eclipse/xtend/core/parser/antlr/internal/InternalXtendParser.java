package org.eclipse.xtend.core.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtend.core.services.XtendGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2010-2015 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
@SuppressWarnings("all")
public class InternalXtendParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KW_Package", "KW_Semicolon", "KW_Class", "KW_LessThanSign", "KW_Comma", "KW_GreaterThanSign", "KW_Extends", "KW_Implements", "KW_LeftCurlyBracket", "KW_RightCurlyBracket", "KW_Interface", "KW_Enum", "KW_Annotation", "KW_LeftParenthesis", "KW_RightParenthesis", "KW_EqualsSignGreaterThanSign", "KW_EqualsSign", "KW_Extension", "KW_Throws", "KW_New", "KW_FullStop", "KW_Public", "KW_Private", "KW_Protected", "KW_Abstract", "KW_Static", "KW_Dispatch", "KW_Final", "KW_Strictfp", "KW_Native", "KW_Volatile", "KW_Synchronized", "KW_Transient", "KW_Val", "KW_Var", "KW_Def", "KW_Override", "KW_Create", "KW_Colon", "KW_AFTER", "KW_BEFORE", "KW_SEPARATOR", "KW_Import", "KW_FullStopFullStopFullStop", "KW_Switch", "KW_Default", "KW_FOR", "KW_ENDFOR", "KW_IF", "KW_ELSE", "KW_ENDIF", "KW_ELSEIF", "KW_CommercialAt", "KW_NumberSign", "KW_LeftSquareBracket", "KW_RightSquareBracket", "KW_PlusSignEqualsSign", "KW_HyphenMinusEqualsSign", "KW_AsteriskEqualsSign", "KW_SolidusEqualsSign", "KW_PercentSignEqualsSign", "KW_GreaterThanSignEqualsSign", "KW_VerticalLineVerticalLine", "KW_AmpersandAmpersand", "KW_EqualsSignEqualsSign", "KW_ExclamationMarkEqualsSign", "KW_EqualsSignEqualsSignEqualsSign", "KW_ExclamationMarkEqualsSignEqualsSign", "KW_Instanceof", "KW_HyphenMinusGreaterThanSign", "KW_FullStopFullStopLessThanSign", "KW_FullStopFullStop", "KW_LessThanSignGreaterThanSign", "KW_QuestionMarkColon", "KW_PlusSign", "KW_HyphenMinus", "KW_Asterisk", "KW_AsteriskAsterisk", "KW_Solidus", "KW_PercentSign", "KW_ExclamationMark", "KW_As", "KW_PlusSignPlusSign", "KW_HyphenMinusHyphenMinus", "KW_ColonColon", "KW_QuestionMarkFullStop", "KW_VerticalLine", "KW_If", "KW_Else", "KW_Case", "KW_For", "KW_While", "KW_Do", "KW_Super", "KW_False", "KW_True", "KW_Null", "KW_Typeof", "KW_Throw", "KW_Return", "KW_Try", "KW_Finally", "KW_Catch", "KW_QuestionMark", "KW_Ampersand", "RULE_ID", "RULE_STRING", "RULE_RICH_TEXT", "RULE_RICH_TEXT_START", "RULE_RICH_TEXT_INBETWEEN", "RULE_COMMENT_RICH_TEXT_INBETWEEN", "RULE_RICH_TEXT_END", "RULE_COMMENT_RICH_TEXT_END", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_IDENTIFIER_START", "RULE_UNICODE_ESCAPE", "RULE_IDENTIFIER_PART", "RULE_HEX_DIGIT", "RULE_IN_RICH_STRING", "RULE_IDENTIFIER_PART_IMPL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int RULE_COMMENT_RICH_TEXT_INBETWEEN=114;
    public static final int RULE_ID=109;
    public static final int KW_Synchronized=35;
    public static final int KW_Enum=15;
    public static final int KW_SolidusEqualsSign=63;
    public static final int KW_True=99;
    public static final int KW_PlusSignPlusSign=86;
    public static final int RULE_ANY_OTHER=129;
    public static final int KW_LeftParenthesis=17;
    public static final int RULE_IDENTIFIER_PART_IMPL=125;
    public static final int RULE_COMMENT_RICH_TEXT_END=116;
    public static final int KW_Abstract=28;
    public static final int KW_CommercialAt=56;
    public static final int EOF=-1;
    public static final int KW_Extends=10;
    public static final int KW_Strictfp=32;
    public static final int RULE_IDENTIFIER_START=120;
    public static final int KW_Finally=105;
    public static final int KW_Native=33;
    public static final int KW_LessThanSignGreaterThanSign=76;
    public static final int RULE_HEX=117;
    public static final int KW_Import=46;
    public static final int KW_VerticalLineVerticalLine=66;
    public static final int KW_HyphenMinusEqualsSign=61;
    public static final int RULE_RICH_TEXT_END=115;
    public static final int KW_Static=29;
    public static final int RULE_DECIMAL=119;
    public static final int KW_Class=6;
    public static final int KW_HyphenMinusHyphenMinus=87;
    public static final int KW_Typeof=101;
    public static final int KW_Do=96;
    public static final int KW_FullStop=24;
    public static final int KW_Annotation=16;
    public static final int KW_LessThanSign=7;
    public static final int KW_EqualsSignEqualsSignEqualsSign=70;
    public static final int KW_PlusSignEqualsSign=60;
    public static final int KW_Solidus=82;
    public static final int KW_HyphenMinus=79;
    public static final int KW_VerticalLine=90;
    public static final int RULE_HEX_DIGIT=123;
    public static final int KW_ExclamationMarkEqualsSign=69;
    public static final int KW_ExclamationMarkEqualsSignEqualsSign=71;
    public static final int RULE_IN_RICH_STRING=124;
    public static final int KW_Semicolon=5;
    public static final int RULE_ML_COMMENT=126;
    public static final int KW_PercentSignEqualsSign=64;
    public static final int KW_Ampersand=108;
    public static final int KW_Final=31;
    public static final int KW_Comma=8;
    public static final int KW_As=85;
    public static final int KW_PlusSign=78;
    public static final int RULE_STRING=110;
    public static final int KW_Default=49;
    public static final int KW_ColonColon=88;
    public static final int KW_RightCurlyBracket=13;
    public static final int KW_LeftSquareBracket=58;
    public static final int KW_New=23;
    public static final int KW_FullStopFullStopFullStop=47;
    public static final int KW_Create=41;
    public static final int KW_False=98;
    public static final int KW_PercentSign=83;
    public static final int KW_Asterisk=80;
    public static final int RULE_RICH_TEXT_START=112;
    public static final int KW_ELSE=53;
    public static final int RULE_RICH_TEXT=111;
    public static final int KW_Super=97;
    public static final int KW_Def=39;
    public static final int KW_EqualsSignGreaterThanSign=19;
    public static final int KW_QuestionMarkColon=77;
    public static final int KW_Colon=42;
    public static final int KW_FullStopFullStop=75;
    public static final int KW_Implements=11;
    public static final int KW_If=91;
    public static final int KW_Protected=27;
    public static final int KW_Transient=36;
    public static final int KW_EqualsSignEqualsSign=68;
    public static final int KW_While=95;
    public static final int KW_HyphenMinusGreaterThanSign=73;
    public static final int KW_FOR=50;
    public static final int KW_AFTER=43;
    public static final int KW_AsteriskEqualsSign=62;
    public static final int RULE_UNICODE_ESCAPE=121;
    public static final int RULE_INT=118;
    public static final int KW_Dispatch=30;
    public static final int KW_IF=52;
    public static final int KW_EqualsSign=20;
    public static final int KW_FullStopFullStopLessThanSign=74;
    public static final int KW_NumberSign=57;
    public static final int KW_Throws=22;
    public static final int RULE_IDENTIFIER_PART=122;
    public static final int KW_ENDFOR=51;
    public static final int KW_Else=92;
    public static final int KW_Override=40;
    public static final int KW_Public=25;
    public static final int KW_AsteriskAsterisk=81;
    public static final int KW_Throw=102;
    public static final int KW_Volatile=34;
    public static final int RULE_SL_COMMENT=127;
    public static final int KW_GreaterThanSign=9;
    public static final int KW_Package=4;
    public static final int KW_Catch=106;
    public static final int KW_Private=26;
    public static final int KW_ExclamationMark=84;
    public static final int KW_For=94;
    public static final int KW_Extension=21;
    public static final int KW_RightSquareBracket=59;
    public static final int KW_Var=38;
    public static final int KW_LeftCurlyBracket=12;
    public static final int KW_ELSEIF=55;
    public static final int KW_GreaterThanSignEqualsSign=65;
    public static final int KW_Null=100;
    public static final int KW_QuestionMark=107;
    public static final int KW_RightParenthesis=18;
    public static final int KW_QuestionMarkFullStop=89;
    public static final int RULE_RICH_TEXT_INBETWEEN=113;
    public static final int KW_BEFORE=44;
    public static final int KW_Return=103;
    public static final int KW_SEPARATOR=45;
    public static final int KW_Switch=48;
    public static final int KW_ENDIF=54;
    public static final int KW_AmpersandAmpersand=67;
    public static final int RULE_WS=128;
    public static final int KW_Interface=14;
    public static final int KW_Case=93;
    public static final int KW_Val=37;
    public static final int KW_Try=104;
    public static final int KW_Instanceof=72;

    // delegates
    // delegators


        public InternalXtendParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalXtendParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalXtendParser.tokenNames; }
    public String getGrammarFileName() { return "InternalXtend.g"; }



     	private XtendGrammarAccess grammarAccess;
     	
        public InternalXtendParser(TokenStream input, XtendGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "ruleFile";	
       	}
       	
       	@Override
       	protected XtendGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleFile"
    // InternalXtend.g:178:1: entryRuleFile returns [EObject current=null] : iv_ruleFile= ruleFile EOF ;
    public final EObject entryRuleFile() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFile = null;


        try {
            // InternalXtend.g:179:2: (iv_ruleFile= ruleFile EOF )
            // InternalXtend.g:180:2: iv_ruleFile= ruleFile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFile=ruleFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFile"


    // $ANTLR start "ruleFile"
    // InternalXtend.g:187:1: ruleFile returns [EObject current=null] : ( (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* ) ;
    public final EObject ruleFile() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_package_1_0 = null;

        EObject lv_importSection_3_0 = null;

        EObject lv_xtendTypes_4_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:190:28: ( ( (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* ) )
            // InternalXtend.g:191:1: ( (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* )
            {
            // InternalXtend.g:191:1: ( (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )* )
            // InternalXtend.g:191:2: (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_xtendTypes_4_0= ruleType ) )*
            {
            // InternalXtend.g:191:2: (otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )? )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==KW_Package) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==KW_Annotation) ) {
                    int LA2_3 = input.LA(3);

                    if ( (LA2_3==KW_Annotation) ) {
                        int LA2_5 = input.LA(4);

                        if ( (LA2_5==KW_Annotation||LA2_5==KW_Create||(LA2_5>=KW_AFTER && LA2_5<=KW_SEPARATOR)||LA2_5==RULE_ID) ) {
                            alt2=1;
                        }
                    }
                    else if ( (LA2_3==EOF||(LA2_3>=KW_Package && LA2_3<=KW_Class)||(LA2_3>=KW_Interface && LA2_3<=KW_Enum)||(LA2_3>=KW_FullStop && LA2_3<=KW_Transient)||LA2_3==KW_Import||LA2_3==KW_CommercialAt) ) {
                        alt2=1;
                    }
                }
                else if ( (LA2_1==KW_Create||(LA2_1>=KW_AFTER && LA2_1<=KW_SEPARATOR)||LA2_1==RULE_ID) ) {
                    alt2=1;
                }
            }
            switch (alt2) {
                case 1 :
                    // InternalXtend.g:191:4: otherlv_0= 'package' ( (lv_package_1_0= ruleQualifiedName ) ) (otherlv_2= ';' )?
                    {
                    otherlv_0=(Token)match(input,KW_Package,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getFileAccess().getPackageKeyword_0_0());
                          
                    }
                    // InternalXtend.g:195:1: ( (lv_package_1_0= ruleQualifiedName ) )
                    // InternalXtend.g:196:1: (lv_package_1_0= ruleQualifiedName )
                    {
                    // InternalXtend.g:196:1: (lv_package_1_0= ruleQualifiedName )
                    // InternalXtend.g:197:3: lv_package_1_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFileAccess().getPackageQualifiedNameParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_4);
                    lv_package_1_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFileRule());
                      	        }
                             		set(
                             			current, 
                             			"package",
                              		lv_package_1_0, 
                              		"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:213:2: (otherlv_2= ';' )?
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==KW_Semicolon) ) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            // InternalXtend.g:213:4: otherlv_2= ';'
                            {
                            otherlv_2=(Token)match(input,KW_Semicolon,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getFileAccess().getSemicolonKeyword_0_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalXtend.g:217:5: ( (lv_importSection_3_0= ruleXImportSection ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==KW_Import) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalXtend.g:218:1: (lv_importSection_3_0= ruleXImportSection )
                    {
                    // InternalXtend.g:218:1: (lv_importSection_3_0= ruleXImportSection )
                    // InternalXtend.g:219:3: lv_importSection_3_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFileAccess().getImportSectionXImportSectionParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_6);
                    lv_importSection_3_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFileRule());
                      	        }
                             		set(
                             			current, 
                             			"importSection",
                              		lv_importSection_3_0, 
                              		"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalXtend.g:235:3: ( (lv_xtendTypes_4_0= ruleType ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==KW_Package||LA4_0==KW_Class||(LA4_0>=KW_Interface && LA4_0<=KW_Annotation)||(LA4_0>=KW_Public && LA4_0<=KW_Transient)||LA4_0==KW_CommercialAt) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalXtend.g:236:1: (lv_xtendTypes_4_0= ruleType )
            	    {
            	    // InternalXtend.g:236:1: (lv_xtendTypes_4_0= ruleType )
            	    // InternalXtend.g:237:3: lv_xtendTypes_4_0= ruleType
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFileAccess().getXtendTypesTypeParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_xtendTypes_4_0=ruleType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFileRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"xtendTypes",
            	              		lv_xtendTypes_4_0, 
            	              		"org.eclipse.xtend.core.Xtend.Type");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFile"


    // $ANTLR start "entryRuleType"
    // InternalXtend.g:261:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalXtend.g:262:2: (iv_ruleType= ruleType EOF )
            // InternalXtend.g:263:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalXtend.g:270:1: ruleType returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_typeParameters_7_0 = null;

        EObject lv_typeParameters_9_0 = null;

        EObject lv_extends_12_0 = null;

        EObject lv_implements_14_0 = null;

        EObject lv_implements_16_0 = null;

        EObject lv_members_18_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_21_0 = null;

        AntlrDatatypeRuleToken lv_name_23_0 = null;

        EObject lv_typeParameters_25_0 = null;

        EObject lv_typeParameters_27_0 = null;

        EObject lv_extends_30_0 = null;

        EObject lv_extends_32_0 = null;

        EObject lv_members_34_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_37_0 = null;

        AntlrDatatypeRuleToken lv_name_39_0 = null;

        EObject lv_members_41_0 = null;

        EObject lv_members_43_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_47_0 = null;

        AntlrDatatypeRuleToken lv_name_49_0 = null;

        EObject lv_members_51_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:273:28: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) ) ) )
            // InternalXtend.g:274:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) ) )
            {
            // InternalXtend.g:274:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) ) )
            // InternalXtend.g:274:2: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) )
            {
            // InternalXtend.g:274:2: ()
            // InternalXtend.g:275:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTypeAccess().getXtendTypeDeclarationAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:280:2: ( (lv_annotations_1_0= ruleXAnnotation ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==KW_CommercialAt) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalXtend.g:281:1: (lv_annotations_1_0= ruleXAnnotation )
            	    {
            	    // InternalXtend.g:281:1: (lv_annotations_1_0= ruleXAnnotation )
            	    // InternalXtend.g:282:3: lv_annotations_1_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeAccess().getAnnotationsXAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_annotations_1_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalXtend.g:298:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) )
            int alt25=4;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalXtend.g:298:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' )
                    {
                    // InternalXtend.g:298:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' )
                    // InternalXtend.g:298:5: () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}'
                    {
                    // InternalXtend.g:298:5: ()
                    // InternalXtend.g:299:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getTypeAccess().getXtendClassAnnotationInfoAction_2_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:304:2: ( (lv_modifiers_3_0= ruleCommonModifier ) )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==KW_Package||(LA6_0>=KW_Public && LA6_0<=KW_Transient)) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // InternalXtend.g:305:1: (lv_modifiers_3_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:305:1: (lv_modifiers_3_0= ruleCommonModifier )
                    	    // InternalXtend.g:306:3: lv_modifiers_3_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTypeAccess().getModifiersCommonModifierParserRuleCall_2_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_modifiers_3_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_3_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getClassKeyword_2_0_2());
                          
                    }
                    // InternalXtend.g:326:1: ( (lv_name_5_0= ruleValidID ) )
                    // InternalXtend.g:327:1: (lv_name_5_0= ruleValidID )
                    {
                    // InternalXtend.g:327:1: (lv_name_5_0= ruleValidID )
                    // InternalXtend.g:328:3: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeAccess().getNameValidIDParserRuleCall_2_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_5_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:344:2: (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==KW_LessThanSign) ) {
                        alt8=1;
                    }
                    switch (alt8) {
                        case 1 :
                            // InternalXtend.g:344:4: otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>'
                            {
                            otherlv_6=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_0_4_0());
                                  
                            }
                            // InternalXtend.g:348:1: ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) )
                            // InternalXtend.g:349:1: (lv_typeParameters_7_0= ruleJvmTypeParameter )
                            {
                            // InternalXtend.g:349:1: (lv_typeParameters_7_0= ruleJvmTypeParameter )
                            // InternalXtend.g:350:3: lv_typeParameters_7_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_0_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_7_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_7_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:366:2: (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )*
                            loop7:
                            do {
                                int alt7=2;
                                int LA7_0 = input.LA(1);

                                if ( (LA7_0==KW_Comma) ) {
                                    alt7=1;
                                }


                                switch (alt7) {
                            	case 1 :
                            	    // InternalXtend.g:366:4: otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_8=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_8, grammarAccess.getTypeAccess().getCommaKeyword_2_0_4_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:370:1: ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) )
                            	    // InternalXtend.g:371:1: (lv_typeParameters_9_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalXtend.g:371:1: (lv_typeParameters_9_0= ruleJvmTypeParameter )
                            	    // InternalXtend.g:372:3: lv_typeParameters_9_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_0_4_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_9_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_9_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop7;
                                }
                            } while (true);

                            otherlv_10=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_0_4_3());
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:392:3: (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==KW_Extends) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // InternalXtend.g:392:5: otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) )
                            {
                            otherlv_11=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getTypeAccess().getExtendsKeyword_2_0_5_0());
                                  
                            }
                            // InternalXtend.g:396:1: ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) )
                            // InternalXtend.g:397:1: (lv_extends_12_0= ruleJvmParameterizedTypeReference )
                            {
                            // InternalXtend.g:397:1: (lv_extends_12_0= ruleJvmParameterizedTypeReference )
                            // InternalXtend.g:398:3: lv_extends_12_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_5_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_12);
                            lv_extends_12_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"extends",
                                      		lv_extends_12_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalXtend.g:414:4: (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )?
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==KW_Implements) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            // InternalXtend.g:414:6: otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )*
                            {
                            otherlv_13=(Token)match(input,KW_Implements,FOLLOW_13); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_13, grammarAccess.getTypeAccess().getImplementsKeyword_2_0_6_0());
                                  
                            }
                            // InternalXtend.g:418:1: ( (lv_implements_14_0= ruleJvmSuperTypeReference ) )
                            // InternalXtend.g:419:1: (lv_implements_14_0= ruleJvmSuperTypeReference )
                            {
                            // InternalXtend.g:419:1: (lv_implements_14_0= ruleJvmSuperTypeReference )
                            // InternalXtend.g:420:3: lv_implements_14_0= ruleJvmSuperTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmSuperTypeReferenceParserRuleCall_2_0_6_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_implements_14_0=ruleJvmSuperTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"implements",
                                      		lv_implements_14_0, 
                                      		"org.eclipse.xtend.core.Xtend.JvmSuperTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:436:2: (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )*
                            loop10:
                            do {
                                int alt10=2;
                                int LA10_0 = input.LA(1);

                                if ( (LA10_0==KW_Comma) ) {
                                    alt10=1;
                                }


                                switch (alt10) {
                            	case 1 :
                            	    // InternalXtend.g:436:4: otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) )
                            	    {
                            	    otherlv_15=(Token)match(input,KW_Comma,FOLLOW_13); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_15, grammarAccess.getTypeAccess().getCommaKeyword_2_0_6_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:440:1: ( (lv_implements_16_0= ruleJvmSuperTypeReference ) )
                            	    // InternalXtend.g:441:1: (lv_implements_16_0= ruleJvmSuperTypeReference )
                            	    {
                            	    // InternalXtend.g:441:1: (lv_implements_16_0= ruleJvmSuperTypeReference )
                            	    // InternalXtend.g:442:3: lv_implements_16_0= ruleJvmSuperTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getTypeAccess().getImplementsJvmSuperTypeReferenceParserRuleCall_2_0_6_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_implements_16_0=ruleJvmSuperTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"implements",
                            	              		lv_implements_16_0, 
                            	              		"org.eclipse.xtend.core.Xtend.JvmSuperTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop10;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_0_7());
                          
                    }
                    // InternalXtend.g:462:1: ( (lv_members_18_0= ruleMember ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==KW_Package||LA12_0==KW_Class||(LA12_0>=KW_Interface && LA12_0<=KW_LeftParenthesis)||LA12_0==KW_EqualsSignGreaterThanSign||LA12_0==KW_Extension||LA12_0==KW_New||(LA12_0>=KW_Public && LA12_0<=KW_Create)||(LA12_0>=KW_AFTER && LA12_0<=KW_SEPARATOR)||LA12_0==KW_CommercialAt||LA12_0==RULE_ID) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalXtend.g:463:1: (lv_members_18_0= ruleMember )
                    	    {
                    	    // InternalXtend.g:463:1: (lv_members_18_0= ruleMember )
                    	    // InternalXtend.g:464:3: lv_members_18_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_0_8_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_18_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_18_0, 
                    	              		"org.eclipse.xtend.core.Xtend.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    otherlv_19=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_19, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_0_9());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:485:6: ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' )
                    {
                    // InternalXtend.g:485:6: ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' )
                    // InternalXtend.g:485:7: () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}'
                    {
                    // InternalXtend.g:485:7: ()
                    // InternalXtend.g:486:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getTypeAccess().getXtendInterfaceAnnotationInfoAction_2_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:491:2: ( (lv_modifiers_21_0= ruleCommonModifier ) )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==KW_Package||(LA13_0>=KW_Public && LA13_0<=KW_Transient)) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // InternalXtend.g:492:1: (lv_modifiers_21_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:492:1: (lv_modifiers_21_0= ruleCommonModifier )
                    	    // InternalXtend.g:493:3: lv_modifiers_21_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTypeAccess().getModifiersCommonModifierParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_modifiers_21_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_21_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getTypeAccess().getInterfaceKeyword_2_1_2());
                          
                    }
                    // InternalXtend.g:513:1: ( (lv_name_23_0= ruleValidID ) )
                    // InternalXtend.g:514:1: (lv_name_23_0= ruleValidID )
                    {
                    // InternalXtend.g:514:1: (lv_name_23_0= ruleValidID )
                    // InternalXtend.g:515:3: lv_name_23_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeAccess().getNameValidIDParserRuleCall_2_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_name_23_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_23_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:531:2: (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )?
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==KW_LessThanSign) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            // InternalXtend.g:531:4: otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>'
                            {
                            otherlv_24=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getTypeAccess().getLessThanSignKeyword_2_1_4_0());
                                  
                            }
                            // InternalXtend.g:535:1: ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) )
                            // InternalXtend.g:536:1: (lv_typeParameters_25_0= ruleJvmTypeParameter )
                            {
                            // InternalXtend.g:536:1: (lv_typeParameters_25_0= ruleJvmTypeParameter )
                            // InternalXtend.g:537:3: lv_typeParameters_25_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_25_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_25_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:553:2: (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )*
                            loop14:
                            do {
                                int alt14=2;
                                int LA14_0 = input.LA(1);

                                if ( (LA14_0==KW_Comma) ) {
                                    alt14=1;
                                }


                                switch (alt14) {
                            	case 1 :
                            	    // InternalXtend.g:553:4: otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_26=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_26, grammarAccess.getTypeAccess().getCommaKeyword_2_1_4_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:557:1: ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) )
                            	    // InternalXtend.g:558:1: (lv_typeParameters_27_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalXtend.g:558:1: (lv_typeParameters_27_0= ruleJvmTypeParameter )
                            	    // InternalXtend.g:559:3: lv_typeParameters_27_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getTypeAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_27_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_27_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop14;
                                }
                            } while (true);

                            otherlv_28=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_28, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_1_4_3());
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:579:3: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )?
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==KW_Extends) ) {
                        alt17=1;
                    }
                    switch (alt17) {
                        case 1 :
                            // InternalXtend.g:579:5: otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )*
                            {
                            otherlv_29=(Token)match(input,KW_Extends,FOLLOW_13); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_29, grammarAccess.getTypeAccess().getExtendsKeyword_2_1_5_0());
                                  
                            }
                            // InternalXtend.g:583:1: ( (lv_extends_30_0= ruleJvmSuperTypeReference ) )
                            // InternalXtend.g:584:1: (lv_extends_30_0= ruleJvmSuperTypeReference )
                            {
                            // InternalXtend.g:584:1: (lv_extends_30_0= ruleJvmSuperTypeReference )
                            // InternalXtend.g:585:3: lv_extends_30_0= ruleJvmSuperTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeAccess().getExtendsJvmSuperTypeReferenceParserRuleCall_2_1_5_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_extends_30_0=ruleJvmSuperTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"extends",
                                      		lv_extends_30_0, 
                                      		"org.eclipse.xtend.core.Xtend.JvmSuperTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:601:2: (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )*
                            loop16:
                            do {
                                int alt16=2;
                                int LA16_0 = input.LA(1);

                                if ( (LA16_0==KW_Comma) ) {
                                    alt16=1;
                                }


                                switch (alt16) {
                            	case 1 :
                            	    // InternalXtend.g:601:4: otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) )
                            	    {
                            	    otherlv_31=(Token)match(input,KW_Comma,FOLLOW_13); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_31, grammarAccess.getTypeAccess().getCommaKeyword_2_1_5_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:605:1: ( (lv_extends_32_0= ruleJvmSuperTypeReference ) )
                            	    // InternalXtend.g:606:1: (lv_extends_32_0= ruleJvmSuperTypeReference )
                            	    {
                            	    // InternalXtend.g:606:1: (lv_extends_32_0= ruleJvmSuperTypeReference )
                            	    // InternalXtend.g:607:3: lv_extends_32_0= ruleJvmSuperTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getTypeAccess().getExtendsJvmSuperTypeReferenceParserRuleCall_2_1_5_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_extends_32_0=ruleJvmSuperTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"extends",
                            	              		lv_extends_32_0, 
                            	              		"org.eclipse.xtend.core.Xtend.JvmSuperTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop16;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_33=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_33, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_1_6());
                          
                    }
                    // InternalXtend.g:627:1: ( (lv_members_34_0= ruleMember ) )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==KW_Package||LA18_0==KW_Class||(LA18_0>=KW_Interface && LA18_0<=KW_LeftParenthesis)||LA18_0==KW_EqualsSignGreaterThanSign||LA18_0==KW_Extension||LA18_0==KW_New||(LA18_0>=KW_Public && LA18_0<=KW_Create)||(LA18_0>=KW_AFTER && LA18_0<=KW_SEPARATOR)||LA18_0==KW_CommercialAt||LA18_0==RULE_ID) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // InternalXtend.g:628:1: (lv_members_34_0= ruleMember )
                    	    {
                    	    // InternalXtend.g:628:1: (lv_members_34_0= ruleMember )
                    	    // InternalXtend.g:629:3: lv_members_34_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_2_1_7_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_34_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_34_0, 
                    	              		"org.eclipse.xtend.core.Xtend.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);

                    otherlv_35=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_35, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_1_8());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalXtend.g:650:6: ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' )
                    {
                    // InternalXtend.g:650:6: ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' )
                    // InternalXtend.g:650:7: () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}'
                    {
                    // InternalXtend.g:650:7: ()
                    // InternalXtend.g:651:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getTypeAccess().getXtendEnumAnnotationInfoAction_2_2_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:656:2: ( (lv_modifiers_37_0= ruleCommonModifier ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==KW_Package||(LA19_0>=KW_Public && LA19_0<=KW_Transient)) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalXtend.g:657:1: (lv_modifiers_37_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:657:1: (lv_modifiers_37_0= ruleCommonModifier )
                    	    // InternalXtend.g:658:3: lv_modifiers_37_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTypeAccess().getModifiersCommonModifierParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_modifiers_37_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_37_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);

                    otherlv_38=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_38, grammarAccess.getTypeAccess().getEnumKeyword_2_2_2());
                          
                    }
                    // InternalXtend.g:678:1: ( (lv_name_39_0= ruleValidID ) )
                    // InternalXtend.g:679:1: (lv_name_39_0= ruleValidID )
                    {
                    // InternalXtend.g:679:1: (lv_name_39_0= ruleValidID )
                    // InternalXtend.g:680:3: lv_name_39_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeAccess().getNameValidIDParserRuleCall_2_2_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_39_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_39_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_40=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_40, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_2_4());
                          
                    }
                    // InternalXtend.g:700:1: ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==KW_Annotation||LA21_0==KW_Create||(LA21_0>=KW_AFTER && LA21_0<=KW_SEPARATOR)||LA21_0==RULE_ID) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalXtend.g:700:2: ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )*
                            {
                            // InternalXtend.g:700:2: ( (lv_members_41_0= ruleXtendEnumLiteral ) )
                            // InternalXtend.g:701:1: (lv_members_41_0= ruleXtendEnumLiteral )
                            {
                            // InternalXtend.g:701:1: (lv_members_41_0= ruleXtendEnumLiteral )
                            // InternalXtend.g:702:3: lv_members_41_0= ruleXtendEnumLiteral
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeAccess().getMembersXtendEnumLiteralParserRuleCall_2_2_5_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_members_41_0=ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"members",
                                      		lv_members_41_0, 
                                      		"org.eclipse.xtend.core.Xtend.XtendEnumLiteral");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:718:2: (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )*
                            loop20:
                            do {
                                int alt20=2;
                                int LA20_0 = input.LA(1);

                                if ( (LA20_0==KW_Comma) ) {
                                    alt20=1;
                                }


                                switch (alt20) {
                            	case 1 :
                            	    // InternalXtend.g:718:4: otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) )
                            	    {
                            	    otherlv_42=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_42, grammarAccess.getTypeAccess().getCommaKeyword_2_2_5_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:722:1: ( (lv_members_43_0= ruleXtendEnumLiteral ) )
                            	    // InternalXtend.g:723:1: (lv_members_43_0= ruleXtendEnumLiteral )
                            	    {
                            	    // InternalXtend.g:723:1: (lv_members_43_0= ruleXtendEnumLiteral )
                            	    // InternalXtend.g:724:3: lv_members_43_0= ruleXtendEnumLiteral
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getTypeAccess().getMembersXtendEnumLiteralParserRuleCall_2_2_5_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    lv_members_43_0=ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"members",
                            	              		lv_members_43_0, 
                            	              		"org.eclipse.xtend.core.Xtend.XtendEnumLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop20;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalXtend.g:740:6: (otherlv_44= ';' )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==KW_Semicolon) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // InternalXtend.g:740:8: otherlv_44= ';'
                            {
                            otherlv_44=(Token)match(input,KW_Semicolon,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_44, grammarAccess.getTypeAccess().getSemicolonKeyword_2_2_6());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_45=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_45, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_2_7());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalXtend.g:749:6: ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' )
                    {
                    // InternalXtend.g:749:6: ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' )
                    // InternalXtend.g:749:7: () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}'
                    {
                    // InternalXtend.g:749:7: ()
                    // InternalXtend.g:750:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getTypeAccess().getXtendAnnotationTypeAnnotationInfoAction_2_3_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:755:2: ( (lv_modifiers_47_0= ruleCommonModifier ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==KW_Package||(LA23_0>=KW_Public && LA23_0<=KW_Transient)) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalXtend.g:756:1: (lv_modifiers_47_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:756:1: (lv_modifiers_47_0= ruleCommonModifier )
                    	    // InternalXtend.g:757:3: lv_modifiers_47_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTypeAccess().getModifiersCommonModifierParserRuleCall_2_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_modifiers_47_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_47_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    otherlv_48=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_48, grammarAccess.getTypeAccess().getAnnotationKeyword_2_3_2());
                          
                    }
                    // InternalXtend.g:777:1: ( (lv_name_49_0= ruleValidID ) )
                    // InternalXtend.g:778:1: (lv_name_49_0= ruleValidID )
                    {
                    // InternalXtend.g:778:1: (lv_name_49_0= ruleValidID )
                    // InternalXtend.g:779:3: lv_name_49_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeAccess().getNameValidIDParserRuleCall_2_3_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_49_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_49_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_50=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_50, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_2_3_4());
                          
                    }
                    // InternalXtend.g:799:1: ( (lv_members_51_0= ruleAnnotationField ) )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==KW_Package||LA24_0==KW_Class||(LA24_0>=KW_Interface && LA24_0<=KW_LeftParenthesis)||LA24_0==KW_EqualsSignGreaterThanSign||(LA24_0>=KW_Public && LA24_0<=KW_Var)||LA24_0==KW_Create||(LA24_0>=KW_AFTER && LA24_0<=KW_SEPARATOR)||LA24_0==KW_CommercialAt||LA24_0==RULE_ID) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // InternalXtend.g:800:1: (lv_members_51_0= ruleAnnotationField )
                    	    {
                    	    // InternalXtend.g:800:1: (lv_members_51_0= ruleAnnotationField )
                    	    // InternalXtend.g:801:3: lv_members_51_0= ruleAnnotationField
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTypeAccess().getMembersAnnotationFieldParserRuleCall_2_3_5_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_members_51_0=ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_51_0, 
                    	              		"org.eclipse.xtend.core.Xtend.AnnotationField");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    otherlv_52=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_52, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_2_3_6());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleJvmSuperTypeReference"
    // InternalXtend.g:829:1: entryRuleJvmSuperTypeReference returns [EObject current=null] : iv_ruleJvmSuperTypeReference= ruleJvmSuperTypeReference EOF ;
    public final EObject entryRuleJvmSuperTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmSuperTypeReference = null;


        try {
            // InternalXtend.g:830:2: (iv_ruleJvmSuperTypeReference= ruleJvmSuperTypeReference EOF )
            // InternalXtend.g:831:2: iv_ruleJvmSuperTypeReference= ruleJvmSuperTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmSuperTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmSuperTypeReference=ruleJvmSuperTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmSuperTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmSuperTypeReference"


    // $ANTLR start "ruleJvmSuperTypeReference"
    // InternalXtend.g:838:1: ruleJvmSuperTypeReference returns [EObject current=null] : (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference | this_XFunctionSuperTypeRef_1= ruleXFunctionSuperTypeRef ) ;
    public final EObject ruleJvmSuperTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionSuperTypeRef_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:841:28: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference | this_XFunctionSuperTypeRef_1= ruleXFunctionSuperTypeRef ) )
            // InternalXtend.g:842:1: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference | this_XFunctionSuperTypeRef_1= ruleXFunctionSuperTypeRef )
            {
            // InternalXtend.g:842:1: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference | this_XFunctionSuperTypeRef_1= ruleXFunctionSuperTypeRef )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==KW_Annotation||LA26_0==KW_Create||(LA26_0>=KW_AFTER && LA26_0<=KW_SEPARATOR)||LA26_0==RULE_ID) ) {
                alt26=1;
            }
            else if ( (LA26_0==KW_LeftParenthesis||LA26_0==KW_EqualsSignGreaterThanSign) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalXtend.g:843:5: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmSuperTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmParameterizedTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:853:5: this_XFunctionSuperTypeRef_1= ruleXFunctionSuperTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmSuperTypeReferenceAccess().getXFunctionSuperTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionSuperTypeRef_1=ruleXFunctionSuperTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFunctionSuperTypeRef_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmSuperTypeReference"


    // $ANTLR start "entryRuleXFunctionSuperTypeRef"
    // InternalXtend.g:869:1: entryRuleXFunctionSuperTypeRef returns [EObject current=null] : iv_ruleXFunctionSuperTypeRef= ruleXFunctionSuperTypeRef EOF ;
    public final EObject entryRuleXFunctionSuperTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionSuperTypeRef = null;


        try {
            // InternalXtend.g:870:2: (iv_ruleXFunctionSuperTypeRef= ruleXFunctionSuperTypeRef EOF )
            // InternalXtend.g:871:2: iv_ruleXFunctionSuperTypeRef= ruleXFunctionSuperTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionSuperTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionSuperTypeRef=ruleXFunctionSuperTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionSuperTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionSuperTypeRef"


    // $ANTLR start "ruleXFunctionSuperTypeRef"
    // InternalXtend.g:878:1: ruleXFunctionSuperTypeRef returns [EObject current=null] : ( ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionSuperTypeRef() throws RecognitionException {
        EObject current = null;

        Token lv_instanceContext_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:881:28: ( ( ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalXtend.g:882:1: ( ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalXtend.g:882:1: ( ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalXtend.g:882:2: ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalXtend.g:882:2: ( ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==KW_LeftParenthesis) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalXtend.g:882:3: ( (lv_instanceContext_0_0= '(' ) ) ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    // InternalXtend.g:882:3: ( (lv_instanceContext_0_0= '(' ) )
                    // InternalXtend.g:883:1: (lv_instanceContext_0_0= '(' )
                    {
                    // InternalXtend.g:883:1: (lv_instanceContext_0_0= '(' )
                    // InternalXtend.g:884:3: lv_instanceContext_0_0= '('
                    {
                    lv_instanceContext_0_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_instanceContext_0_0, grammarAccess.getXFunctionSuperTypeRefAccess().getInstanceContextLeftParenthesisKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXFunctionSuperTypeRefRule());
                      	        }
                             		setWithLastConsumed(current, "instanceContext", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:897:2: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( ((LA28_0>=KW_Annotation && LA28_0<=KW_LeftParenthesis)||LA28_0==KW_EqualsSignGreaterThanSign||LA28_0==KW_Create||(LA28_0>=KW_AFTER && LA28_0<=KW_SEPARATOR)||LA28_0==RULE_ID) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalXtend.g:897:3: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalXtend.g:897:3: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:898:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:898:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalXtend.g:899:3: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFunctionSuperTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFunctionSuperTypeRefRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"paramTypes",
                                      		lv_paramTypes_1_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:915:2: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop27:
                            do {
                                int alt27=2;
                                int LA27_0 = input.LA(1);

                                if ( (LA27_0==KW_Comma) ) {
                                    alt27=1;
                                }


                                switch (alt27) {
                            	case 1 :
                            	    // InternalXtend.g:915:4: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getXFunctionSuperTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:919:1: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalXtend.g:920:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalXtend.g:920:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalXtend.g:921:3: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFunctionSuperTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFunctionSuperTypeRefRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"paramTypes",
                            	              		lv_paramTypes_3_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop27;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXFunctionSuperTypeRefAccess().getRightParenthesisKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXFunctionSuperTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
                  
            }
            // InternalXtend.g:945:1: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalXtend.g:946:1: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalXtend.g:946:1: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalXtend.g:947:3: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFunctionSuperTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXFunctionSuperTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_6_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionSuperTypeRef"


    // $ANTLR start "entryRuleAnnotationField"
    // InternalXtend.g:971:1: entryRuleAnnotationField returns [EObject current=null] : iv_ruleAnnotationField= ruleAnnotationField EOF ;
    public final EObject entryRuleAnnotationField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationField = null;


        try {
            // InternalXtend.g:972:2: (iv_ruleAnnotationField= ruleAnnotationField EOF )
            // InternalXtend.g:973:2: iv_ruleAnnotationField= ruleAnnotationField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationField=ruleAnnotationField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationField"


    // $ANTLR start "ruleAnnotationField"
    // InternalXtend.g:980:1: ruleAnnotationField returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) ) ) ;
    public final EObject ruleAnnotationField() throws RecognitionException {
        EObject current = null;

        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_55=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_61=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_5_0 = null;

        EObject lv_type_6_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_9_0 = null;

        EObject lv_type_10_0 = null;

        AntlrDatatypeRuleToken lv_name_11_0 = null;

        EObject lv_initialValue_13_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_16_0 = null;

        AntlrDatatypeRuleToken lv_name_18_0 = null;

        EObject lv_typeParameters_20_0 = null;

        EObject lv_typeParameters_22_0 = null;

        EObject lv_extends_25_0 = null;

        EObject lv_implements_27_0 = null;

        EObject lv_implements_29_0 = null;

        EObject lv_members_31_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_34_0 = null;

        AntlrDatatypeRuleToken lv_name_36_0 = null;

        EObject lv_typeParameters_38_0 = null;

        EObject lv_typeParameters_40_0 = null;

        EObject lv_extends_43_0 = null;

        EObject lv_extends_45_0 = null;

        EObject lv_members_47_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_50_0 = null;

        AntlrDatatypeRuleToken lv_name_52_0 = null;

        EObject lv_members_54_0 = null;

        EObject lv_members_56_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_60_0 = null;

        AntlrDatatypeRuleToken lv_name_62_0 = null;

        EObject lv_members_64_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:983:28: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) ) ) )
            // InternalXtend.g:984:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) ) )
            {
            // InternalXtend.g:984:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) ) )
            // InternalXtend.g:984:2: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) )
            {
            // InternalXtend.g:984:2: ()
            // InternalXtend.g:985:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAnnotationFieldAccess().getXtendMemberAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:990:2: ( (lv_annotations_1_0= ruleXAnnotation ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==KW_CommercialAt) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalXtend.g:991:1: (lv_annotations_1_0= ruleXAnnotation )
            	    {
            	    // InternalXtend.g:991:1: (lv_annotations_1_0= ruleXAnnotation )
            	    // InternalXtend.g:992:3: lv_annotations_1_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getAnnotationsXAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_annotations_1_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            // InternalXtend.g:1008:3: ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) )
            int alt57=5;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalXtend.g:1008:4: ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? )
                    {
                    // InternalXtend.g:1008:4: ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? )
                    // InternalXtend.g:1008:5: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )?
                    {
                    // InternalXtend.g:1008:5: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) )
                    int alt35=2;
                    alt35 = dfa35.predict(input);
                    switch (alt35) {
                        case 1 :
                            // InternalXtend.g:1008:6: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) )
                            {
                            // InternalXtend.g:1008:6: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) )
                            // InternalXtend.g:1008:7: () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) )
                            {
                            // InternalXtend.g:1008:7: ()
                            // InternalXtend.g:1009:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotationFieldAccess().getXtendFieldAnnotationInfoAction_2_0_0_0_0(),
                                          current);
                                  
                            }

                            }

                            // InternalXtend.g:1014:2: ( (lv_modifiers_3_0= ruleCommonModifier ) )*
                            loop31:
                            do {
                                int alt31=2;
                                int LA31_0 = input.LA(1);

                                if ( (LA31_0==KW_Package||(LA31_0>=KW_Public && LA31_0<=KW_Transient)) ) {
                                    alt31=1;
                                }


                                switch (alt31) {
                            	case 1 :
                            	    // InternalXtend.g:1015:1: (lv_modifiers_3_0= ruleCommonModifier )
                            	    {
                            	    // InternalXtend.g:1015:1: (lv_modifiers_3_0= ruleCommonModifier )
                            	    // InternalXtend.g:1016:3: lv_modifiers_3_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersCommonModifierParserRuleCall_2_0_0_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_31);
                            	    lv_modifiers_3_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_3_0, 
                            	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop31;
                                }
                            } while (true);

                            // InternalXtend.g:1032:3: ( (lv_modifiers_4_0= ruleFieldModifier ) )
                            // InternalXtend.g:1033:1: (lv_modifiers_4_0= ruleFieldModifier )
                            {
                            // InternalXtend.g:1033:1: (lv_modifiers_4_0= ruleFieldModifier )
                            // InternalXtend.g:1034:3: lv_modifiers_4_0= ruleFieldModifier
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersFieldModifierParserRuleCall_2_0_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_28);
                            lv_modifiers_4_0=ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"modifiers",
                                      		lv_modifiers_4_0, 
                                      		"org.eclipse.xtend.core.Xtend.FieldModifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1050:2: ( (lv_modifiers_5_0= ruleCommonModifier ) )*
                            loop32:
                            do {
                                int alt32=2;
                                int LA32_0 = input.LA(1);

                                if ( (LA32_0==KW_Package||(LA32_0>=KW_Public && LA32_0<=KW_Transient)) ) {
                                    alt32=1;
                                }


                                switch (alt32) {
                            	case 1 :
                            	    // InternalXtend.g:1051:1: (lv_modifiers_5_0= ruleCommonModifier )
                            	    {
                            	    // InternalXtend.g:1051:1: (lv_modifiers_5_0= ruleCommonModifier )
                            	    // InternalXtend.g:1052:3: lv_modifiers_5_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersCommonModifierParserRuleCall_2_0_0_0_3_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_modifiers_5_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_5_0, 
                            	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop32;
                                }
                            } while (true);

                            // InternalXtend.g:1068:3: ( (lv_type_6_0= ruleJvmTypeReference ) )?
                            int alt33=2;
                            alt33 = dfa33.predict(input);
                            switch (alt33) {
                                case 1 :
                                    // InternalXtend.g:1069:1: (lv_type_6_0= ruleJvmTypeReference )
                                    {
                                    // InternalXtend.g:1069:1: (lv_type_6_0= ruleJvmTypeReference )
                                    // InternalXtend.g:1070:3: lv_type_6_0= ruleJvmTypeReference
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_4_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_3);
                                    lv_type_6_0=ruleJvmTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"type",
                                              		lv_type_6_0, 
                                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalXtend.g:1086:3: ( (lv_name_7_0= ruleValidID ) )
                            // InternalXtend.g:1087:1: (lv_name_7_0= ruleValidID )
                            {
                            // InternalXtend.g:1087:1: (lv_name_7_0= ruleValidID )
                            // InternalXtend.g:1088:3: lv_name_7_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getNameValidIDParserRuleCall_2_0_0_0_5_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_32);
                            lv_name_7_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_7_0, 
                                      		"org.eclipse.xtend.core.Xtend.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:1105:6: ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) )
                            {
                            // InternalXtend.g:1105:6: ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) )
                            // InternalXtend.g:1105:7: () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) )
                            {
                            // InternalXtend.g:1105:7: ()
                            // InternalXtend.g:1106:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotationFieldAccess().getXtendFieldAnnotationInfoAction_2_0_0_1_0(),
                                          current);
                                  
                            }

                            }

                            // InternalXtend.g:1111:2: ( (lv_modifiers_9_0= ruleCommonModifier ) )*
                            loop34:
                            do {
                                int alt34=2;
                                int LA34_0 = input.LA(1);

                                if ( (LA34_0==KW_Package||(LA34_0>=KW_Public && LA34_0<=KW_Transient)) ) {
                                    alt34=1;
                                }


                                switch (alt34) {
                            	case 1 :
                            	    // InternalXtend.g:1112:1: (lv_modifiers_9_0= ruleCommonModifier )
                            	    {
                            	    // InternalXtend.g:1112:1: (lv_modifiers_9_0= ruleCommonModifier )
                            	    // InternalXtend.g:1113:3: lv_modifiers_9_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersCommonModifierParserRuleCall_2_0_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_modifiers_9_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_9_0, 
                            	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop34;
                                }
                            } while (true);

                            // InternalXtend.g:1129:3: ( (lv_type_10_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:1130:1: (lv_type_10_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:1130:1: (lv_type_10_0= ruleJvmTypeReference )
                            // InternalXtend.g:1131:3: lv_type_10_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_1_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_3);
                            lv_type_10_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_10_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1147:2: ( (lv_name_11_0= ruleValidID ) )
                            // InternalXtend.g:1148:1: (lv_name_11_0= ruleValidID )
                            {
                            // InternalXtend.g:1148:1: (lv_name_11_0= ruleValidID )
                            // InternalXtend.g:1149:3: lv_name_11_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getNameValidIDParserRuleCall_2_0_0_1_3_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_32);
                            lv_name_11_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_11_0, 
                                      		"org.eclipse.xtend.core.Xtend.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalXtend.g:1165:4: (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )?
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==KW_EqualsSign) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalXtend.g:1165:6: otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) )
                            {
                            otherlv_12=(Token)match(input,KW_EqualsSign,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getAnnotationFieldAccess().getEqualsSignKeyword_2_0_1_0());
                                  
                            }
                            // InternalXtend.g:1169:1: ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) )
                            // InternalXtend.g:1170:1: (lv_initialValue_13_0= ruleXAnnotationElementValue )
                            {
                            // InternalXtend.g:1170:1: (lv_initialValue_13_0= ruleXAnnotationElementValue )
                            // InternalXtend.g:1171:3: lv_initialValue_13_0= ruleXAnnotationElementValue
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getInitialValueXAnnotationElementValueParserRuleCall_2_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_34);
                            lv_initialValue_13_0=ruleXAnnotationElementValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initialValue",
                                      		lv_initialValue_13_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValue");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalXtend.g:1187:4: (otherlv_14= ';' )?
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==KW_Semicolon) ) {
                        alt37=1;
                    }
                    switch (alt37) {
                        case 1 :
                            // InternalXtend.g:1187:6: otherlv_14= ';'
                            {
                            otherlv_14=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotationFieldAccess().getSemicolonKeyword_2_0_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:1192:6: ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' )
                    {
                    // InternalXtend.g:1192:6: ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' )
                    // InternalXtend.g:1192:7: () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}'
                    {
                    // InternalXtend.g:1192:7: ()
                    // InternalXtend.g:1193:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotationFieldAccess().getXtendClassAnnotationInfoAction_2_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:1198:2: ( (lv_modifiers_16_0= ruleCommonModifier ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==KW_Package||(LA38_0>=KW_Public && LA38_0<=KW_Transient)) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // InternalXtend.g:1199:1: (lv_modifiers_16_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:1199:1: (lv_modifiers_16_0= ruleCommonModifier )
                    	    // InternalXtend.g:1200:3: lv_modifiers_16_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersCommonModifierParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_modifiers_16_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_16_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getAnnotationFieldAccess().getClassKeyword_2_1_2());
                          
                    }
                    // InternalXtend.g:1220:1: ( (lv_name_18_0= ruleValidID ) )
                    // InternalXtend.g:1221:1: (lv_name_18_0= ruleValidID )
                    {
                    // InternalXtend.g:1221:1: (lv_name_18_0= ruleValidID )
                    // InternalXtend.g:1222:3: lv_name_18_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getNameValidIDParserRuleCall_2_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_name_18_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_18_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:1238:2: (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==KW_LessThanSign) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalXtend.g:1238:4: otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>'
                            {
                            otherlv_19=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_19, grammarAccess.getAnnotationFieldAccess().getLessThanSignKeyword_2_1_4_0());
                                  
                            }
                            // InternalXtend.g:1242:1: ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) )
                            // InternalXtend.g:1243:1: (lv_typeParameters_20_0= ruleJvmTypeParameter )
                            {
                            // InternalXtend.g:1243:1: (lv_typeParameters_20_0= ruleJvmTypeParameter )
                            // InternalXtend.g:1244:3: lv_typeParameters_20_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_20_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_20_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1260:2: (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )*
                            loop39:
                            do {
                                int alt39=2;
                                int LA39_0 = input.LA(1);

                                if ( (LA39_0==KW_Comma) ) {
                                    alt39=1;
                                }


                                switch (alt39) {
                            	case 1 :
                            	    // InternalXtend.g:1260:4: otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_21=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_21, grammarAccess.getAnnotationFieldAccess().getCommaKeyword_2_1_4_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:1264:1: ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) )
                            	    // InternalXtend.g:1265:1: (lv_typeParameters_22_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalXtend.g:1265:1: (lv_typeParameters_22_0= ruleJvmTypeParameter )
                            	    // InternalXtend.g:1266:3: lv_typeParameters_22_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_22_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_22_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop39;
                                }
                            } while (true);

                            otherlv_23=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getAnnotationFieldAccess().getGreaterThanSignKeyword_2_1_4_3());
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:1286:3: (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==KW_Extends) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalXtend.g:1286:5: otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) )
                            {
                            otherlv_24=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getAnnotationFieldAccess().getExtendsKeyword_2_1_5_0());
                                  
                            }
                            // InternalXtend.g:1290:1: ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) )
                            // InternalXtend.g:1291:1: (lv_extends_25_0= ruleJvmParameterizedTypeReference )
                            {
                            // InternalXtend.g:1291:1: (lv_extends_25_0= ruleJvmParameterizedTypeReference )
                            // InternalXtend.g:1292:3: lv_extends_25_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_12);
                            lv_extends_25_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"extends",
                                      		lv_extends_25_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalXtend.g:1308:4: (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==KW_Implements) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalXtend.g:1308:6: otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            otherlv_26=(Token)match(input,KW_Implements,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_26, grammarAccess.getAnnotationFieldAccess().getImplementsKeyword_2_1_6_0());
                                  
                            }
                            // InternalXtend.g:1312:1: ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) )
                            // InternalXtend.g:1313:1: (lv_implements_27_0= ruleJvmParameterizedTypeReference )
                            {
                            // InternalXtend.g:1313:1: (lv_implements_27_0= ruleJvmParameterizedTypeReference )
                            // InternalXtend.g:1314:3: lv_implements_27_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_implements_27_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"implements",
                                      		lv_implements_27_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1330:2: (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop42:
                            do {
                                int alt42=2;
                                int LA42_0 = input.LA(1);

                                if ( (LA42_0==KW_Comma) ) {
                                    alt42=1;
                                }


                                switch (alt42) {
                            	case 1 :
                            	    // InternalXtend.g:1330:4: otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    otherlv_28=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_28, grammarAccess.getAnnotationFieldAccess().getCommaKeyword_2_1_6_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:1334:1: ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) )
                            	    // InternalXtend.g:1335:1: (lv_implements_29_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // InternalXtend.g:1335:1: (lv_implements_29_0= ruleJvmParameterizedTypeReference )
                            	    // InternalXtend.g:1336:3: lv_implements_29_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_implements_29_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"implements",
                            	              		lv_implements_29_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop42;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_30=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_30, grammarAccess.getAnnotationFieldAccess().getLeftCurlyBracketKeyword_2_1_7());
                          
                    }
                    // InternalXtend.g:1356:1: ( (lv_members_31_0= ruleMember ) )*
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==KW_Package||LA44_0==KW_Class||(LA44_0>=KW_Interface && LA44_0<=KW_LeftParenthesis)||LA44_0==KW_EqualsSignGreaterThanSign||LA44_0==KW_Extension||LA44_0==KW_New||(LA44_0>=KW_Public && LA44_0<=KW_Create)||(LA44_0>=KW_AFTER && LA44_0<=KW_SEPARATOR)||LA44_0==KW_CommercialAt||LA44_0==RULE_ID) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // InternalXtend.g:1357:1: (lv_members_31_0= ruleMember )
                    	    {
                    	    // InternalXtend.g:1357:1: (lv_members_31_0= ruleMember )
                    	    // InternalXtend.g:1358:3: lv_members_31_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getMembersMemberParserRuleCall_2_1_8_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_31_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_31_0, 
                    	              		"org.eclipse.xtend.core.Xtend.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);

                    otherlv_32=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_32, grammarAccess.getAnnotationFieldAccess().getRightCurlyBracketKeyword_2_1_9());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalXtend.g:1379:6: ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' )
                    {
                    // InternalXtend.g:1379:6: ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' )
                    // InternalXtend.g:1379:7: () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}'
                    {
                    // InternalXtend.g:1379:7: ()
                    // InternalXtend.g:1380:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotationFieldAccess().getXtendInterfaceAnnotationInfoAction_2_2_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:1385:2: ( (lv_modifiers_34_0= ruleCommonModifier ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==KW_Package||(LA45_0>=KW_Public && LA45_0<=KW_Transient)) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalXtend.g:1386:1: (lv_modifiers_34_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:1386:1: (lv_modifiers_34_0= ruleCommonModifier )
                    	    // InternalXtend.g:1387:3: lv_modifiers_34_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersCommonModifierParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_modifiers_34_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_34_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    otherlv_35=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_35, grammarAccess.getAnnotationFieldAccess().getInterfaceKeyword_2_2_2());
                          
                    }
                    // InternalXtend.g:1407:1: ( (lv_name_36_0= ruleValidID ) )
                    // InternalXtend.g:1408:1: (lv_name_36_0= ruleValidID )
                    {
                    // InternalXtend.g:1408:1: (lv_name_36_0= ruleValidID )
                    // InternalXtend.g:1409:3: lv_name_36_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getNameValidIDParserRuleCall_2_2_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_name_36_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_36_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:1425:2: (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==KW_LessThanSign) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalXtend.g:1425:4: otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>'
                            {
                            otherlv_37=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_37, grammarAccess.getAnnotationFieldAccess().getLessThanSignKeyword_2_2_4_0());
                                  
                            }
                            // InternalXtend.g:1429:1: ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) )
                            // InternalXtend.g:1430:1: (lv_typeParameters_38_0= ruleJvmTypeParameter )
                            {
                            // InternalXtend.g:1430:1: (lv_typeParameters_38_0= ruleJvmTypeParameter )
                            // InternalXtend.g:1431:3: lv_typeParameters_38_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_38_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_38_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1447:2: (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )*
                            loop46:
                            do {
                                int alt46=2;
                                int LA46_0 = input.LA(1);

                                if ( (LA46_0==KW_Comma) ) {
                                    alt46=1;
                                }


                                switch (alt46) {
                            	case 1 :
                            	    // InternalXtend.g:1447:4: otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_39=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_39, grammarAccess.getAnnotationFieldAccess().getCommaKeyword_2_2_4_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:1451:1: ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) )
                            	    // InternalXtend.g:1452:1: (lv_typeParameters_40_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalXtend.g:1452:1: (lv_typeParameters_40_0= ruleJvmTypeParameter )
                            	    // InternalXtend.g:1453:3: lv_typeParameters_40_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_40_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_40_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop46;
                                }
                            } while (true);

                            otherlv_41=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_41, grammarAccess.getAnnotationFieldAccess().getGreaterThanSignKeyword_2_2_4_3());
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:1473:3: (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==KW_Extends) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalXtend.g:1473:5: otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            otherlv_42=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_42, grammarAccess.getAnnotationFieldAccess().getExtendsKeyword_2_2_5_0());
                                  
                            }
                            // InternalXtend.g:1477:1: ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) )
                            // InternalXtend.g:1478:1: (lv_extends_43_0= ruleJvmParameterizedTypeReference )
                            {
                            // InternalXtend.g:1478:1: (lv_extends_43_0= ruleJvmParameterizedTypeReference )
                            // InternalXtend.g:1479:3: lv_extends_43_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_extends_43_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"extends",
                                      		lv_extends_43_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1495:2: (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop48:
                            do {
                                int alt48=2;
                                int LA48_0 = input.LA(1);

                                if ( (LA48_0==KW_Comma) ) {
                                    alt48=1;
                                }


                                switch (alt48) {
                            	case 1 :
                            	    // InternalXtend.g:1495:4: otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    otherlv_44=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_44, grammarAccess.getAnnotationFieldAccess().getCommaKeyword_2_2_5_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:1499:1: ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) )
                            	    // InternalXtend.g:1500:1: (lv_extends_45_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // InternalXtend.g:1500:1: (lv_extends_45_0= ruleJvmParameterizedTypeReference )
                            	    // InternalXtend.g:1501:3: lv_extends_45_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_extends_45_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"extends",
                            	              		lv_extends_45_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop48;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_46=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_46, grammarAccess.getAnnotationFieldAccess().getLeftCurlyBracketKeyword_2_2_6());
                          
                    }
                    // InternalXtend.g:1521:1: ( (lv_members_47_0= ruleMember ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==KW_Package||LA50_0==KW_Class||(LA50_0>=KW_Interface && LA50_0<=KW_LeftParenthesis)||LA50_0==KW_EqualsSignGreaterThanSign||LA50_0==KW_Extension||LA50_0==KW_New||(LA50_0>=KW_Public && LA50_0<=KW_Create)||(LA50_0>=KW_AFTER && LA50_0<=KW_SEPARATOR)||LA50_0==KW_CommercialAt||LA50_0==RULE_ID) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // InternalXtend.g:1522:1: (lv_members_47_0= ruleMember )
                    	    {
                    	    // InternalXtend.g:1522:1: (lv_members_47_0= ruleMember )
                    	    // InternalXtend.g:1523:3: lv_members_47_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getMembersMemberParserRuleCall_2_2_7_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_47_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_47_0, 
                    	              		"org.eclipse.xtend.core.Xtend.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    otherlv_48=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_48, grammarAccess.getAnnotationFieldAccess().getRightCurlyBracketKeyword_2_2_8());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalXtend.g:1544:6: ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' )
                    {
                    // InternalXtend.g:1544:6: ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' )
                    // InternalXtend.g:1544:7: () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}'
                    {
                    // InternalXtend.g:1544:7: ()
                    // InternalXtend.g:1545:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotationFieldAccess().getXtendEnumAnnotationInfoAction_2_3_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:1550:2: ( (lv_modifiers_50_0= ruleCommonModifier ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==KW_Package||(LA51_0>=KW_Public && LA51_0<=KW_Transient)) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalXtend.g:1551:1: (lv_modifiers_50_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:1551:1: (lv_modifiers_50_0= ruleCommonModifier )
                    	    // InternalXtend.g:1552:3: lv_modifiers_50_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersCommonModifierParserRuleCall_2_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_modifiers_50_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_50_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    otherlv_51=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_51, grammarAccess.getAnnotationFieldAccess().getEnumKeyword_2_3_2());
                          
                    }
                    // InternalXtend.g:1572:1: ( (lv_name_52_0= ruleValidID ) )
                    // InternalXtend.g:1573:1: (lv_name_52_0= ruleValidID )
                    {
                    // InternalXtend.g:1573:1: (lv_name_52_0= ruleValidID )
                    // InternalXtend.g:1574:3: lv_name_52_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getNameValidIDParserRuleCall_2_3_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_52_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_52_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_53=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_53, grammarAccess.getAnnotationFieldAccess().getLeftCurlyBracketKeyword_2_3_4());
                          
                    }
                    // InternalXtend.g:1594:1: ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==KW_Annotation||LA53_0==KW_Create||(LA53_0>=KW_AFTER && LA53_0<=KW_SEPARATOR)||LA53_0==RULE_ID) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalXtend.g:1594:2: ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )*
                            {
                            // InternalXtend.g:1594:2: ( (lv_members_54_0= ruleXtendEnumLiteral ) )
                            // InternalXtend.g:1595:1: (lv_members_54_0= ruleXtendEnumLiteral )
                            {
                            // InternalXtend.g:1595:1: (lv_members_54_0= ruleXtendEnumLiteral )
                            // InternalXtend.g:1596:3: lv_members_54_0= ruleXtendEnumLiteral
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getMembersXtendEnumLiteralParserRuleCall_2_3_5_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_members_54_0=ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"members",
                                      		lv_members_54_0, 
                                      		"org.eclipse.xtend.core.Xtend.XtendEnumLiteral");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1612:2: (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )*
                            loop52:
                            do {
                                int alt52=2;
                                int LA52_0 = input.LA(1);

                                if ( (LA52_0==KW_Comma) ) {
                                    alt52=1;
                                }


                                switch (alt52) {
                            	case 1 :
                            	    // InternalXtend.g:1612:4: otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) )
                            	    {
                            	    otherlv_55=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_55, grammarAccess.getAnnotationFieldAccess().getCommaKeyword_2_3_5_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:1616:1: ( (lv_members_56_0= ruleXtendEnumLiteral ) )
                            	    // InternalXtend.g:1617:1: (lv_members_56_0= ruleXtendEnumLiteral )
                            	    {
                            	    // InternalXtend.g:1617:1: (lv_members_56_0= ruleXtendEnumLiteral )
                            	    // InternalXtend.g:1618:3: lv_members_56_0= ruleXtendEnumLiteral
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getMembersXtendEnumLiteralParserRuleCall_2_3_5_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    lv_members_56_0=ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"members",
                            	              		lv_members_56_0, 
                            	              		"org.eclipse.xtend.core.Xtend.XtendEnumLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop52;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalXtend.g:1634:6: (otherlv_57= ';' )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==KW_Semicolon) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalXtend.g:1634:8: otherlv_57= ';'
                            {
                            otherlv_57=(Token)match(input,KW_Semicolon,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_57, grammarAccess.getAnnotationFieldAccess().getSemicolonKeyword_2_3_6());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_58=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_58, grammarAccess.getAnnotationFieldAccess().getRightCurlyBracketKeyword_2_3_7());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalXtend.g:1643:6: ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' )
                    {
                    // InternalXtend.g:1643:6: ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' )
                    // InternalXtend.g:1643:7: () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}'
                    {
                    // InternalXtend.g:1643:7: ()
                    // InternalXtend.g:1644:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotationFieldAccess().getXtendAnnotationTypeAnnotationInfoAction_2_4_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:1649:2: ( (lv_modifiers_60_0= ruleCommonModifier ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==KW_Package||(LA55_0>=KW_Public && LA55_0<=KW_Transient)) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // InternalXtend.g:1650:1: (lv_modifiers_60_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:1650:1: (lv_modifiers_60_0= ruleCommonModifier )
                    	    // InternalXtend.g:1651:3: lv_modifiers_60_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getModifiersCommonModifierParserRuleCall_2_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_modifiers_60_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_60_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    otherlv_61=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_61, grammarAccess.getAnnotationFieldAccess().getAnnotationKeyword_2_4_2());
                          
                    }
                    // InternalXtend.g:1671:1: ( (lv_name_62_0= ruleValidID ) )
                    // InternalXtend.g:1672:1: (lv_name_62_0= ruleValidID )
                    {
                    // InternalXtend.g:1672:1: (lv_name_62_0= ruleValidID )
                    // InternalXtend.g:1673:3: lv_name_62_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getNameValidIDParserRuleCall_2_4_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_62_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_62_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_63=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_63, grammarAccess.getAnnotationFieldAccess().getLeftCurlyBracketKeyword_2_4_4());
                          
                    }
                    // InternalXtend.g:1693:1: ( (lv_members_64_0= ruleAnnotationField ) )*
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==KW_Package||LA56_0==KW_Class||(LA56_0>=KW_Interface && LA56_0<=KW_LeftParenthesis)||LA56_0==KW_EqualsSignGreaterThanSign||(LA56_0>=KW_Public && LA56_0<=KW_Var)||LA56_0==KW_Create||(LA56_0>=KW_AFTER && LA56_0<=KW_SEPARATOR)||LA56_0==KW_CommercialAt||LA56_0==RULE_ID) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    // InternalXtend.g:1694:1: (lv_members_64_0= ruleAnnotationField )
                    	    {
                    	    // InternalXtend.g:1694:1: (lv_members_64_0= ruleAnnotationField )
                    	    // InternalXtend.g:1695:3: lv_members_64_0= ruleAnnotationField
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotationFieldAccess().getMembersAnnotationFieldParserRuleCall_2_4_5_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_members_64_0=ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationFieldRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_64_0, 
                    	              		"org.eclipse.xtend.core.Xtend.AnnotationField");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);

                    otherlv_65=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_65, grammarAccess.getAnnotationFieldAccess().getRightCurlyBracketKeyword_2_4_6());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationField"


    // $ANTLR start "entryRuleMember"
    // InternalXtend.g:1723:1: entryRuleMember returns [EObject current=null] : iv_ruleMember= ruleMember EOF ;
    public final EObject entryRuleMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMember = null;


        try {
            // InternalXtend.g:1724:2: (iv_ruleMember= ruleMember EOF )
            // InternalXtend.g:1725:2: iv_ruleMember= ruleMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMember=ruleMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMember"


    // $ANTLR start "ruleMember"
    // InternalXtend.g:1732:1: ruleMember returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) ) ) ;
    public final EObject ruleMember() throws RecognitionException {
        EObject current = null;

        Token lv_modifiers_8_0=null;
        Token lv_modifiers_15_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_37=null;
        Token otherlv_40=null;
        Token otherlv_43=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_55=null;
        Token otherlv_59=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token otherlv_75=null;
        Token otherlv_80=null;
        Token otherlv_82=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token otherlv_89=null;
        Token otherlv_91=null;
        Token otherlv_93=null;
        Token otherlv_95=null;
        Token otherlv_98=null;
        Token otherlv_100=null;
        Token otherlv_102=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_109=null;
        Token otherlv_111=null;
        Token otherlv_114=null;
        Token otherlv_116=null;
        Token otherlv_118=null;
        Token otherlv_120=null;
        Token otherlv_121=null;
        Token otherlv_124=null;
        Token otherlv_126=null;
        Token otherlv_128=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_5_0 = null;

        EObject lv_type_6_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_9_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_10_0 = null;

        EObject lv_type_11_0 = null;

        AntlrDatatypeRuleToken lv_name_12_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_13_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_14_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_16_0 = null;

        EObject lv_type_17_0 = null;

        AntlrDatatypeRuleToken lv_name_18_0 = null;

        EObject lv_type_19_0 = null;

        AntlrDatatypeRuleToken lv_name_20_0 = null;

        EObject lv_initialValue_22_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_25_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_26_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_27_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_28_0 = null;

        EObject lv_typeParameters_30_0 = null;

        EObject lv_typeParameters_32_0 = null;

        EObject lv_returnType_34_0 = null;

        EObject lv_createExtensionInfo_35_0 = null;

        AntlrDatatypeRuleToken lv_name_36_0 = null;

        EObject lv_returnType_38_0 = null;

        AntlrDatatypeRuleToken lv_name_39_0 = null;

        EObject lv_returnType_41_0 = null;

        AntlrDatatypeRuleToken lv_name_42_0 = null;

        EObject lv_createExtensionInfo_44_0 = null;

        AntlrDatatypeRuleToken lv_name_45_0 = null;

        AntlrDatatypeRuleToken lv_name_47_0 = null;

        EObject lv_parameters_49_0 = null;

        EObject lv_parameters_51_0 = null;

        EObject lv_exceptions_54_0 = null;

        EObject lv_exceptions_56_0 = null;

        EObject lv_expression_57_0 = null;

        EObject lv_expression_58_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_61_0 = null;

        EObject lv_typeParameters_64_0 = null;

        EObject lv_typeParameters_66_0 = null;

        EObject lv_parameters_69_0 = null;

        EObject lv_parameters_71_0 = null;

        EObject lv_exceptions_74_0 = null;

        EObject lv_exceptions_76_0 = null;

        EObject lv_expression_77_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_79_0 = null;

        AntlrDatatypeRuleToken lv_name_81_0 = null;

        EObject lv_typeParameters_83_0 = null;

        EObject lv_typeParameters_85_0 = null;

        EObject lv_extends_88_0 = null;

        EObject lv_implements_90_0 = null;

        EObject lv_implements_92_0 = null;

        EObject lv_members_94_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_97_0 = null;

        AntlrDatatypeRuleToken lv_name_99_0 = null;

        EObject lv_typeParameters_101_0 = null;

        EObject lv_typeParameters_103_0 = null;

        EObject lv_extends_106_0 = null;

        EObject lv_extends_108_0 = null;

        EObject lv_members_110_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_113_0 = null;

        AntlrDatatypeRuleToken lv_name_115_0 = null;

        EObject lv_members_117_0 = null;

        EObject lv_members_119_0 = null;

        AntlrDatatypeRuleToken lv_modifiers_123_0 = null;

        AntlrDatatypeRuleToken lv_name_125_0 = null;

        EObject lv_members_127_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:1735:28: ( ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) ) ) )
            // InternalXtend.g:1736:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) ) )
            {
            // InternalXtend.g:1736:1: ( () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) ) )
            // InternalXtend.g:1736:2: () ( (lv_annotations_1_0= ruleXAnnotation ) )* ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) )
            {
            // InternalXtend.g:1736:2: ()
            // InternalXtend.g:1737:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getMemberAccess().getXtendMemberAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:1742:2: ( (lv_annotations_1_0= ruleXAnnotation ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==KW_CommercialAt) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalXtend.g:1743:1: (lv_annotations_1_0= ruleXAnnotation )
            	    {
            	    // InternalXtend.g:1743:1: (lv_annotations_1_0= ruleXAnnotation )
            	    // InternalXtend.g:1744:3: lv_annotations_1_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMemberAccess().getAnnotationsXAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_annotations_1_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            // InternalXtend.g:1760:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) )
            int alt106=7;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    // InternalXtend.g:1760:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? )
                    {
                    // InternalXtend.g:1760:4: ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? )
                    // InternalXtend.g:1760:5: () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )?
                    {
                    // InternalXtend.g:1760:5: ()
                    // InternalXtend.g:1761:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getXtendFieldAnnotationInfoAction_2_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:1766:2: ( (lv_modifiers_3_0= ruleCommonModifier ) )*
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==KW_Package||(LA59_0>=KW_Public && LA59_0<=KW_Transient)) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // InternalXtend.g:1767:1: (lv_modifiers_3_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:1767:1: (lv_modifiers_3_0= ruleCommonModifier )
                    	    // InternalXtend.g:1768:3: lv_modifiers_3_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_modifiers_3_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_3_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop59;
                        }
                    } while (true);

                    // InternalXtend.g:1784:3: ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) )
                    int alt67=4;
                    alt67 = dfa67.predict(input);
                    switch (alt67) {
                        case 1 :
                            // InternalXtend.g:1784:4: ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) )
                            {
                            // InternalXtend.g:1784:4: ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) )
                            // InternalXtend.g:1784:5: ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) )
                            {
                            // InternalXtend.g:1784:5: ( (lv_modifiers_4_0= ruleFieldModifier ) )
                            // InternalXtend.g:1785:1: (lv_modifiers_4_0= ruleFieldModifier )
                            {
                            // InternalXtend.g:1785:1: (lv_modifiers_4_0= ruleFieldModifier )
                            // InternalXtend.g:1786:3: lv_modifiers_4_0= ruleFieldModifier
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersFieldModifierParserRuleCall_2_0_2_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_28);
                            lv_modifiers_4_0=ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"modifiers",
                                      		lv_modifiers_4_0, 
                                      		"org.eclipse.xtend.core.Xtend.FieldModifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1802:2: ( (lv_modifiers_5_0= ruleCommonModifier ) )*
                            loop60:
                            do {
                                int alt60=2;
                                int LA60_0 = input.LA(1);

                                if ( (LA60_0==KW_Package||(LA60_0>=KW_Public && LA60_0<=KW_Transient)) ) {
                                    alt60=1;
                                }


                                switch (alt60) {
                            	case 1 :
                            	    // InternalXtend.g:1803:1: (lv_modifiers_5_0= ruleCommonModifier )
                            	    {
                            	    // InternalXtend.g:1803:1: (lv_modifiers_5_0= ruleCommonModifier )
                            	    // InternalXtend.g:1804:3: lv_modifiers_5_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_0_2_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_modifiers_5_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_5_0, 
                            	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop60;
                                }
                            } while (true);

                            // InternalXtend.g:1820:3: ( (lv_type_6_0= ruleJvmTypeReference ) )?
                            int alt61=2;
                            alt61 = dfa61.predict(input);
                            switch (alt61) {
                                case 1 :
                                    // InternalXtend.g:1821:1: (lv_type_6_0= ruleJvmTypeReference )
                                    {
                                    // InternalXtend.g:1821:1: (lv_type_6_0= ruleJvmTypeReference )
                                    // InternalXtend.g:1822:3: lv_type_6_0= ruleJvmTypeReference
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_2_0_2_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_3);
                                    lv_type_6_0=ruleJvmTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"type",
                                              		lv_type_6_0, 
                                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalXtend.g:1838:3: ( (lv_name_7_0= ruleValidID ) )
                            // InternalXtend.g:1839:1: (lv_name_7_0= ruleValidID )
                            {
                            // InternalXtend.g:1839:1: (lv_name_7_0= ruleValidID )
                            // InternalXtend.g:1840:3: lv_name_7_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_0_2_0_3_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_32);
                            lv_name_7_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_7_0, 
                                      		"org.eclipse.xtend.core.Xtend.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:1857:6: ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? )
                            {
                            // InternalXtend.g:1857:6: ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? )
                            // InternalXtend.g:1857:7: ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )?
                            {
                            // InternalXtend.g:1857:7: ( (lv_modifiers_8_0= 'extension' ) )
                            // InternalXtend.g:1858:1: (lv_modifiers_8_0= 'extension' )
                            {
                            // InternalXtend.g:1858:1: (lv_modifiers_8_0= 'extension' )
                            // InternalXtend.g:1859:3: lv_modifiers_8_0= 'extension'
                            {
                            lv_modifiers_8_0=(Token)match(input,KW_Extension,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_modifiers_8_0, grammarAccess.getMemberAccess().getModifiersExtensionKeyword_2_0_2_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		addWithLastConsumed(current, "modifiers", lv_modifiers_8_0, "extension");
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1872:2: ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )*
                            loop62:
                            do {
                                int alt62=3;
                                int LA62_0 = input.LA(1);

                                if ( ((LA62_0>=KW_Val && LA62_0<=KW_Var)) ) {
                                    alt62=1;
                                }
                                else if ( (LA62_0==KW_Package||(LA62_0>=KW_Public && LA62_0<=KW_Transient)) ) {
                                    alt62=2;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    // InternalXtend.g:1872:3: ( (lv_modifiers_9_0= ruleFieldModifier ) )
                            	    {
                            	    // InternalXtend.g:1872:3: ( (lv_modifiers_9_0= ruleFieldModifier ) )
                            	    // InternalXtend.g:1873:1: (lv_modifiers_9_0= ruleFieldModifier )
                            	    {
                            	    // InternalXtend.g:1873:1: (lv_modifiers_9_0= ruleFieldModifier )
                            	    // InternalXtend.g:1874:3: lv_modifiers_9_0= ruleFieldModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersFieldModifierParserRuleCall_2_0_2_1_1_0_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_modifiers_9_0=ruleFieldModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_9_0, 
                            	              		"org.eclipse.xtend.core.Xtend.FieldModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // InternalXtend.g:1891:6: ( (lv_modifiers_10_0= ruleCommonModifier ) )
                            	    {
                            	    // InternalXtend.g:1891:6: ( (lv_modifiers_10_0= ruleCommonModifier ) )
                            	    // InternalXtend.g:1892:1: (lv_modifiers_10_0= ruleCommonModifier )
                            	    {
                            	    // InternalXtend.g:1892:1: (lv_modifiers_10_0= ruleCommonModifier )
                            	    // InternalXtend.g:1893:3: lv_modifiers_10_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_modifiers_10_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_10_0, 
                            	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);

                            // InternalXtend.g:1909:4: ( (lv_type_11_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:1910:1: (lv_type_11_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:1910:1: (lv_type_11_0= ruleJvmTypeReference )
                            // InternalXtend.g:1911:3: lv_type_11_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_36);
                            lv_type_11_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_11_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1927:2: ( (lv_name_12_0= ruleValidID ) )?
                            int alt63=2;
                            alt63 = dfa63.predict(input);
                            switch (alt63) {
                                case 1 :
                                    // InternalXtend.g:1928:1: (lv_name_12_0= ruleValidID )
                                    {
                                    // InternalXtend.g:1928:1: (lv_name_12_0= ruleValidID )
                                    // InternalXtend.g:1929:3: lv_name_12_0= ruleValidID
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_0_2_1_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_32);
                                    lv_name_12_0=ruleValidID();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"name",
                                              		lv_name_12_0, 
                                              		"org.eclipse.xtend.core.Xtend.ValidID");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalXtend.g:1946:6: ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? )
                            {
                            // InternalXtend.g:1946:6: ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? )
                            // InternalXtend.g:1946:7: ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )?
                            {
                            // InternalXtend.g:1946:7: ( (lv_modifiers_13_0= ruleFieldModifier ) )
                            // InternalXtend.g:1947:1: (lv_modifiers_13_0= ruleFieldModifier )
                            {
                            // InternalXtend.g:1947:1: (lv_modifiers_13_0= ruleFieldModifier )
                            // InternalXtend.g:1948:3: lv_modifiers_13_0= ruleFieldModifier
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersFieldModifierParserRuleCall_2_0_2_2_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_37);
                            lv_modifiers_13_0=ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"modifiers",
                                      		lv_modifiers_13_0, 
                                      		"org.eclipse.xtend.core.Xtend.FieldModifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1964:2: ( (lv_modifiers_14_0= ruleCommonModifier ) )*
                            loop64:
                            do {
                                int alt64=2;
                                int LA64_0 = input.LA(1);

                                if ( (LA64_0==KW_Package||(LA64_0>=KW_Public && LA64_0<=KW_Transient)) ) {
                                    alt64=1;
                                }


                                switch (alt64) {
                            	case 1 :
                            	    // InternalXtend.g:1965:1: (lv_modifiers_14_0= ruleCommonModifier )
                            	    {
                            	    // InternalXtend.g:1965:1: (lv_modifiers_14_0= ruleCommonModifier )
                            	    // InternalXtend.g:1966:3: lv_modifiers_14_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_0_2_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_37);
                            	    lv_modifiers_14_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_14_0, 
                            	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop64;
                                }
                            } while (true);

                            // InternalXtend.g:1982:3: ( (lv_modifiers_15_0= 'extension' ) )
                            // InternalXtend.g:1983:1: (lv_modifiers_15_0= 'extension' )
                            {
                            // InternalXtend.g:1983:1: (lv_modifiers_15_0= 'extension' )
                            // InternalXtend.g:1984:3: lv_modifiers_15_0= 'extension'
                            {
                            lv_modifiers_15_0=(Token)match(input,KW_Extension,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_modifiers_15_0, grammarAccess.getMemberAccess().getModifiersExtensionKeyword_2_0_2_2_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberRule());
                              	        }
                                     		addWithLastConsumed(current, "modifiers", lv_modifiers_15_0, "extension");
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:1997:2: ( (lv_modifiers_16_0= ruleCommonModifier ) )*
                            loop65:
                            do {
                                int alt65=2;
                                int LA65_0 = input.LA(1);

                                if ( (LA65_0==KW_Package||(LA65_0>=KW_Public && LA65_0<=KW_Transient)) ) {
                                    alt65=1;
                                }


                                switch (alt65) {
                            	case 1 :
                            	    // InternalXtend.g:1998:1: (lv_modifiers_16_0= ruleCommonModifier )
                            	    {
                            	    // InternalXtend.g:1998:1: (lv_modifiers_16_0= ruleCommonModifier )
                            	    // InternalXtend.g:1999:3: lv_modifiers_16_0= ruleCommonModifier
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_0_2_2_3_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_modifiers_16_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"modifiers",
                            	              		lv_modifiers_16_0, 
                            	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop65;
                                }
                            } while (true);

                            // InternalXtend.g:2015:3: ( (lv_type_17_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:2016:1: (lv_type_17_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:2016:1: (lv_type_17_0= ruleJvmTypeReference )
                            // InternalXtend.g:2017:3: lv_type_17_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_2_2_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_36);
                            lv_type_17_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_17_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2033:2: ( (lv_name_18_0= ruleValidID ) )?
                            int alt66=2;
                            alt66 = dfa66.predict(input);
                            switch (alt66) {
                                case 1 :
                                    // InternalXtend.g:2034:1: (lv_name_18_0= ruleValidID )
                                    {
                                    // InternalXtend.g:2034:1: (lv_name_18_0= ruleValidID )
                                    // InternalXtend.g:2035:3: lv_name_18_0= ruleValidID
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_0_2_2_5_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_32);
                                    lv_name_18_0=ruleValidID();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"name",
                                              		lv_name_18_0, 
                                              		"org.eclipse.xtend.core.Xtend.ValidID");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalXtend.g:2052:6: ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) )
                            {
                            // InternalXtend.g:2052:6: ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) )
                            // InternalXtend.g:2052:7: ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) )
                            {
                            // InternalXtend.g:2052:7: ( (lv_type_19_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:2053:1: (lv_type_19_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:2053:1: (lv_type_19_0= ruleJvmTypeReference )
                            // InternalXtend.g:2054:3: lv_type_19_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_2_3_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_3);
                            lv_type_19_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_19_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2070:2: ( (lv_name_20_0= ruleValidID ) )
                            // InternalXtend.g:2071:1: (lv_name_20_0= ruleValidID )
                            {
                            // InternalXtend.g:2071:1: (lv_name_20_0= ruleValidID )
                            // InternalXtend.g:2072:3: lv_name_20_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_32);
                            lv_name_20_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_20_0, 
                                      		"org.eclipse.xtend.core.Xtend.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalXtend.g:2088:4: (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==KW_EqualsSign) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalXtend.g:2088:6: otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) )
                            {
                            otherlv_21=(Token)match(input,KW_EqualsSign,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_21, grammarAccess.getMemberAccess().getEqualsSignKeyword_2_0_3_0());
                                  
                            }
                            // InternalXtend.g:2092:1: ( (lv_initialValue_22_0= ruleXExpression ) )
                            // InternalXtend.g:2093:1: (lv_initialValue_22_0= ruleXExpression )
                            {
                            // InternalXtend.g:2093:1: (lv_initialValue_22_0= ruleXExpression )
                            // InternalXtend.g:2094:3: lv_initialValue_22_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getInitialValueXExpressionParserRuleCall_2_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_34);
                            lv_initialValue_22_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initialValue",
                                      		lv_initialValue_22_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalXtend.g:2110:4: (otherlv_23= ';' )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==KW_Semicolon) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalXtend.g:2110:6: otherlv_23= ';'
                            {
                            otherlv_23=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getMemberAccess().getSemicolonKeyword_2_0_4());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:2115:6: ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? )
                    {
                    // InternalXtend.g:2115:6: ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? )
                    // InternalXtend.g:2115:7: () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )?
                    {
                    // InternalXtend.g:2115:7: ()
                    // InternalXtend.g:2116:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getXtendFunctionAnnotationInfoAction_2_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:2121:2: ( (lv_modifiers_25_0= ruleCommonModifier ) )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==KW_Package||(LA70_0>=KW_Public && LA70_0<=KW_Transient)) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalXtend.g:2122:1: (lv_modifiers_25_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:2122:1: (lv_modifiers_25_0= ruleCommonModifier )
                    	    // InternalXtend.g:2123:3: lv_modifiers_25_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_38);
                    	    lv_modifiers_25_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_25_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);

                    // InternalXtend.g:2139:3: ( (lv_modifiers_26_0= ruleMethodModifier ) )
                    // InternalXtend.g:2140:1: (lv_modifiers_26_0= ruleMethodModifier )
                    {
                    // InternalXtend.g:2140:1: (lv_modifiers_26_0= ruleMethodModifier )
                    // InternalXtend.g:2141:3: lv_modifiers_26_0= ruleMethodModifier
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersMethodModifierParserRuleCall_2_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_39);
                    lv_modifiers_26_0=ruleMethodModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		add(
                             			current, 
                             			"modifiers",
                              		lv_modifiers_26_0, 
                              		"org.eclipse.xtend.core.Xtend.MethodModifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:2157:2: ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )*
                    loop71:
                    do {
                        int alt71=3;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==KW_Package||(LA71_0>=KW_Public && LA71_0<=KW_Transient)) ) {
                            alt71=1;
                        }
                        else if ( ((LA71_0>=KW_Def && LA71_0<=KW_Override)) ) {
                            alt71=2;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // InternalXtend.g:2157:3: ( (lv_modifiers_27_0= ruleCommonModifier ) )
                    	    {
                    	    // InternalXtend.g:2157:3: ( (lv_modifiers_27_0= ruleCommonModifier ) )
                    	    // InternalXtend.g:2158:1: (lv_modifiers_27_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:2158:1: (lv_modifiers_27_0= ruleCommonModifier )
                    	    // InternalXtend.g:2159:3: lv_modifiers_27_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_1_3_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_modifiers_27_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_27_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalXtend.g:2176:6: ( (lv_modifiers_28_0= ruleMethodModifier ) )
                    	    {
                    	    // InternalXtend.g:2176:6: ( (lv_modifiers_28_0= ruleMethodModifier ) )
                    	    // InternalXtend.g:2177:1: (lv_modifiers_28_0= ruleMethodModifier )
                    	    {
                    	    // InternalXtend.g:2177:1: (lv_modifiers_28_0= ruleMethodModifier )
                    	    // InternalXtend.g:2178:3: lv_modifiers_28_0= ruleMethodModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersMethodModifierParserRuleCall_2_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_modifiers_28_0=ruleMethodModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_28_0, 
                    	              		"org.eclipse.xtend.core.Xtend.MethodModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);

                    // InternalXtend.g:2194:4: (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==KW_LessThanSign) ) {
                        int LA73_1 = input.LA(2);

                        if ( (LA73_1==KW_Annotation||LA73_1==KW_Create||(LA73_1>=KW_AFTER && LA73_1<=KW_SEPARATOR)||LA73_1==RULE_ID) ) {
                            alt73=1;
                        }
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalXtend.g:2194:6: otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>'
                            {
                            otherlv_29=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_29, grammarAccess.getMemberAccess().getLessThanSignKeyword_2_1_4_0());
                                  
                            }
                            // InternalXtend.g:2198:1: ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) )
                            // InternalXtend.g:2199:1: (lv_typeParameters_30_0= ruleJvmTypeParameter )
                            {
                            // InternalXtend.g:2199:1: (lv_typeParameters_30_0= ruleJvmTypeParameter )
                            // InternalXtend.g:2200:3: lv_typeParameters_30_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_30_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_30_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2216:2: (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )*
                            loop72:
                            do {
                                int alt72=2;
                                int LA72_0 = input.LA(1);

                                if ( (LA72_0==KW_Comma) ) {
                                    alt72=1;
                                }


                                switch (alt72) {
                            	case 1 :
                            	    // InternalXtend.g:2216:4: otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_31=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_31, grammarAccess.getMemberAccess().getCommaKeyword_2_1_4_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:2220:1: ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) )
                            	    // InternalXtend.g:2221:1: (lv_typeParameters_32_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalXtend.g:2221:1: (lv_typeParameters_32_0= ruleJvmTypeParameter )
                            	    // InternalXtend.g:2222:3: lv_typeParameters_32_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_32_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_32_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop72;
                                }
                            } while (true);

                            otherlv_33=(Token)match(input,KW_GreaterThanSign,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_33, grammarAccess.getMemberAccess().getGreaterThanSignKeyword_2_1_4_3());
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:2242:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) )
                    int alt74=5;
                    alt74 = dfa74.predict(input);
                    switch (alt74) {
                        case 1 :
                            // InternalXtend.g:2242:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) )
                            {
                            // InternalXtend.g:2242:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) )
                            // InternalXtend.g:2242:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' )
                            {
                            // InternalXtend.g:2255:5: ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' )
                            // InternalXtend.g:2255:6: ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '('
                            {
                            // InternalXtend.g:2255:6: ( (lv_returnType_34_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:2256:1: (lv_returnType_34_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:2256:1: (lv_returnType_34_0= ruleJvmTypeReference )
                            // InternalXtend.g:2257:3: lv_returnType_34_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_1_5_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_40);
                            lv_returnType_34_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnType",
                                      		lv_returnType_34_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2273:2: ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) )
                            // InternalXtend.g:2274:1: (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo )
                            {
                            // InternalXtend.g:2274:1: (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo )
                            // InternalXtend.g:2275:3: lv_createExtensionInfo_35_0= ruleCreateExtensionInfo
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getCreateExtensionInfoCreateExtensionInfoParserRuleCall_2_1_5_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_3);
                            lv_createExtensionInfo_35_0=ruleCreateExtensionInfo();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"createExtensionInfo",
                                      		lv_createExtensionInfo_35_0, 
                                      		"org.eclipse.xtend.core.Xtend.CreateExtensionInfo");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2291:2: ( (lv_name_36_0= ruleValidID ) )
                            // InternalXtend.g:2292:1: (lv_name_36_0= ruleValidID )
                            {
                            // InternalXtend.g:2292:1: (lv_name_36_0= ruleValidID )
                            // InternalXtend.g:2293:3: lv_name_36_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_1_5_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_name_36_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_36_0, 
                                      		"org.eclipse.xtend.core.Xtend.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_37=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_37, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_1_5_0_0_3());
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:2314:6: ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) )
                            {
                            // InternalXtend.g:2314:6: ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) )
                            // InternalXtend.g:2314:7: ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' )
                            {
                            // InternalXtend.g:2323:5: ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' )
                            // InternalXtend.g:2323:6: ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '('
                            {
                            // InternalXtend.g:2323:6: ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) )
                            // InternalXtend.g:2324:1: (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs )
                            {
                            // InternalXtend.g:2324:1: (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs )
                            // InternalXtend.g:2325:3: lv_returnType_38_0= ruleTypeReferenceWithTypeArgs
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_1_5_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_39);
                            lv_returnType_38_0=ruleTypeReferenceWithTypeArgs();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnType",
                                      		lv_returnType_38_0, 
                                      		"org.eclipse.xtend.core.Xtend.TypeReferenceWithTypeArgs");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2341:2: ( (lv_name_39_0= ruleFunctionID ) )
                            // InternalXtend.g:2342:1: (lv_name_39_0= ruleFunctionID )
                            {
                            // InternalXtend.g:2342:1: (lv_name_39_0= ruleFunctionID )
                            // InternalXtend.g:2343:3: lv_name_39_0= ruleFunctionID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameFunctionIDParserRuleCall_2_1_5_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_name_39_0=ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_39_0, 
                                      		"org.eclipse.xtend.core.Xtend.FunctionID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_40=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_40, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_1_5_1_0_2());
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalXtend.g:2364:6: ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) )
                            {
                            // InternalXtend.g:2364:6: ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) )
                            // InternalXtend.g:2364:7: ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' )
                            {
                            // InternalXtend.g:2373:5: ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' )
                            // InternalXtend.g:2373:6: ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '('
                            {
                            // InternalXtend.g:2373:6: ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) )
                            // InternalXtend.g:2374:1: (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs )
                            {
                            // InternalXtend.g:2374:1: (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs )
                            // InternalXtend.g:2375:3: lv_returnType_41_0= ruleTypeReferenceNoTypeArgs
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_1_5_2_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_39);
                            lv_returnType_41_0=ruleTypeReferenceNoTypeArgs();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnType",
                                      		lv_returnType_41_0, 
                                      		"org.eclipse.xtend.core.Xtend.TypeReferenceNoTypeArgs");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2391:2: ( (lv_name_42_0= ruleFunctionID ) )
                            // InternalXtend.g:2392:1: (lv_name_42_0= ruleFunctionID )
                            {
                            // InternalXtend.g:2392:1: (lv_name_42_0= ruleFunctionID )
                            // InternalXtend.g:2393:3: lv_name_42_0= ruleFunctionID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameFunctionIDParserRuleCall_2_1_5_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_name_42_0=ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_42_0, 
                                      		"org.eclipse.xtend.core.Xtend.FunctionID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_43=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_43, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_1_5_2_0_2());
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalXtend.g:2414:6: ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) )
                            {
                            // InternalXtend.g:2414:6: ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) )
                            // InternalXtend.g:2414:7: ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' )
                            {
                            // InternalXtend.g:2423:5: ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' )
                            // InternalXtend.g:2423:6: ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '('
                            {
                            // InternalXtend.g:2423:6: ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) )
                            // InternalXtend.g:2424:1: (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo )
                            {
                            // InternalXtend.g:2424:1: (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo )
                            // InternalXtend.g:2425:3: lv_createExtensionInfo_44_0= ruleCreateExtensionInfo
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getCreateExtensionInfoCreateExtensionInfoParserRuleCall_2_1_5_3_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_3);
                            lv_createExtensionInfo_44_0=ruleCreateExtensionInfo();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"createExtensionInfo",
                                      		lv_createExtensionInfo_44_0, 
                                      		"org.eclipse.xtend.core.Xtend.CreateExtensionInfo");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2441:2: ( (lv_name_45_0= ruleValidID ) )
                            // InternalXtend.g:2442:1: (lv_name_45_0= ruleValidID )
                            {
                            // InternalXtend.g:2442:1: (lv_name_45_0= ruleValidID )
                            // InternalXtend.g:2443:3: lv_name_45_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_1_5_3_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_name_45_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_45_0, 
                                      		"org.eclipse.xtend.core.Xtend.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_46=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_46, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_1_5_3_0_2());
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalXtend.g:2464:6: ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' )
                            {
                            // InternalXtend.g:2464:6: ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' )
                            // InternalXtend.g:2464:7: ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '('
                            {
                            // InternalXtend.g:2464:7: ( (lv_name_47_0= ruleFunctionID ) )
                            // InternalXtend.g:2465:1: (lv_name_47_0= ruleFunctionID )
                            {
                            // InternalXtend.g:2465:1: (lv_name_47_0= ruleFunctionID )
                            // InternalXtend.g:2466:3: lv_name_47_0= ruleFunctionID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getNameFunctionIDParserRuleCall_2_1_5_4_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_name_47_0=ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_47_0, 
                                      		"org.eclipse.xtend.core.Xtend.FunctionID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_48=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_48, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_1_5_4_1());
                                  
                            }

                            }


                            }
                            break;

                    }

                    // InternalXtend.g:2486:3: ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( ((LA76_0>=KW_Annotation && LA76_0<=KW_LeftParenthesis)||LA76_0==KW_EqualsSignGreaterThanSign||LA76_0==KW_Extension||LA76_0==KW_Create||(LA76_0>=KW_AFTER && LA76_0<=KW_SEPARATOR)||LA76_0==KW_CommercialAt||LA76_0==RULE_ID) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalXtend.g:2486:4: ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )*
                            {
                            // InternalXtend.g:2486:4: ( (lv_parameters_49_0= ruleParameter ) )
                            // InternalXtend.g:2487:1: (lv_parameters_49_0= ruleParameter )
                            {
                            // InternalXtend.g:2487:1: (lv_parameters_49_0= ruleParameter )
                            // InternalXtend.g:2488:3: lv_parameters_49_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getParametersParameterParserRuleCall_2_1_6_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_parameters_49_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_49_0, 
                                      		"org.eclipse.xtend.core.Xtend.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2504:2: (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )*
                            loop75:
                            do {
                                int alt75=2;
                                int LA75_0 = input.LA(1);

                                if ( (LA75_0==KW_Comma) ) {
                                    alt75=1;
                                }


                                switch (alt75) {
                            	case 1 :
                            	    // InternalXtend.g:2504:4: otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) )
                            	    {
                            	    otherlv_50=(Token)match(input,KW_Comma,FOLLOW_43); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_50, grammarAccess.getMemberAccess().getCommaKeyword_2_1_6_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:2508:1: ( (lv_parameters_51_0= ruleParameter ) )
                            	    // InternalXtend.g:2509:1: (lv_parameters_51_0= ruleParameter )
                            	    {
                            	    // InternalXtend.g:2509:1: (lv_parameters_51_0= ruleParameter )
                            	    // InternalXtend.g:2510:3: lv_parameters_51_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getParametersParameterParserRuleCall_2_1_6_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_parameters_51_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_51_0, 
                            	              		"org.eclipse.xtend.core.Xtend.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop75;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_52=(Token)match(input,KW_RightParenthesis,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_52, grammarAccess.getMemberAccess().getRightParenthesisKeyword_2_1_7());
                          
                    }
                    // InternalXtend.g:2530:1: (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==KW_Throws) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalXtend.g:2530:3: otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )*
                            {
                            otherlv_53=(Token)match(input,KW_Throws,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_53, grammarAccess.getMemberAccess().getThrowsKeyword_2_1_8_0());
                                  
                            }
                            // InternalXtend.g:2534:1: ( (lv_exceptions_54_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:2535:1: (lv_exceptions_54_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:2535:1: (lv_exceptions_54_0= ruleJvmTypeReference )
                            // InternalXtend.g:2536:3: lv_exceptions_54_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExceptionsJvmTypeReferenceParserRuleCall_2_1_8_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_45);
                            lv_exceptions_54_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"exceptions",
                                      		lv_exceptions_54_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2552:2: (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )*
                            loop77:
                            do {
                                int alt77=2;
                                int LA77_0 = input.LA(1);

                                if ( (LA77_0==KW_Comma) ) {
                                    alt77=1;
                                }


                                switch (alt77) {
                            	case 1 :
                            	    // InternalXtend.g:2552:4: otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_55=(Token)match(input,KW_Comma,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_55, grammarAccess.getMemberAccess().getCommaKeyword_2_1_8_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:2556:1: ( (lv_exceptions_56_0= ruleJvmTypeReference ) )
                            	    // InternalXtend.g:2557:1: (lv_exceptions_56_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalXtend.g:2557:1: (lv_exceptions_56_0= ruleJvmTypeReference )
                            	    // InternalXtend.g:2558:3: lv_exceptions_56_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getExceptionsJvmTypeReferenceParserRuleCall_2_1_8_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_45);
                            	    lv_exceptions_56_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"exceptions",
                            	              		lv_exceptions_56_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop77;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalXtend.g:2574:6: ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )?
                    int alt79=4;
                    switch ( input.LA(1) ) {
                        case KW_LeftCurlyBracket:
                            {
                            alt79=1;
                            }
                            break;
                        case RULE_RICH_TEXT:
                        case RULE_RICH_TEXT_START:
                            {
                            alt79=2;
                            }
                            break;
                        case KW_Semicolon:
                            {
                            alt79=3;
                            }
                            break;
                    }

                    switch (alt79) {
                        case 1 :
                            // InternalXtend.g:2574:7: ( (lv_expression_57_0= ruleXBlockExpression ) )
                            {
                            // InternalXtend.g:2574:7: ( (lv_expression_57_0= ruleXBlockExpression ) )
                            // InternalXtend.g:2575:1: (lv_expression_57_0= ruleXBlockExpression )
                            {
                            // InternalXtend.g:2575:1: (lv_expression_57_0= ruleXBlockExpression )
                            // InternalXtend.g:2576:3: lv_expression_57_0= ruleXBlockExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExpressionXBlockExpressionParserRuleCall_2_1_9_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_57_0=ruleXBlockExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_57_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:2593:6: ( (lv_expression_58_0= ruleRichString ) )
                            {
                            // InternalXtend.g:2593:6: ( (lv_expression_58_0= ruleRichString ) )
                            // InternalXtend.g:2594:1: (lv_expression_58_0= ruleRichString )
                            {
                            // InternalXtend.g:2594:1: (lv_expression_58_0= ruleRichString )
                            // InternalXtend.g:2595:3: lv_expression_58_0= ruleRichString
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExpressionRichStringParserRuleCall_2_1_9_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_58_0=ruleRichString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_58_0, 
                                      		"org.eclipse.xtend.core.Xtend.RichString");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalXtend.g:2612:7: otherlv_59= ';'
                            {
                            otherlv_59=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_59, grammarAccess.getMemberAccess().getSemicolonKeyword_2_1_9_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalXtend.g:2617:6: ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) )
                    {
                    // InternalXtend.g:2617:6: ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) )
                    // InternalXtend.g:2617:7: () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) )
                    {
                    // InternalXtend.g:2617:7: ()
                    // InternalXtend.g:2618:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getXtendConstructorAnnotationInfoAction_2_2_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:2623:2: ( (lv_modifiers_61_0= ruleCommonModifier ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==KW_Package||(LA80_0>=KW_Public && LA80_0<=KW_Transient)) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalXtend.g:2624:1: (lv_modifiers_61_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:2624:1: (lv_modifiers_61_0= ruleCommonModifier )
                    	    // InternalXtend.g:2625:3: lv_modifiers_61_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    lv_modifiers_61_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_61_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    otherlv_62=(Token)match(input,KW_New,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_62, grammarAccess.getMemberAccess().getNewKeyword_2_2_2());
                          
                    }
                    // InternalXtend.g:2645:1: (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==KW_LessThanSign) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalXtend.g:2645:3: otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>'
                            {
                            otherlv_63=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_63, grammarAccess.getMemberAccess().getLessThanSignKeyword_2_2_3_0());
                                  
                            }
                            // InternalXtend.g:2649:1: ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) )
                            // InternalXtend.g:2650:1: (lv_typeParameters_64_0= ruleJvmTypeParameter )
                            {
                            // InternalXtend.g:2650:1: (lv_typeParameters_64_0= ruleJvmTypeParameter )
                            // InternalXtend.g:2651:3: lv_typeParameters_64_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_64_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_64_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2667:2: (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )*
                            loop81:
                            do {
                                int alt81=2;
                                int LA81_0 = input.LA(1);

                                if ( (LA81_0==KW_Comma) ) {
                                    alt81=1;
                                }


                                switch (alt81) {
                            	case 1 :
                            	    // InternalXtend.g:2667:4: otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_65=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_65, grammarAccess.getMemberAccess().getCommaKeyword_2_2_3_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:2671:1: ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) )
                            	    // InternalXtend.g:2672:1: (lv_typeParameters_66_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalXtend.g:2672:1: (lv_typeParameters_66_0= ruleJvmTypeParameter )
                            	    // InternalXtend.g:2673:3: lv_typeParameters_66_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_2_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_66_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_66_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop81;
                                }
                            } while (true);

                            otherlv_67=(Token)match(input,KW_GreaterThanSign,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_67, grammarAccess.getMemberAccess().getGreaterThanSignKeyword_2_2_3_3());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_68=(Token)match(input,KW_LeftParenthesis,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_68, grammarAccess.getMemberAccess().getLeftParenthesisKeyword_2_2_4());
                          
                    }
                    // InternalXtend.g:2697:1: ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( ((LA84_0>=KW_Annotation && LA84_0<=KW_LeftParenthesis)||LA84_0==KW_EqualsSignGreaterThanSign||LA84_0==KW_Extension||LA84_0==KW_Create||(LA84_0>=KW_AFTER && LA84_0<=KW_SEPARATOR)||LA84_0==KW_CommercialAt||LA84_0==RULE_ID) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // InternalXtend.g:2697:2: ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )*
                            {
                            // InternalXtend.g:2697:2: ( (lv_parameters_69_0= ruleParameter ) )
                            // InternalXtend.g:2698:1: (lv_parameters_69_0= ruleParameter )
                            {
                            // InternalXtend.g:2698:1: (lv_parameters_69_0= ruleParameter )
                            // InternalXtend.g:2699:3: lv_parameters_69_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getParametersParameterParserRuleCall_2_2_5_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_parameters_69_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_69_0, 
                                      		"org.eclipse.xtend.core.Xtend.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2715:2: (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )*
                            loop83:
                            do {
                                int alt83=2;
                                int LA83_0 = input.LA(1);

                                if ( (LA83_0==KW_Comma) ) {
                                    alt83=1;
                                }


                                switch (alt83) {
                            	case 1 :
                            	    // InternalXtend.g:2715:4: otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) )
                            	    {
                            	    otherlv_70=(Token)match(input,KW_Comma,FOLLOW_43); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_70, grammarAccess.getMemberAccess().getCommaKeyword_2_2_5_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:2719:1: ( (lv_parameters_71_0= ruleParameter ) )
                            	    // InternalXtend.g:2720:1: (lv_parameters_71_0= ruleParameter )
                            	    {
                            	    // InternalXtend.g:2720:1: (lv_parameters_71_0= ruleParameter )
                            	    // InternalXtend.g:2721:3: lv_parameters_71_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getParametersParameterParserRuleCall_2_2_5_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_parameters_71_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_71_0, 
                            	              		"org.eclipse.xtend.core.Xtend.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop83;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_72=(Token)match(input,KW_RightParenthesis,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_72, grammarAccess.getMemberAccess().getRightParenthesisKeyword_2_2_6());
                          
                    }
                    // InternalXtend.g:2741:1: (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==KW_Throws) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalXtend.g:2741:3: otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )*
                            {
                            otherlv_73=(Token)match(input,KW_Throws,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_73, grammarAccess.getMemberAccess().getThrowsKeyword_2_2_7_0());
                                  
                            }
                            // InternalXtend.g:2745:1: ( (lv_exceptions_74_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:2746:1: (lv_exceptions_74_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:2746:1: (lv_exceptions_74_0= ruleJvmTypeReference )
                            // InternalXtend.g:2747:3: lv_exceptions_74_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExceptionsJvmTypeReferenceParserRuleCall_2_2_7_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_exceptions_74_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"exceptions",
                                      		lv_exceptions_74_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2763:2: (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )*
                            loop85:
                            do {
                                int alt85=2;
                                int LA85_0 = input.LA(1);

                                if ( (LA85_0==KW_Comma) ) {
                                    alt85=1;
                                }


                                switch (alt85) {
                            	case 1 :
                            	    // InternalXtend.g:2763:4: otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_75=(Token)match(input,KW_Comma,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_75, grammarAccess.getMemberAccess().getCommaKeyword_2_2_7_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:2767:1: ( (lv_exceptions_76_0= ruleJvmTypeReference ) )
                            	    // InternalXtend.g:2768:1: (lv_exceptions_76_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalXtend.g:2768:1: (lv_exceptions_76_0= ruleJvmTypeReference )
                            	    // InternalXtend.g:2769:3: lv_exceptions_76_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getExceptionsJvmTypeReferenceParserRuleCall_2_2_7_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_exceptions_76_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"exceptions",
                            	              		lv_exceptions_76_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop85;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalXtend.g:2785:6: ( (lv_expression_77_0= ruleXBlockExpression ) )
                    // InternalXtend.g:2786:1: (lv_expression_77_0= ruleXBlockExpression )
                    {
                    // InternalXtend.g:2786:1: (lv_expression_77_0= ruleXBlockExpression )
                    // InternalXtend.g:2787:3: lv_expression_77_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getExpressionXBlockExpressionParserRuleCall_2_2_8_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_77_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_77_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalXtend.g:2804:6: ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' )
                    {
                    // InternalXtend.g:2804:6: ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' )
                    // InternalXtend.g:2804:7: () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}'
                    {
                    // InternalXtend.g:2804:7: ()
                    // InternalXtend.g:2805:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getXtendClassAnnotationInfoAction_2_3_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:2810:2: ( (lv_modifiers_79_0= ruleCommonModifier ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==KW_Package||(LA87_0>=KW_Public && LA87_0<=KW_Transient)) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalXtend.g:2811:1: (lv_modifiers_79_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:2811:1: (lv_modifiers_79_0= ruleCommonModifier )
                    	    // InternalXtend.g:2812:3: lv_modifiers_79_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_modifiers_79_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_79_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);

                    otherlv_80=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_80, grammarAccess.getMemberAccess().getClassKeyword_2_3_2());
                          
                    }
                    // InternalXtend.g:2832:1: ( (lv_name_81_0= ruleValidID ) )
                    // InternalXtend.g:2833:1: (lv_name_81_0= ruleValidID )
                    {
                    // InternalXtend.g:2833:1: (lv_name_81_0= ruleValidID )
                    // InternalXtend.g:2834:3: lv_name_81_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_3_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_name_81_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_81_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:2850:2: (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==KW_LessThanSign) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalXtend.g:2850:4: otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>'
                            {
                            otherlv_82=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_82, grammarAccess.getMemberAccess().getLessThanSignKeyword_2_3_4_0());
                                  
                            }
                            // InternalXtend.g:2854:1: ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) )
                            // InternalXtend.g:2855:1: (lv_typeParameters_83_0= ruleJvmTypeParameter )
                            {
                            // InternalXtend.g:2855:1: (lv_typeParameters_83_0= ruleJvmTypeParameter )
                            // InternalXtend.g:2856:3: lv_typeParameters_83_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_3_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_83_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_83_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2872:2: (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )*
                            loop88:
                            do {
                                int alt88=2;
                                int LA88_0 = input.LA(1);

                                if ( (LA88_0==KW_Comma) ) {
                                    alt88=1;
                                }


                                switch (alt88) {
                            	case 1 :
                            	    // InternalXtend.g:2872:4: otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_84=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_84, grammarAccess.getMemberAccess().getCommaKeyword_2_3_4_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:2876:1: ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) )
                            	    // InternalXtend.g:2877:1: (lv_typeParameters_85_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalXtend.g:2877:1: (lv_typeParameters_85_0= ruleJvmTypeParameter )
                            	    // InternalXtend.g:2878:3: lv_typeParameters_85_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_3_4_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_85_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_85_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop88;
                                }
                            } while (true);

                            otherlv_86=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_86, grammarAccess.getMemberAccess().getGreaterThanSignKeyword_2_3_4_3());
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:2898:3: (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==KW_Extends) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalXtend.g:2898:5: otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) )
                            {
                            otherlv_87=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_87, grammarAccess.getMemberAccess().getExtendsKeyword_2_3_5_0());
                                  
                            }
                            // InternalXtend.g:2902:1: ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) )
                            // InternalXtend.g:2903:1: (lv_extends_88_0= ruleJvmParameterizedTypeReference )
                            {
                            // InternalXtend.g:2903:1: (lv_extends_88_0= ruleJvmParameterizedTypeReference )
                            // InternalXtend.g:2904:3: lv_extends_88_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_12);
                            lv_extends_88_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"extends",
                                      		lv_extends_88_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalXtend.g:2920:4: (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==KW_Implements) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalXtend.g:2920:6: otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            otherlv_89=(Token)match(input,KW_Implements,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_89, grammarAccess.getMemberAccess().getImplementsKeyword_2_3_6_0());
                                  
                            }
                            // InternalXtend.g:2924:1: ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) )
                            // InternalXtend.g:2925:1: (lv_implements_90_0= ruleJvmParameterizedTypeReference )
                            {
                            // InternalXtend.g:2925:1: (lv_implements_90_0= ruleJvmParameterizedTypeReference )
                            // InternalXtend.g:2926:3: lv_implements_90_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_6_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_implements_90_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"implements",
                                      		lv_implements_90_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:2942:2: (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop91:
                            do {
                                int alt91=2;
                                int LA91_0 = input.LA(1);

                                if ( (LA91_0==KW_Comma) ) {
                                    alt91=1;
                                }


                                switch (alt91) {
                            	case 1 :
                            	    // InternalXtend.g:2942:4: otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    otherlv_91=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_91, grammarAccess.getMemberAccess().getCommaKeyword_2_3_6_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:2946:1: ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) )
                            	    // InternalXtend.g:2947:1: (lv_implements_92_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // InternalXtend.g:2947:1: (lv_implements_92_0= ruleJvmParameterizedTypeReference )
                            	    // InternalXtend.g:2948:3: lv_implements_92_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_6_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_implements_92_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"implements",
                            	              		lv_implements_92_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop91;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_93=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_93, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_3_7());
                          
                    }
                    // InternalXtend.g:2968:1: ( (lv_members_94_0= ruleMember ) )*
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==KW_Package||LA93_0==KW_Class||(LA93_0>=KW_Interface && LA93_0<=KW_LeftParenthesis)||LA93_0==KW_EqualsSignGreaterThanSign||LA93_0==KW_Extension||LA93_0==KW_New||(LA93_0>=KW_Public && LA93_0<=KW_Create)||(LA93_0>=KW_AFTER && LA93_0<=KW_SEPARATOR)||LA93_0==KW_CommercialAt||LA93_0==RULE_ID) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // InternalXtend.g:2969:1: (lv_members_94_0= ruleMember )
                    	    {
                    	    // InternalXtend.g:2969:1: (lv_members_94_0= ruleMember )
                    	    // InternalXtend.g:2970:3: lv_members_94_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getMembersMemberParserRuleCall_2_3_8_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_94_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_94_0, 
                    	              		"org.eclipse.xtend.core.Xtend.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);

                    otherlv_95=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_95, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_3_9());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalXtend.g:2991:6: ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' )
                    {
                    // InternalXtend.g:2991:6: ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' )
                    // InternalXtend.g:2991:7: () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}'
                    {
                    // InternalXtend.g:2991:7: ()
                    // InternalXtend.g:2992:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getXtendInterfaceAnnotationInfoAction_2_4_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:2997:2: ( (lv_modifiers_97_0= ruleCommonModifier ) )*
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==KW_Package||(LA94_0>=KW_Public && LA94_0<=KW_Transient)) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // InternalXtend.g:2998:1: (lv_modifiers_97_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:2998:1: (lv_modifiers_97_0= ruleCommonModifier )
                    	    // InternalXtend.g:2999:3: lv_modifiers_97_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_modifiers_97_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_97_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);

                    otherlv_98=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_98, grammarAccess.getMemberAccess().getInterfaceKeyword_2_4_2());
                          
                    }
                    // InternalXtend.g:3019:1: ( (lv_name_99_0= ruleValidID ) )
                    // InternalXtend.g:3020:1: (lv_name_99_0= ruleValidID )
                    {
                    // InternalXtend.g:3020:1: (lv_name_99_0= ruleValidID )
                    // InternalXtend.g:3021:3: lv_name_99_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_4_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_name_99_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_99_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:3037:2: (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )?
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==KW_LessThanSign) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalXtend.g:3037:4: otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>'
                            {
                            otherlv_100=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_100, grammarAccess.getMemberAccess().getLessThanSignKeyword_2_4_4_0());
                                  
                            }
                            // InternalXtend.g:3041:1: ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) )
                            // InternalXtend.g:3042:1: (lv_typeParameters_101_0= ruleJvmTypeParameter )
                            {
                            // InternalXtend.g:3042:1: (lv_typeParameters_101_0= ruleJvmTypeParameter )
                            // InternalXtend.g:3043:3: lv_typeParameters_101_0= ruleJvmTypeParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_4_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_101_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"typeParameters",
                                      		lv_typeParameters_101_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:3059:2: (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )*
                            loop95:
                            do {
                                int alt95=2;
                                int LA95_0 = input.LA(1);

                                if ( (LA95_0==KW_Comma) ) {
                                    alt95=1;
                                }


                                switch (alt95) {
                            	case 1 :
                            	    // InternalXtend.g:3059:4: otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) )
                            	    {
                            	    otherlv_102=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_102, grammarAccess.getMemberAccess().getCommaKeyword_2_4_4_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:3063:1: ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) )
                            	    // InternalXtend.g:3064:1: (lv_typeParameters_103_0= ruleJvmTypeParameter )
                            	    {
                            	    // InternalXtend.g:3064:1: (lv_typeParameters_103_0= ruleJvmTypeParameter )
                            	    // InternalXtend.g:3065:3: lv_typeParameters_103_0= ruleJvmTypeParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getTypeParametersJvmTypeParameterParserRuleCall_2_4_4_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_103_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"typeParameters",
                            	              		lv_typeParameters_103_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop95;
                                }
                            } while (true);

                            otherlv_104=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_104, grammarAccess.getMemberAccess().getGreaterThanSignKeyword_2_4_4_3());
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:3085:3: (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==KW_Extends) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalXtend.g:3085:5: otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )*
                            {
                            otherlv_105=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_105, grammarAccess.getMemberAccess().getExtendsKeyword_2_4_5_0());
                                  
                            }
                            // InternalXtend.g:3089:1: ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) )
                            // InternalXtend.g:3090:1: (lv_extends_106_0= ruleJvmParameterizedTypeReference )
                            {
                            // InternalXtend.g:3090:1: (lv_extends_106_0= ruleJvmParameterizedTypeReference )
                            // InternalXtend.g:3091:3: lv_extends_106_0= ruleJvmParameterizedTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_14);
                            lv_extends_106_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"extends",
                                      		lv_extends_106_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:3107:2: (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )*
                            loop97:
                            do {
                                int alt97=2;
                                int LA97_0 = input.LA(1);

                                if ( (LA97_0==KW_Comma) ) {
                                    alt97=1;
                                }


                                switch (alt97) {
                            	case 1 :
                            	    // InternalXtend.g:3107:4: otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) )
                            	    {
                            	    otherlv_107=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_107, grammarAccess.getMemberAccess().getCommaKeyword_2_4_5_2_0());
                            	          
                            	    }
                            	    // InternalXtend.g:3111:1: ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) )
                            	    // InternalXtend.g:3112:1: (lv_extends_108_0= ruleJvmParameterizedTypeReference )
                            	    {
                            	    // InternalXtend.g:3112:1: (lv_extends_108_0= ruleJvmParameterizedTypeReference )
                            	    // InternalXtend.g:3113:3: lv_extends_108_0= ruleJvmParameterizedTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_extends_108_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"extends",
                            	              		lv_extends_108_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmParameterizedTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop97;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_109=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_109, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_4_6());
                          
                    }
                    // InternalXtend.g:3133:1: ( (lv_members_110_0= ruleMember ) )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==KW_Package||LA99_0==KW_Class||(LA99_0>=KW_Interface && LA99_0<=KW_LeftParenthesis)||LA99_0==KW_EqualsSignGreaterThanSign||LA99_0==KW_Extension||LA99_0==KW_New||(LA99_0>=KW_Public && LA99_0<=KW_Create)||(LA99_0>=KW_AFTER && LA99_0<=KW_SEPARATOR)||LA99_0==KW_CommercialAt||LA99_0==RULE_ID) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // InternalXtend.g:3134:1: (lv_members_110_0= ruleMember )
                    	    {
                    	    // InternalXtend.g:3134:1: (lv_members_110_0= ruleMember )
                    	    // InternalXtend.g:3135:3: lv_members_110_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getMembersMemberParserRuleCall_2_4_7_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_110_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_110_0, 
                    	              		"org.eclipse.xtend.core.Xtend.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);

                    otherlv_111=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_111, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_4_8());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalXtend.g:3156:6: ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' )
                    {
                    // InternalXtend.g:3156:6: ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' )
                    // InternalXtend.g:3156:7: () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}'
                    {
                    // InternalXtend.g:3156:7: ()
                    // InternalXtend.g:3157:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getXtendEnumAnnotationInfoAction_2_5_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:3162:2: ( (lv_modifiers_113_0= ruleCommonModifier ) )*
                    loop100:
                    do {
                        int alt100=2;
                        int LA100_0 = input.LA(1);

                        if ( (LA100_0==KW_Package||(LA100_0>=KW_Public && LA100_0<=KW_Transient)) ) {
                            alt100=1;
                        }


                        switch (alt100) {
                    	case 1 :
                    	    // InternalXtend.g:3163:1: (lv_modifiers_113_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:3163:1: (lv_modifiers_113_0= ruleCommonModifier )
                    	    // InternalXtend.g:3164:3: lv_modifiers_113_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_5_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_modifiers_113_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_113_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop100;
                        }
                    } while (true);

                    otherlv_114=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_114, grammarAccess.getMemberAccess().getEnumKeyword_2_5_2());
                          
                    }
                    // InternalXtend.g:3184:1: ( (lv_name_115_0= ruleValidID ) )
                    // InternalXtend.g:3185:1: (lv_name_115_0= ruleValidID )
                    {
                    // InternalXtend.g:3185:1: (lv_name_115_0= ruleValidID )
                    // InternalXtend.g:3186:3: lv_name_115_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_5_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_115_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_115_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_116=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_116, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_5_4());
                          
                    }
                    // InternalXtend.g:3206:1: ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==KW_Annotation||LA102_0==KW_Create||(LA102_0>=KW_AFTER && LA102_0<=KW_SEPARATOR)||LA102_0==RULE_ID) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            // InternalXtend.g:3206:2: ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )*
                            {
                            // InternalXtend.g:3206:2: ( (lv_members_117_0= ruleXtendEnumLiteral ) )
                            // InternalXtend.g:3207:1: (lv_members_117_0= ruleXtendEnumLiteral )
                            {
                            // InternalXtend.g:3207:1: (lv_members_117_0= ruleXtendEnumLiteral )
                            // InternalXtend.g:3208:3: lv_members_117_0= ruleXtendEnumLiteral
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getMemberAccess().getMembersXtendEnumLiteralParserRuleCall_2_5_5_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_members_117_0=ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMemberRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"members",
                                      		lv_members_117_0, 
                                      		"org.eclipse.xtend.core.Xtend.XtendEnumLiteral");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:3224:2: (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )*
                            loop101:
                            do {
                                int alt101=2;
                                int LA101_0 = input.LA(1);

                                if ( (LA101_0==KW_Comma) ) {
                                    alt101=1;
                                }


                                switch (alt101) {
                            	case 1 :
                            	    // InternalXtend.g:3224:4: otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) )
                            	    {
                            	    otherlv_118=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_118, grammarAccess.getMemberAccess().getCommaKeyword_2_5_5_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:3228:1: ( (lv_members_119_0= ruleXtendEnumLiteral ) )
                            	    // InternalXtend.g:3229:1: (lv_members_119_0= ruleXtendEnumLiteral )
                            	    {
                            	    // InternalXtend.g:3229:1: (lv_members_119_0= ruleXtendEnumLiteral )
                            	    // InternalXtend.g:3230:3: lv_members_119_0= ruleXtendEnumLiteral
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberAccess().getMembersXtendEnumLiteralParserRuleCall_2_5_5_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    lv_members_119_0=ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"members",
                            	              		lv_members_119_0, 
                            	              		"org.eclipse.xtend.core.Xtend.XtendEnumLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop101;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalXtend.g:3246:6: (otherlv_120= ';' )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==KW_Semicolon) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // InternalXtend.g:3246:8: otherlv_120= ';'
                            {
                            otherlv_120=(Token)match(input,KW_Semicolon,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_120, grammarAccess.getMemberAccess().getSemicolonKeyword_2_5_6());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_121=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_121, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_5_7());
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalXtend.g:3255:6: ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' )
                    {
                    // InternalXtend.g:3255:6: ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' )
                    // InternalXtend.g:3255:7: () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}'
                    {
                    // InternalXtend.g:3255:7: ()
                    // InternalXtend.g:3256:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getMemberAccess().getXtendAnnotationTypeAnnotationInfoAction_2_6_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:3261:2: ( (lv_modifiers_123_0= ruleCommonModifier ) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==KW_Package||(LA104_0>=KW_Public && LA104_0<=KW_Transient)) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // InternalXtend.g:3262:1: (lv_modifiers_123_0= ruleCommonModifier )
                    	    {
                    	    // InternalXtend.g:3262:1: (lv_modifiers_123_0= ruleCommonModifier )
                    	    // InternalXtend.g:3263:3: lv_modifiers_123_0= ruleCommonModifier
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getModifiersCommonModifierParserRuleCall_2_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_modifiers_123_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"modifiers",
                    	              		lv_modifiers_123_0, 
                    	              		"org.eclipse.xtend.core.Xtend.CommonModifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);

                    otherlv_124=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_124, grammarAccess.getMemberAccess().getAnnotationKeyword_2_6_2());
                          
                    }
                    // InternalXtend.g:3283:1: ( (lv_name_125_0= ruleValidID ) )
                    // InternalXtend.g:3284:1: (lv_name_125_0= ruleValidID )
                    {
                    // InternalXtend.g:3284:1: (lv_name_125_0= ruleValidID )
                    // InternalXtend.g:3285:3: lv_name_125_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberAccess().getNameValidIDParserRuleCall_2_6_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_125_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_125_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_126=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_126, grammarAccess.getMemberAccess().getLeftCurlyBracketKeyword_2_6_4());
                          
                    }
                    // InternalXtend.g:3305:1: ( (lv_members_127_0= ruleAnnotationField ) )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==KW_Package||LA105_0==KW_Class||(LA105_0>=KW_Interface && LA105_0<=KW_LeftParenthesis)||LA105_0==KW_EqualsSignGreaterThanSign||(LA105_0>=KW_Public && LA105_0<=KW_Var)||LA105_0==KW_Create||(LA105_0>=KW_AFTER && LA105_0<=KW_SEPARATOR)||LA105_0==KW_CommercialAt||LA105_0==RULE_ID) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // InternalXtend.g:3306:1: (lv_members_127_0= ruleAnnotationField )
                    	    {
                    	    // InternalXtend.g:3306:1: (lv_members_127_0= ruleAnnotationField )
                    	    // InternalXtend.g:3307:3: lv_members_127_0= ruleAnnotationField
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberAccess().getMembersAnnotationFieldParserRuleCall_2_6_5_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_members_127_0=ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_127_0, 
                    	              		"org.eclipse.xtend.core.Xtend.AnnotationField");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);

                    otherlv_128=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_128, grammarAccess.getMemberAccess().getRightCurlyBracketKeyword_2_6_6());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMember"


    // $ANTLR start "entryRuleTypeReferenceNoTypeArgs"
    // InternalXtend.g:3335:1: entryRuleTypeReferenceNoTypeArgs returns [EObject current=null] : iv_ruleTypeReferenceNoTypeArgs= ruleTypeReferenceNoTypeArgs EOF ;
    public final EObject entryRuleTypeReferenceNoTypeArgs() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReferenceNoTypeArgs = null;


        try {
            // InternalXtend.g:3336:2: (iv_ruleTypeReferenceNoTypeArgs= ruleTypeReferenceNoTypeArgs EOF )
            // InternalXtend.g:3337:2: iv_ruleTypeReferenceNoTypeArgs= ruleTypeReferenceNoTypeArgs EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceNoTypeArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceNoTypeArgs=ruleTypeReferenceNoTypeArgs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceNoTypeArgs; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReferenceNoTypeArgs"


    // $ANTLR start "ruleTypeReferenceNoTypeArgs"
    // InternalXtend.g:3344:1: ruleTypeReferenceNoTypeArgs returns [EObject current=null] : ( ( ruleQualifiedName ) ) ;
    public final EObject ruleTypeReferenceNoTypeArgs() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            // InternalXtend.g:3347:28: ( ( ( ruleQualifiedName ) ) )
            // InternalXtend.g:3348:1: ( ( ruleQualifiedName ) )
            {
            // InternalXtend.g:3348:1: ( ( ruleQualifiedName ) )
            // InternalXtend.g:3349:1: ( ruleQualifiedName )
            {
            // InternalXtend.g:3349:1: ( ruleQualifiedName )
            // InternalXtend.g:3350:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getTypeReferenceNoTypeArgsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeReferenceNoTypeArgsAccess().getTypeJvmTypeCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReferenceNoTypeArgs"


    // $ANTLR start "entryRuleTypeReferenceWithTypeArgs"
    // InternalXtend.g:3371:1: entryRuleTypeReferenceWithTypeArgs returns [EObject current=null] : iv_ruleTypeReferenceWithTypeArgs= ruleTypeReferenceWithTypeArgs EOF ;
    public final EObject entryRuleTypeReferenceWithTypeArgs() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReferenceWithTypeArgs = null;


        try {
            // InternalXtend.g:3372:2: (iv_ruleTypeReferenceWithTypeArgs= ruleTypeReferenceWithTypeArgs EOF )
            // InternalXtend.g:3373:2: iv_ruleTypeReferenceWithTypeArgs= ruleTypeReferenceWithTypeArgs EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceWithTypeArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceWithTypeArgs=ruleTypeReferenceWithTypeArgs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceWithTypeArgs; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReferenceWithTypeArgs"


    // $ANTLR start "ruleTypeReferenceWithTypeArgs"
    // InternalXtend.g:3380:1: ruleTypeReferenceWithTypeArgs returns [EObject current=null] : ( (this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | (this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | this_XFunctionTypeRef_6= ruleXFunctionTypeRef ) ;
    public final EObject ruleTypeReferenceWithTypeArgs() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeReferenceWithTypeArgs_0 = null;

        EObject this_TypeReferenceNoTypeArgs_3 = null;

        EObject this_XFunctionTypeRef_6 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:3383:28: ( ( (this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | (this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | this_XFunctionTypeRef_6= ruleXFunctionTypeRef ) )
            // InternalXtend.g:3384:1: ( (this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | (this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | this_XFunctionTypeRef_6= ruleXFunctionTypeRef )
            {
            // InternalXtend.g:3384:1: ( (this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | (this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | this_XFunctionTypeRef_6= ruleXFunctionTypeRef )
            int alt109=3;
            alt109 = dfa109.predict(input);
            switch (alt109) {
                case 1 :
                    // InternalXtend.g:3384:2: (this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalXtend.g:3384:2: (this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalXtend.g:3385:5: this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeReferenceWithTypeArgsAccess().getParameterizedTypeReferenceWithTypeArgsParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_49);
                    this_ParameterizedTypeReferenceWithTypeArgs_0=ruleParameterizedTypeReferenceWithTypeArgs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ParameterizedTypeReferenceWithTypeArgs_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalXtend.g:3393:1: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==KW_LeftSquareBracket) && (synpred5_InternalXtend())) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // InternalXtend.g:3393:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalXtend.g:3394:24: ( () ruleArrayBrackets )
                    	    // InternalXtend.g:3394:25: () ruleArrayBrackets
                    	    {
                    	    // InternalXtend.g:3394:25: ()
                    	    // InternalXtend.g:3395:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getTypeReferenceWithTypeArgsAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTypeReferenceWithTypeArgsAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_49);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop107;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:3409:6: (this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ )
                    {
                    // InternalXtend.g:3409:6: (this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ )
                    // InternalXtend.g:3410:5: this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeReferenceWithTypeArgsAccess().getTypeReferenceNoTypeArgsParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_50);
                    this_TypeReferenceNoTypeArgs_3=ruleTypeReferenceNoTypeArgs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypeReferenceNoTypeArgs_3; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalXtend.g:3418:1: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+
                    int cnt108=0;
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==KW_LeftSquareBracket) && (synpred6_InternalXtend())) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // InternalXtend.g:3418:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalXtend.g:3419:24: ( () ruleArrayBrackets )
                    	    // InternalXtend.g:3419:25: () ruleArrayBrackets
                    	    {
                    	    // InternalXtend.g:3419:25: ()
                    	    // InternalXtend.g:3420:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getTypeReferenceWithTypeArgsAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_1_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTypeReferenceWithTypeArgsAccess().getArrayBracketsParserRuleCall_1_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_49);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt108 >= 1 ) break loop108;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(108, input);
                                throw eee;
                        }
                        cnt108++;
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalXtend.g:3435:5: this_XFunctionTypeRef_6= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeReferenceWithTypeArgsAccess().getXFunctionTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_6=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFunctionTypeRef_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReferenceWithTypeArgs"


    // $ANTLR start "entryRuleParameterizedTypeReferenceWithTypeArgs"
    // InternalXtend.g:3451:1: entryRuleParameterizedTypeReferenceWithTypeArgs returns [EObject current=null] : iv_ruleParameterizedTypeReferenceWithTypeArgs= ruleParameterizedTypeReferenceWithTypeArgs EOF ;
    public final EObject entryRuleParameterizedTypeReferenceWithTypeArgs() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeReferenceWithTypeArgs = null;


        try {
            // InternalXtend.g:3452:2: (iv_ruleParameterizedTypeReferenceWithTypeArgs= ruleParameterizedTypeReferenceWithTypeArgs EOF )
            // InternalXtend.g:3453:2: iv_ruleParameterizedTypeReferenceWithTypeArgs= ruleParameterizedTypeReferenceWithTypeArgs EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeReferenceWithTypeArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeReferenceWithTypeArgs=ruleParameterizedTypeReferenceWithTypeArgs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeReferenceWithTypeArgs; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterizedTypeReferenceWithTypeArgs"


    // $ANTLR start "ruleParameterizedTypeReferenceWithTypeArgs"
    // InternalXtend.g:3460:1: ruleParameterizedTypeReferenceWithTypeArgs returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* ) ) ;
    public final EObject ruleParameterizedTypeReferenceWithTypeArgs() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:3463:28: ( ( ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* ) ) )
            // InternalXtend.g:3464:1: ( ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* ) )
            {
            // InternalXtend.g:3464:1: ( ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* ) )
            // InternalXtend.g:3464:2: ( ( ruleQualifiedName ) ) (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )
            {
            // InternalXtend.g:3464:2: ( ( ruleQualifiedName ) )
            // InternalXtend.g:3465:1: ( ruleQualifiedName )
            {
            // InternalXtend.g:3465:1: ( ruleQualifiedName )
            // InternalXtend.g:3466:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedTypeReferenceWithTypeArgsRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getTypeJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_51);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:3479:2: (otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )
            // InternalXtend.g:3479:4: otherlv_1= '<' ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
            {
            otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getLessThanSignKeyword_1_0());
                  
            }
            // InternalXtend.g:3483:1: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
            // InternalXtend.g:3484:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
            {
            // InternalXtend.g:3484:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
            // InternalXtend.g:3485:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_10);
            lv_arguments_2_0=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedTypeReferenceWithTypeArgsRule());
              	        }
                     		add(
                     			current, 
                     			"arguments",
                      		lv_arguments_2_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:3501:2: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==KW_Comma) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalXtend.g:3501:4: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
            	    {
            	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getCommaKeyword_1_2_0());
            	          
            	    }
            	    // InternalXtend.g:3505:1: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
            	    // InternalXtend.g:3506:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
            	    {
            	    // InternalXtend.g:3506:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
            	    // InternalXtend.g:3507:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_10);
            	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeReferenceWithTypeArgsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arguments",
            	              		lv_arguments_4_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getGreaterThanSignKeyword_1_3());
                  
            }
            // InternalXtend.g:3527:1: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==KW_FullStop) && (synpred7_InternalXtend())) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalXtend.g:3527:2: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
            	    {
            	    // InternalXtend.g:3527:2: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
            	    // InternalXtend.g:3527:3: ( ( () '.' ) )=> ( () otherlv_7= '.' )
            	    {
            	    // InternalXtend.g:3529:5: ( () otherlv_7= '.' )
            	    // InternalXtend.g:3529:6: () otherlv_7= '.'
            	    {
            	    // InternalXtend.g:3529:6: ()
            	    // InternalXtend.g:3530:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_7=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_7, grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getFullStopKeyword_1_4_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // InternalXtend.g:3539:3: ( ( ruleValidID ) )
            	    // InternalXtend.g:3540:1: ( ruleValidID )
            	    {
            	    // InternalXtend.g:3540:1: ( ruleValidID )
            	    // InternalXtend.g:3541:3: ruleValidID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getParameterizedTypeReferenceWithTypeArgsRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getTypeJvmTypeCrossReference_1_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalXtend.g:3554:2: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
            	    int alt112=2;
            	    alt112 = dfa112.predict(input);
            	    switch (alt112) {
            	        case 1 :
            	            // InternalXtend.g:3554:3: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
            	            {
            	            // InternalXtend.g:3554:3: ( ( '<' )=>otherlv_9= '<' )
            	            // InternalXtend.g:3554:4: ( '<' )=>otherlv_9= '<'
            	            {
            	            otherlv_9=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_9, grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getLessThanSignKeyword_1_4_2_0());
            	                  
            	            }

            	            }

            	            // InternalXtend.g:3559:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
            	            // InternalXtend.g:3560:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalXtend.g:3560:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
            	            // InternalXtend.g:3561:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_10);
            	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getParameterizedTypeReferenceWithTypeArgsRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"arguments",
            	                      		lv_arguments_10_0, 
            	                      		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }

            	            // InternalXtend.g:3577:2: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop111:
            	            do {
            	                int alt111=2;
            	                int LA111_0 = input.LA(1);

            	                if ( (LA111_0==KW_Comma) ) {
            	                    alt111=1;
            	                }


            	                switch (alt111) {
            	            	case 1 :
            	            	    // InternalXtend.g:3577:4: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	          	newLeafNode(otherlv_11, grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getCommaKeyword_1_4_2_2_0());
            	            	          
            	            	    }
            	            	    // InternalXtend.g:3581:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalXtend.g:3582:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalXtend.g:3582:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
            	            	    // InternalXtend.g:3583:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {
            	            	       
            	            	      	        newCompositeNode(grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_10);
            	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeReferenceWithTypeArgsRule());
            	            	      	        }
            	            	             		add(
            	            	             			current, 
            	            	             			"arguments",
            	            	              		lv_arguments_12_0, 
            	            	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      	        afterParserOrEnumRuleCall();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop111;
            	                }
            	            } while (true);

            	            otherlv_13=(Token)match(input,KW_GreaterThanSign,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_13, grammarAccess.getParameterizedTypeReferenceWithTypeArgsAccess().getGreaterThanSignKeyword_1_4_2_3());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterizedTypeReferenceWithTypeArgs"


    // $ANTLR start "entryRuleFunctionID"
    // InternalXtend.g:3611:1: entryRuleFunctionID returns [String current=null] : iv_ruleFunctionID= ruleFunctionID EOF ;
    public final String entryRuleFunctionID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFunctionID = null;


        try {
            // InternalXtend.g:3612:2: (iv_ruleFunctionID= ruleFunctionID EOF )
            // InternalXtend.g:3613:2: iv_ruleFunctionID= ruleFunctionID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionID=ruleFunctionID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionID"


    // $ANTLR start "ruleFunctionID"
    // InternalXtend.g:3620:1: ruleFunctionID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | this_Operators_1= ruleOperators ) ;
    public final AntlrDatatypeRuleToken ruleFunctionID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_Operators_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:3623:28: ( (this_ValidID_0= ruleValidID | this_Operators_1= ruleOperators ) )
            // InternalXtend.g:3624:1: (this_ValidID_0= ruleValidID | this_Operators_1= ruleOperators )
            {
            // InternalXtend.g:3624:1: (this_ValidID_0= ruleValidID | this_Operators_1= ruleOperators )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==KW_Annotation||LA114_0==KW_Create||(LA114_0>=KW_AFTER && LA114_0<=KW_SEPARATOR)||LA114_0==RULE_ID) ) {
                alt114=1;
            }
            else if ( (LA114_0==KW_LessThanSign||LA114_0==KW_GreaterThanSign||LA114_0==KW_EqualsSignGreaterThanSign||(LA114_0>=KW_PlusSignEqualsSign && LA114_0<=KW_ExclamationMarkEqualsSignEqualsSign)||(LA114_0>=KW_HyphenMinusGreaterThanSign && LA114_0<=KW_ExclamationMark)||(LA114_0>=KW_PlusSignPlusSign && LA114_0<=KW_HyphenMinusHyphenMinus)) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalXtend.g:3625:5: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionIDAccess().getValidIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ValidID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:3637:5: this_Operators_1= ruleOperators
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionIDAccess().getOperatorsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Operators_1=ruleOperators();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Operators_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionID"


    // $ANTLR start "entryRuleOperators"
    // InternalXtend.g:3655:1: entryRuleOperators returns [String current=null] : iv_ruleOperators= ruleOperators EOF ;
    public final String entryRuleOperators() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOperators = null;


        try {
            // InternalXtend.g:3656:2: (iv_ruleOperators= ruleOperators EOF )
            // InternalXtend.g:3657:2: iv_ruleOperators= ruleOperators EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperatorsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperators=ruleOperators();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperators.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperators"


    // $ANTLR start "ruleOperators"
    // InternalXtend.g:3664:1: ruleOperators returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_OpMultiAssign_0= ruleOpMultiAssign | this_OpOr_1= ruleOpOr | this_OpAnd_2= ruleOpAnd | this_OpEquality_3= ruleOpEquality | this_OpCompare_4= ruleOpCompare | this_OpOther_5= ruleOpOther | this_OpMulti_6= ruleOpMulti | this_OpUnary_7= ruleOpUnary | this_OpPostfix_8= ruleOpPostfix ) ;
    public final AntlrDatatypeRuleToken ruleOperators() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_OpMultiAssign_0 = null;

        AntlrDatatypeRuleToken this_OpOr_1 = null;

        AntlrDatatypeRuleToken this_OpAnd_2 = null;

        AntlrDatatypeRuleToken this_OpEquality_3 = null;

        AntlrDatatypeRuleToken this_OpCompare_4 = null;

        AntlrDatatypeRuleToken this_OpOther_5 = null;

        AntlrDatatypeRuleToken this_OpMulti_6 = null;

        AntlrDatatypeRuleToken this_OpUnary_7 = null;

        AntlrDatatypeRuleToken this_OpPostfix_8 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:3667:28: ( (this_OpMultiAssign_0= ruleOpMultiAssign | this_OpOr_1= ruleOpOr | this_OpAnd_2= ruleOpAnd | this_OpEquality_3= ruleOpEquality | this_OpCompare_4= ruleOpCompare | this_OpOther_5= ruleOpOther | this_OpMulti_6= ruleOpMulti | this_OpUnary_7= ruleOpUnary | this_OpPostfix_8= ruleOpPostfix ) )
            // InternalXtend.g:3668:1: (this_OpMultiAssign_0= ruleOpMultiAssign | this_OpOr_1= ruleOpOr | this_OpAnd_2= ruleOpAnd | this_OpEquality_3= ruleOpEquality | this_OpCompare_4= ruleOpCompare | this_OpOther_5= ruleOpOther | this_OpMulti_6= ruleOpMulti | this_OpUnary_7= ruleOpUnary | this_OpPostfix_8= ruleOpPostfix )
            {
            // InternalXtend.g:3668:1: (this_OpMultiAssign_0= ruleOpMultiAssign | this_OpOr_1= ruleOpOr | this_OpAnd_2= ruleOpAnd | this_OpEquality_3= ruleOpEquality | this_OpCompare_4= ruleOpCompare | this_OpOther_5= ruleOpOther | this_OpMulti_6= ruleOpMulti | this_OpUnary_7= ruleOpUnary | this_OpPostfix_8= ruleOpPostfix )
            int alt115=9;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // InternalXtend.g:3669:5: this_OpMultiAssign_0= ruleOpMultiAssign
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpMultiAssignParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpMultiAssign_0=ruleOpMultiAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpMultiAssign_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:3681:5: this_OpOr_1= ruleOpOr
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpOrParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpOr_1=ruleOpOr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpOr_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:3693:5: this_OpAnd_2= ruleOpAnd
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpAndParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpAnd_2=ruleOpAnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpAnd_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:3705:5: this_OpEquality_3= ruleOpEquality
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpEqualityParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpEquality_3=ruleOpEquality();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpEquality_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalXtend.g:3717:5: this_OpCompare_4= ruleOpCompare
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpCompareParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpCompare_4=ruleOpCompare();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpCompare_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalXtend.g:3729:5: this_OpOther_5= ruleOpOther
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpOtherParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpOther_5=ruleOpOther();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpOther_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalXtend.g:3741:5: this_OpMulti_6= ruleOpMulti
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpMultiParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpMulti_6=ruleOpMulti();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpMulti_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalXtend.g:3753:5: this_OpUnary_7= ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpUnaryParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpUnary_7=ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpUnary_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalXtend.g:3765:5: this_OpPostfix_8= ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOperatorsAccess().getOpPostfixParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OpPostfix_8=ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OpPostfix_8);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperators"


    // $ANTLR start "entryRuleXtendEnumLiteral"
    // InternalXtend.g:3783:1: entryRuleXtendEnumLiteral returns [EObject current=null] : iv_ruleXtendEnumLiteral= ruleXtendEnumLiteral EOF ;
    public final EObject entryRuleXtendEnumLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXtendEnumLiteral = null;


        try {
            // InternalXtend.g:3784:2: (iv_ruleXtendEnumLiteral= ruleXtendEnumLiteral EOF )
            // InternalXtend.g:3785:2: iv_ruleXtendEnumLiteral= ruleXtendEnumLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXtendEnumLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXtendEnumLiteral=ruleXtendEnumLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXtendEnumLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXtendEnumLiteral"


    // $ANTLR start "ruleXtendEnumLiteral"
    // InternalXtend.g:3792:1: ruleXtendEnumLiteral returns [EObject current=null] : ( (lv_name_0_0= ruleValidID ) ) ;
    public final EObject ruleXtendEnumLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:3795:28: ( ( (lv_name_0_0= ruleValidID ) ) )
            // InternalXtend.g:3796:1: ( (lv_name_0_0= ruleValidID ) )
            {
            // InternalXtend.g:3796:1: ( (lv_name_0_0= ruleValidID ) )
            // InternalXtend.g:3797:1: (lv_name_0_0= ruleValidID )
            {
            // InternalXtend.g:3797:1: (lv_name_0_0= ruleValidID )
            // InternalXtend.g:3798:3: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXtendEnumLiteralAccess().getNameValidIDParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXtendEnumLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"org.eclipse.xtend.core.Xtend.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXtendEnumLiteral"


    // $ANTLR start "entryRuleCommonModifier"
    // InternalXtend.g:3822:1: entryRuleCommonModifier returns [String current=null] : iv_ruleCommonModifier= ruleCommonModifier EOF ;
    public final String entryRuleCommonModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCommonModifier = null;


        try {
            // InternalXtend.g:3823:2: (iv_ruleCommonModifier= ruleCommonModifier EOF )
            // InternalXtend.g:3824:2: iv_ruleCommonModifier= ruleCommonModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommonModifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommonModifier=ruleCommonModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommonModifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommonModifier"


    // $ANTLR start "ruleCommonModifier"
    // InternalXtend.g:3831:1: ruleCommonModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'package' | kw= 'abstract' | kw= 'static' | kw= 'dispatch' | kw= 'final' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' ) ;
    public final AntlrDatatypeRuleToken ruleCommonModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:3834:28: ( (kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'package' | kw= 'abstract' | kw= 'static' | kw= 'dispatch' | kw= 'final' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' ) )
            // InternalXtend.g:3835:1: (kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'package' | kw= 'abstract' | kw= 'static' | kw= 'dispatch' | kw= 'final' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' )
            {
            // InternalXtend.g:3835:1: (kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'package' | kw= 'abstract' | kw= 'static' | kw= 'dispatch' | kw= 'final' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' )
            int alt116=13;
            switch ( input.LA(1) ) {
            case KW_Public:
                {
                alt116=1;
                }
                break;
            case KW_Private:
                {
                alt116=2;
                }
                break;
            case KW_Protected:
                {
                alt116=3;
                }
                break;
            case KW_Package:
                {
                alt116=4;
                }
                break;
            case KW_Abstract:
                {
                alt116=5;
                }
                break;
            case KW_Static:
                {
                alt116=6;
                }
                break;
            case KW_Dispatch:
                {
                alt116=7;
                }
                break;
            case KW_Final:
                {
                alt116=8;
                }
                break;
            case KW_Strictfp:
                {
                alt116=9;
                }
                break;
            case KW_Native:
                {
                alt116=10;
                }
                break;
            case KW_Volatile:
                {
                alt116=11;
                }
                break;
            case KW_Synchronized:
                {
                alt116=12;
                }
                break;
            case KW_Transient:
                {
                alt116=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }

            switch (alt116) {
                case 1 :
                    // InternalXtend.g:3836:2: kw= 'public'
                    {
                    kw=(Token)match(input,KW_Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getPublicKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:3843:2: kw= 'private'
                    {
                    kw=(Token)match(input,KW_Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getPrivateKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:3850:2: kw= 'protected'
                    {
                    kw=(Token)match(input,KW_Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getProtectedKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:3857:2: kw= 'package'
                    {
                    kw=(Token)match(input,KW_Package,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getPackageKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalXtend.g:3864:2: kw= 'abstract'
                    {
                    kw=(Token)match(input,KW_Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getAbstractKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalXtend.g:3871:2: kw= 'static'
                    {
                    kw=(Token)match(input,KW_Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getStaticKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalXtend.g:3878:2: kw= 'dispatch'
                    {
                    kw=(Token)match(input,KW_Dispatch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getDispatchKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalXtend.g:3885:2: kw= 'final'
                    {
                    kw=(Token)match(input,KW_Final,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getFinalKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalXtend.g:3892:2: kw= 'strictfp'
                    {
                    kw=(Token)match(input,KW_Strictfp,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getStrictfpKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalXtend.g:3899:2: kw= 'native'
                    {
                    kw=(Token)match(input,KW_Native,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getNativeKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalXtend.g:3906:2: kw= 'volatile'
                    {
                    kw=(Token)match(input,KW_Volatile,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getVolatileKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalXtend.g:3913:2: kw= 'synchronized'
                    {
                    kw=(Token)match(input,KW_Synchronized,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getSynchronizedKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // InternalXtend.g:3920:2: kw= 'transient'
                    {
                    kw=(Token)match(input,KW_Transient,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCommonModifierAccess().getTransientKeyword_12()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommonModifier"


    // $ANTLR start "entryRuleFieldModifier"
    // InternalXtend.g:3933:1: entryRuleFieldModifier returns [String current=null] : iv_ruleFieldModifier= ruleFieldModifier EOF ;
    public final String entryRuleFieldModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFieldModifier = null;


        try {
            // InternalXtend.g:3934:2: (iv_ruleFieldModifier= ruleFieldModifier EOF )
            // InternalXtend.g:3935:2: iv_ruleFieldModifier= ruleFieldModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldModifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldModifier=ruleFieldModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldModifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldModifier"


    // $ANTLR start "ruleFieldModifier"
    // InternalXtend.g:3942:1: ruleFieldModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'val' | kw= 'var' ) ;
    public final AntlrDatatypeRuleToken ruleFieldModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:3945:28: ( (kw= 'val' | kw= 'var' ) )
            // InternalXtend.g:3946:1: (kw= 'val' | kw= 'var' )
            {
            // InternalXtend.g:3946:1: (kw= 'val' | kw= 'var' )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==KW_Val) ) {
                alt117=1;
            }
            else if ( (LA117_0==KW_Var) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // InternalXtend.g:3947:2: kw= 'val'
                    {
                    kw=(Token)match(input,KW_Val,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFieldModifierAccess().getValKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:3954:2: kw= 'var'
                    {
                    kw=(Token)match(input,KW_Var,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFieldModifierAccess().getVarKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldModifier"


    // $ANTLR start "entryRuleMethodModifier"
    // InternalXtend.g:3967:1: entryRuleMethodModifier returns [String current=null] : iv_ruleMethodModifier= ruleMethodModifier EOF ;
    public final String entryRuleMethodModifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMethodModifier = null;


        try {
            // InternalXtend.g:3968:2: (iv_ruleMethodModifier= ruleMethodModifier EOF )
            // InternalXtend.g:3969:2: iv_ruleMethodModifier= ruleMethodModifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodModifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodModifier=ruleMethodModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodModifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodModifier"


    // $ANTLR start "ruleMethodModifier"
    // InternalXtend.g:3976:1: ruleMethodModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'def' | kw= 'override' ) ;
    public final AntlrDatatypeRuleToken ruleMethodModifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:3979:28: ( (kw= 'def' | kw= 'override' ) )
            // InternalXtend.g:3980:1: (kw= 'def' | kw= 'override' )
            {
            // InternalXtend.g:3980:1: (kw= 'def' | kw= 'override' )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==KW_Def) ) {
                alt118=1;
            }
            else if ( (LA118_0==KW_Override) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // InternalXtend.g:3981:2: kw= 'def'
                    {
                    kw=(Token)match(input,KW_Def,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMethodModifierAccess().getDefKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:3988:2: kw= 'override'
                    {
                    kw=(Token)match(input,KW_Override,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMethodModifierAccess().getOverrideKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodModifier"


    // $ANTLR start "entryRuleCreateExtensionInfo"
    // InternalXtend.g:4001:1: entryRuleCreateExtensionInfo returns [EObject current=null] : iv_ruleCreateExtensionInfo= ruleCreateExtensionInfo EOF ;
    public final EObject entryRuleCreateExtensionInfo() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCreateExtensionInfo = null;


        try {
            // InternalXtend.g:4002:2: (iv_ruleCreateExtensionInfo= ruleCreateExtensionInfo EOF )
            // InternalXtend.g:4003:2: iv_ruleCreateExtensionInfo= ruleCreateExtensionInfo EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCreateExtensionInfoRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCreateExtensionInfo=ruleCreateExtensionInfo();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCreateExtensionInfo; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCreateExtensionInfo"


    // $ANTLR start "ruleCreateExtensionInfo"
    // InternalXtend.g:4010:1: ruleCreateExtensionInfo returns [EObject current=null] : (otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) ) ) ;
    public final EObject ruleCreateExtensionInfo() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_createExpression_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:4013:28: ( (otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) ) ) )
            // InternalXtend.g:4014:1: (otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) ) )
            {
            // InternalXtend.g:4014:1: (otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) ) )
            // InternalXtend.g:4014:3: otherlv_0= 'create' ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )? ( (lv_createExpression_3_0= ruleXExpression ) )
            {
            otherlv_0=(Token)match(input,KW_Create,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCreateExtensionInfoAccess().getCreateKeyword_0());
                  
            }
            // InternalXtend.g:4018:1: ( ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':' )?
            int alt119=2;
            switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA119_1 = input.LA(2);

                    if ( (LA119_1==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_Create:
                    {
                    int LA119_2 = input.LA(2);

                    if ( (LA119_2==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_Annotation:
                    {
                    int LA119_3 = input.LA(2);

                    if ( (LA119_3==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_AFTER:
                    {
                    int LA119_4 = input.LA(2);

                    if ( (LA119_4==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA119_5 = input.LA(2);

                    if ( (LA119_5==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA119_6 = input.LA(2);

                    if ( (LA119_6==KW_Colon) ) {
                        alt119=1;
                    }
                    }
                    break;
            }

            switch (alt119) {
                case 1 :
                    // InternalXtend.g:4018:2: ( (lv_name_1_0= ruleValidID ) ) otherlv_2= ':'
                    {
                    // InternalXtend.g:4018:2: ( (lv_name_1_0= ruleValidID ) )
                    // InternalXtend.g:4019:1: (lv_name_1_0= ruleValidID )
                    {
                    // InternalXtend.g:4019:1: (lv_name_1_0= ruleValidID )
                    // InternalXtend.g:4020:3: lv_name_1_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCreateExtensionInfoAccess().getNameValidIDParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_55);
                    lv_name_1_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCreateExtensionInfoRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"org.eclipse.xtend.core.Xtend.ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getCreateExtensionInfoAccess().getColonKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalXtend.g:4040:3: ( (lv_createExpression_3_0= ruleXExpression ) )
            // InternalXtend.g:4041:1: (lv_createExpression_3_0= ruleXExpression )
            {
            // InternalXtend.g:4041:1: (lv_createExpression_3_0= ruleXExpression )
            // InternalXtend.g:4042:3: lv_createExpression_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCreateExtensionInfoAccess().getCreateExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_createExpression_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCreateExtensionInfoRule());
              	        }
                     		set(
                     			current, 
                     			"createExpression",
                      		lv_createExpression_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCreateExtensionInfo"


    // $ANTLR start "entryRuleValidID"
    // InternalXtend.g:4066:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalXtend.g:4067:2: (iv_ruleValidID= ruleValidID EOF )
            // InternalXtend.g:4068:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalXtend.g:4075:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | kw= 'create' | kw= 'annotation' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' ) ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:4078:28: ( (this_ID_0= RULE_ID | kw= 'create' | kw= 'annotation' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' ) )
            // InternalXtend.g:4079:1: (this_ID_0= RULE_ID | kw= 'create' | kw= 'annotation' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' )
            {
            // InternalXtend.g:4079:1: (this_ID_0= RULE_ID | kw= 'create' | kw= 'annotation' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' )
            int alt120=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt120=1;
                }
                break;
            case KW_Create:
                {
                alt120=2;
                }
                break;
            case KW_Annotation:
                {
                alt120=3;
                }
                break;
            case KW_AFTER:
                {
                alt120=4;
                }
                break;
            case KW_BEFORE:
                {
                alt120=5;
                }
                break;
            case KW_SEPARATOR:
                {
                alt120=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }

            switch (alt120) {
                case 1 :
                    // InternalXtend.g:4079:6: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:4088:2: kw= 'create'
                    {
                    kw=(Token)match(input,KW_Create,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getValidIDAccess().getCreateKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:4095:2: kw= 'annotation'
                    {
                    kw=(Token)match(input,KW_Annotation,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getValidIDAccess().getAnnotationKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:4102:2: kw= 'AFTER'
                    {
                    kw=(Token)match(input,KW_AFTER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getValidIDAccess().getAFTERKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalXtend.g:4109:2: kw= 'BEFORE'
                    {
                    kw=(Token)match(input,KW_BEFORE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getValidIDAccess().getBEFOREKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalXtend.g:4116:2: kw= 'SEPARATOR'
                    {
                    kw=(Token)match(input,KW_SEPARATOR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getValidIDAccess().getSEPARATORKeyword_5()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalXtend.g:4129:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalXtend.g:4130:2: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalXtend.g:4131:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalXtend.g:4138:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_InnerVarID_0= ruleInnerVarID | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_InnerVarID_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:4141:28: ( (this_InnerVarID_0= ruleInnerVarID | kw= 'extension' ) )
            // InternalXtend.g:4142:1: (this_InnerVarID_0= ruleInnerVarID | kw= 'extension' )
            {
            // InternalXtend.g:4142:1: (this_InnerVarID_0= ruleInnerVarID | kw= 'extension' )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==KW_Package||LA121_0==KW_Class||(LA121_0>=KW_Extends && LA121_0<=KW_Implements)||(LA121_0>=KW_Interface && LA121_0<=KW_Annotation)||LA121_0==KW_Throws||(LA121_0>=KW_Public && LA121_0<=KW_Transient)||(LA121_0>=KW_Def && LA121_0<=KW_Create)||(LA121_0>=KW_AFTER && LA121_0<=KW_Import)||LA121_0==RULE_ID) ) {
                alt121=1;
            }
            else if ( (LA121_0==KW_Extension) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalXtend.g:4143:5: this_InnerVarID_0= ruleInnerVarID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFeatureCallIDAccess().getInnerVarIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_InnerVarID_0=ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_InnerVarID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:4155:2: kw= 'extension'
                    {
                    kw=(Token)match(input,KW_Extension,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleInnerVarID"
    // InternalXtend.g:4168:1: entryRuleInnerVarID returns [String current=null] : iv_ruleInnerVarID= ruleInnerVarID EOF ;
    public final String entryRuleInnerVarID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInnerVarID = null;


        try {
            // InternalXtend.g:4169:2: (iv_ruleInnerVarID= ruleInnerVarID EOF )
            // InternalXtend.g:4170:2: iv_ruleInnerVarID= ruleInnerVarID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInnerVarIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInnerVarID=ruleInnerVarID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInnerVarID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInnerVarID"


    // $ANTLR start "ruleInnerVarID"
    // InternalXtend.g:4177:1: ruleInnerVarID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | kw= 'abstract' | kw= 'annotation' | kw= 'class' | kw= 'create' | kw= 'def' | kw= 'dispatch' | kw= 'enum' | kw= 'extends' | kw= 'final' | kw= 'implements' | kw= 'import' | kw= 'interface' | kw= 'override' | kw= 'package' | kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'static' | kw= 'throws' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' ) ;
    public final AntlrDatatypeRuleToken ruleInnerVarID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:4180:28: ( (this_ID_0= RULE_ID | kw= 'abstract' | kw= 'annotation' | kw= 'class' | kw= 'create' | kw= 'def' | kw= 'dispatch' | kw= 'enum' | kw= 'extends' | kw= 'final' | kw= 'implements' | kw= 'import' | kw= 'interface' | kw= 'override' | kw= 'package' | kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'static' | kw= 'throws' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' ) )
            // InternalXtend.g:4181:1: (this_ID_0= RULE_ID | kw= 'abstract' | kw= 'annotation' | kw= 'class' | kw= 'create' | kw= 'def' | kw= 'dispatch' | kw= 'enum' | kw= 'extends' | kw= 'final' | kw= 'implements' | kw= 'import' | kw= 'interface' | kw= 'override' | kw= 'package' | kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'static' | kw= 'throws' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' )
            {
            // InternalXtend.g:4181:1: (this_ID_0= RULE_ID | kw= 'abstract' | kw= 'annotation' | kw= 'class' | kw= 'create' | kw= 'def' | kw= 'dispatch' | kw= 'enum' | kw= 'extends' | kw= 'final' | kw= 'implements' | kw= 'import' | kw= 'interface' | kw= 'override' | kw= 'package' | kw= 'public' | kw= 'private' | kw= 'protected' | kw= 'static' | kw= 'throws' | kw= 'strictfp' | kw= 'native' | kw= 'volatile' | kw= 'synchronized' | kw= 'transient' | kw= 'AFTER' | kw= 'BEFORE' | kw= 'SEPARATOR' )
            int alt122=28;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt122=1;
                }
                break;
            case KW_Abstract:
                {
                alt122=2;
                }
                break;
            case KW_Annotation:
                {
                alt122=3;
                }
                break;
            case KW_Class:
                {
                alt122=4;
                }
                break;
            case KW_Create:
                {
                alt122=5;
                }
                break;
            case KW_Def:
                {
                alt122=6;
                }
                break;
            case KW_Dispatch:
                {
                alt122=7;
                }
                break;
            case KW_Enum:
                {
                alt122=8;
                }
                break;
            case KW_Extends:
                {
                alt122=9;
                }
                break;
            case KW_Final:
                {
                alt122=10;
                }
                break;
            case KW_Implements:
                {
                alt122=11;
                }
                break;
            case KW_Import:
                {
                alt122=12;
                }
                break;
            case KW_Interface:
                {
                alt122=13;
                }
                break;
            case KW_Override:
                {
                alt122=14;
                }
                break;
            case KW_Package:
                {
                alt122=15;
                }
                break;
            case KW_Public:
                {
                alt122=16;
                }
                break;
            case KW_Private:
                {
                alt122=17;
                }
                break;
            case KW_Protected:
                {
                alt122=18;
                }
                break;
            case KW_Static:
                {
                alt122=19;
                }
                break;
            case KW_Throws:
                {
                alt122=20;
                }
                break;
            case KW_Strictfp:
                {
                alt122=21;
                }
                break;
            case KW_Native:
                {
                alt122=22;
                }
                break;
            case KW_Volatile:
                {
                alt122=23;
                }
                break;
            case KW_Synchronized:
                {
                alt122=24;
                }
                break;
            case KW_Transient:
                {
                alt122=25;
                }
                break;
            case KW_AFTER:
                {
                alt122=26;
                }
                break;
            case KW_BEFORE:
                {
                alt122=27;
                }
                break;
            case KW_SEPARATOR:
                {
                alt122=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }

            switch (alt122) {
                case 1 :
                    // InternalXtend.g:4181:6: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_0, grammarAccess.getInnerVarIDAccess().getIDTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:4190:2: kw= 'abstract'
                    {
                    kw=(Token)match(input,KW_Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getAbstractKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:4197:2: kw= 'annotation'
                    {
                    kw=(Token)match(input,KW_Annotation,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getAnnotationKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:4204:2: kw= 'class'
                    {
                    kw=(Token)match(input,KW_Class,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getClassKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalXtend.g:4211:2: kw= 'create'
                    {
                    kw=(Token)match(input,KW_Create,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getCreateKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalXtend.g:4218:2: kw= 'def'
                    {
                    kw=(Token)match(input,KW_Def,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getDefKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalXtend.g:4225:2: kw= 'dispatch'
                    {
                    kw=(Token)match(input,KW_Dispatch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getDispatchKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalXtend.g:4232:2: kw= 'enum'
                    {
                    kw=(Token)match(input,KW_Enum,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getEnumKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalXtend.g:4239:2: kw= 'extends'
                    {
                    kw=(Token)match(input,KW_Extends,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getExtendsKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalXtend.g:4246:2: kw= 'final'
                    {
                    kw=(Token)match(input,KW_Final,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getFinalKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalXtend.g:4253:2: kw= 'implements'
                    {
                    kw=(Token)match(input,KW_Implements,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getImplementsKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalXtend.g:4260:2: kw= 'import'
                    {
                    kw=(Token)match(input,KW_Import,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getImportKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // InternalXtend.g:4267:2: kw= 'interface'
                    {
                    kw=(Token)match(input,KW_Interface,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getInterfaceKeyword_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    // InternalXtend.g:4274:2: kw= 'override'
                    {
                    kw=(Token)match(input,KW_Override,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getOverrideKeyword_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    // InternalXtend.g:4281:2: kw= 'package'
                    {
                    kw=(Token)match(input,KW_Package,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getPackageKeyword_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    // InternalXtend.g:4288:2: kw= 'public'
                    {
                    kw=(Token)match(input,KW_Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getPublicKeyword_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    // InternalXtend.g:4295:2: kw= 'private'
                    {
                    kw=(Token)match(input,KW_Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getPrivateKeyword_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    // InternalXtend.g:4302:2: kw= 'protected'
                    {
                    kw=(Token)match(input,KW_Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getProtectedKeyword_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    // InternalXtend.g:4309:2: kw= 'static'
                    {
                    kw=(Token)match(input,KW_Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getStaticKeyword_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    // InternalXtend.g:4316:2: kw= 'throws'
                    {
                    kw=(Token)match(input,KW_Throws,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getThrowsKeyword_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    // InternalXtend.g:4323:2: kw= 'strictfp'
                    {
                    kw=(Token)match(input,KW_Strictfp,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getStrictfpKeyword_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    // InternalXtend.g:4330:2: kw= 'native'
                    {
                    kw=(Token)match(input,KW_Native,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getNativeKeyword_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    // InternalXtend.g:4337:2: kw= 'volatile'
                    {
                    kw=(Token)match(input,KW_Volatile,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getVolatileKeyword_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    // InternalXtend.g:4344:2: kw= 'synchronized'
                    {
                    kw=(Token)match(input,KW_Synchronized,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getSynchronizedKeyword_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    // InternalXtend.g:4351:2: kw= 'transient'
                    {
                    kw=(Token)match(input,KW_Transient,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getTransientKeyword_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    // InternalXtend.g:4358:2: kw= 'AFTER'
                    {
                    kw=(Token)match(input,KW_AFTER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getAFTERKeyword_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    // InternalXtend.g:4365:2: kw= 'BEFORE'
                    {
                    kw=(Token)match(input,KW_BEFORE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getBEFOREKeyword_26()); 
                          
                    }

                    }
                    break;
                case 28 :
                    // InternalXtend.g:4372:2: kw= 'SEPARATOR'
                    {
                    kw=(Token)match(input,KW_SEPARATOR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getInnerVarIDAccess().getSEPARATORKeyword_27()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInnerVarID"


    // $ANTLR start "entryRuleParameter"
    // InternalXtend.g:4385:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalXtend.g:4386:2: (iv_ruleParameter= ruleParameter EOF )
            // InternalXtend.g:4387:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalXtend.g:4394:1: ruleParameter returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_extension_1_0=null;
        Token lv_varArg_4_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_2_0 = null;

        EObject lv_parameterType_3_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:4397:28: ( ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) ) ) )
            // InternalXtend.g:4398:1: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) ) )
            {
            // InternalXtend.g:4398:1: ( ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) ) )
            // InternalXtend.g:4398:2: ( (lv_annotations_0_0= ruleXAnnotation ) )* ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )? ( (lv_parameterType_3_0= ruleJvmTypeReference ) ) ( (lv_varArg_4_0= '...' ) )? ( (lv_name_5_0= ruleValidID ) )
            {
            // InternalXtend.g:4398:2: ( (lv_annotations_0_0= ruleXAnnotation ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==KW_CommercialAt) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalXtend.g:4399:1: (lv_annotations_0_0= ruleXAnnotation )
            	    {
            	    // InternalXtend.g:4399:1: (lv_annotations_0_0= ruleXAnnotation )
            	    // InternalXtend.g:4400:3: lv_annotations_0_0= ruleXAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getParameterAccess().getAnnotationsXAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_annotations_0_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getParameterRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            // InternalXtend.g:4416:3: ( ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )* )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==KW_Extension) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalXtend.g:4416:4: ( (lv_extension_1_0= 'extension' ) ) ( (lv_annotations_2_0= ruleXAnnotation ) )*
                    {
                    // InternalXtend.g:4416:4: ( (lv_extension_1_0= 'extension' ) )
                    // InternalXtend.g:4417:1: (lv_extension_1_0= 'extension' )
                    {
                    // InternalXtend.g:4417:1: (lv_extension_1_0= 'extension' )
                    // InternalXtend.g:4418:3: lv_extension_1_0= 'extension'
                    {
                    lv_extension_1_0=(Token)match(input,KW_Extension,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_extension_1_0, grammarAccess.getParameterAccess().getExtensionExtensionKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                             		setWithLastConsumed(current, "extension", true, "extension");
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:4431:2: ( (lv_annotations_2_0= ruleXAnnotation ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==KW_CommercialAt) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalXtend.g:4432:1: (lv_annotations_2_0= ruleXAnnotation )
                    	    {
                    	    // InternalXtend.g:4432:1: (lv_annotations_2_0= ruleXAnnotation )
                    	    // InternalXtend.g:4433:3: lv_annotations_2_0= ruleXAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterAccess().getAnnotationsXAnnotationParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_43);
                    	    lv_annotations_2_0=ruleXAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_2_0, 
                    	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalXtend.g:4449:5: ( (lv_parameterType_3_0= ruleJvmTypeReference ) )
            // InternalXtend.g:4450:1: (lv_parameterType_3_0= ruleJvmTypeReference )
            {
            // InternalXtend.g:4450:1: (lv_parameterType_3_0= ruleJvmTypeReference )
            // InternalXtend.g:4451:3: lv_parameterType_3_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_56);
            lv_parameterType_3_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRule());
              	        }
                     		set(
                     			current, 
                     			"parameterType",
                      		lv_parameterType_3_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:4467:2: ( (lv_varArg_4_0= '...' ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==KW_FullStopFullStopFullStop) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalXtend.g:4468:1: (lv_varArg_4_0= '...' )
                    {
                    // InternalXtend.g:4468:1: (lv_varArg_4_0= '...' )
                    // InternalXtend.g:4469:3: lv_varArg_4_0= '...'
                    {
                    lv_varArg_4_0=(Token)match(input,KW_FullStopFullStopFullStop,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_varArg_4_0, grammarAccess.getParameterAccess().getVarArgFullStopFullStopFullStopKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                             		setWithLastConsumed(current, "varArg", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalXtend.g:4482:3: ( (lv_name_5_0= ruleValidID ) )
            // InternalXtend.g:4483:1: (lv_name_5_0= ruleValidID )
            {
            // InternalXtend.g:4483:1: (lv_name_5_0= ruleValidID )
            // InternalXtend.g:4484:3: lv_name_5_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterAccess().getNameValidIDParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_5_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_5_0, 
                      		"org.eclipse.xtend.core.Xtend.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalXtend.g:4508:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalXtend.g:4509:2: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalXtend.g:4510:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalXtend.g:4517:1: ruleXVariableDeclaration returns [EObject current=null] : ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token lv_extension_3_0=null;
        Token lv_extension_4_0=null;
        Token lv_writeable_5_0=null;
        Token otherlv_6=null;
        Token otherlv_10=null;
        EObject lv_type_7_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_right_11_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:4520:28: ( ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )? ) )
            // InternalXtend.g:4521:1: ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )? )
            {
            // InternalXtend.g:4521:1: ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )? )
            // InternalXtend.g:4521:2: ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) ) (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )?
            {
            // InternalXtend.g:4521:2: ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) ) )
            // InternalXtend.g:4521:3: ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=> ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) )
            {
            // InternalXtend.g:4551:8: ( () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) ) )
            // InternalXtend.g:4551:9: () ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) )
            {
            // InternalXtend.g:4551:9: ()
            // InternalXtend.g:4552:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXVariableDeclarationAccess().getXtendVariableDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:4557:2: ( ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? ) | ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) ) )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( ((LA130_0>=KW_Val && LA130_0<=KW_Var)) ) {
                alt130=1;
            }
            else if ( (LA130_0==KW_Extension) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // InternalXtend.g:4557:3: ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? )
                    {
                    // InternalXtend.g:4557:3: ( ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )? )
                    // InternalXtend.g:4557:4: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( (lv_extension_3_0= 'extension' ) )?
                    {
                    // InternalXtend.g:4557:4: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==KW_Var) ) {
                        alt127=1;
                    }
                    else if ( (LA127_0==KW_Val) ) {
                        alt127=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 127, 0, input);

                        throw nvae;
                    }
                    switch (alt127) {
                        case 1 :
                            // InternalXtend.g:4557:5: ( (lv_writeable_1_0= 'var' ) )
                            {
                            // InternalXtend.g:4557:5: ( (lv_writeable_1_0= 'var' ) )
                            // InternalXtend.g:4558:1: (lv_writeable_1_0= 'var' )
                            {
                            // InternalXtend.g:4558:1: (lv_writeable_1_0= 'var' )
                            // InternalXtend.g:4559:3: lv_writeable_1_0= 'var'
                            {
                            lv_writeable_1_0=(Token)match(input,KW_Var,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_0_0_1_0_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "writeable", true, "var");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:4573:7: otherlv_2= 'val'
                            {
                            otherlv_2=(Token)match(input,KW_Val,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_0_0_1_0_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:4577:2: ( (lv_extension_3_0= 'extension' ) )?
                    int alt128=2;
                    int LA128_0 = input.LA(1);

                    if ( (LA128_0==KW_Extension) ) {
                        alt128=1;
                    }
                    switch (alt128) {
                        case 1 :
                            // InternalXtend.g:4578:1: (lv_extension_3_0= 'extension' )
                            {
                            // InternalXtend.g:4578:1: (lv_extension_3_0= 'extension' )
                            // InternalXtend.g:4579:3: lv_extension_3_0= 'extension'
                            {
                            lv_extension_3_0=(Token)match(input,KW_Extension,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_extension_3_0, grammarAccess.getXVariableDeclarationAccess().getExtensionExtensionKeyword_0_0_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "extension", true, "extension");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:4593:6: ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) )
                    {
                    // InternalXtend.g:4593:6: ( ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' ) )
                    // InternalXtend.g:4593:7: ( (lv_extension_4_0= 'extension' ) ) ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' )
                    {
                    // InternalXtend.g:4593:7: ( (lv_extension_4_0= 'extension' ) )
                    // InternalXtend.g:4594:1: (lv_extension_4_0= 'extension' )
                    {
                    // InternalXtend.g:4594:1: (lv_extension_4_0= 'extension' )
                    // InternalXtend.g:4595:3: lv_extension_4_0= 'extension'
                    {
                    lv_extension_4_0=(Token)match(input,KW_Extension,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_extension_4_0, grammarAccess.getXVariableDeclarationAccess().getExtensionExtensionKeyword_0_0_1_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "extension", true, "extension");
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:4608:2: ( ( (lv_writeable_5_0= 'var' ) ) | otherlv_6= 'val' )
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==KW_Var) ) {
                        alt129=1;
                    }
                    else if ( (LA129_0==KW_Val) ) {
                        alt129=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 129, 0, input);

                        throw nvae;
                    }
                    switch (alt129) {
                        case 1 :
                            // InternalXtend.g:4608:3: ( (lv_writeable_5_0= 'var' ) )
                            {
                            // InternalXtend.g:4608:3: ( (lv_writeable_5_0= 'var' ) )
                            // InternalXtend.g:4609:1: (lv_writeable_5_0= 'var' )
                            {
                            // InternalXtend.g:4609:1: (lv_writeable_5_0= 'var' )
                            // InternalXtend.g:4610:3: lv_writeable_5_0= 'var'
                            {
                            lv_writeable_5_0=(Token)match(input,KW_Var,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_writeable_5_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_0_0_1_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "writeable", true, "var");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:4624:7: otherlv_6= 'val'
                            {
                            otherlv_6=(Token)match(input,KW_Val,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getValKeyword_0_0_1_1_1_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            // InternalXtend.g:4628:6: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) )
            int alt131=2;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // InternalXtend.g:4628:7: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) )
                    {
                    // InternalXtend.g:4628:7: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) )
                    // InternalXtend.g:4628:8: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) )
                    {
                    // InternalXtend.g:4636:6: ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) )
                    // InternalXtend.g:4636:7: ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) )
                    {
                    // InternalXtend.g:4636:7: ( (lv_type_7_0= ruleJvmTypeReference ) )
                    // InternalXtend.g:4637:1: (lv_type_7_0= ruleJvmTypeReference )
                    {
                    // InternalXtend.g:4637:1: (lv_type_7_0= ruleJvmTypeReference )
                    // InternalXtend.g:4638:3: lv_type_7_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_59);
                    lv_type_7_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_7_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:4654:2: ( (lv_name_8_0= ruleInnerVarID ) )
                    // InternalXtend.g:4655:1: (lv_name_8_0= ruleInnerVarID )
                    {
                    // InternalXtend.g:4655:1: (lv_name_8_0= ruleInnerVarID )
                    // InternalXtend.g:4656:3: lv_name_8_0= ruleInnerVarID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameInnerVarIDParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_name_8_0=ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_8_0, 
                              		"org.eclipse.xtend.core.Xtend.InnerVarID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:4673:6: ( (lv_name_9_0= ruleInnerVarID ) )
                    {
                    // InternalXtend.g:4673:6: ( (lv_name_9_0= ruleInnerVarID ) )
                    // InternalXtend.g:4674:1: (lv_name_9_0= ruleInnerVarID )
                    {
                    // InternalXtend.g:4674:1: (lv_name_9_0= ruleInnerVarID )
                    // InternalXtend.g:4675:3: lv_name_9_0= ruleInnerVarID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameInnerVarIDParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_60);
                    lv_name_9_0=ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_9_0, 
                              		"org.eclipse.xtend.core.Xtend.InnerVarID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalXtend.g:4691:3: (otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==KW_EqualsSign) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalXtend.g:4691:5: otherlv_10= '=' ( (lv_right_11_0= ruleXExpression ) )
                    {
                    otherlv_10=(Token)match(input,KW_EqualsSign,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    // InternalXtend.g:4695:1: ( (lv_right_11_0= ruleXExpression ) )
                    // InternalXtend.g:4696:1: (lv_right_11_0= ruleXExpression )
                    {
                    // InternalXtend.g:4696:1: (lv_right_11_0= ruleXExpression )
                    // InternalXtend.g:4697:3: lv_right_11_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_11_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"right",
                              		lv_right_11_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalXtend.g:4721:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalXtend.g:4722:2: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalXtend.g:4723:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalXtend.g:4730:1: ruleXConstructorCall returns [EObject current=null] : (this_XbaseConstructorCall_0= ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_XbaseConstructorCall_0 = null;

        EObject lv_members_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:4733:28: ( (this_XbaseConstructorCall_0= ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )? ) )
            // InternalXtend.g:4734:1: (this_XbaseConstructorCall_0= ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )? )
            {
            // InternalXtend.g:4734:1: (this_XbaseConstructorCall_0= ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )? )
            // InternalXtend.g:4735:5: this_XbaseConstructorCall_0= ruleXbaseConstructorCall ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXConstructorCallAccess().getXbaseConstructorCallParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_61);
            this_XbaseConstructorCall_0=ruleXbaseConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XbaseConstructorCall_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:4743:1: ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )?
            int alt134=2;
            alt134 = dfa134.predict(input);
            switch (alt134) {
                case 1 :
                    // InternalXtend.g:4743:2: ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}'
                    {
                    // InternalXtend.g:4743:2: ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) )
                    // InternalXtend.g:4743:3: ( ( () '{' ) )=> ( () otherlv_2= '{' )
                    {
                    // InternalXtend.g:4745:5: ( () otherlv_2= '{' )
                    // InternalXtend.g:4745:6: () otherlv_2= '{'
                    {
                    // InternalXtend.g:4745:6: ()
                    // InternalXtend.g:4746:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getXConstructorCallAccess().getAnonymousClassConstructorCallAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXConstructorCallAccess().getLeftCurlyBracketKeyword_1_0_0_1());
                          
                    }

                    }


                    }

                    // InternalXtend.g:4755:3: ( (lv_members_3_0= ruleMember ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==KW_Package||LA133_0==KW_Class||(LA133_0>=KW_Interface && LA133_0<=KW_LeftParenthesis)||LA133_0==KW_EqualsSignGreaterThanSign||LA133_0==KW_Extension||LA133_0==KW_New||(LA133_0>=KW_Public && LA133_0<=KW_Create)||(LA133_0>=KW_AFTER && LA133_0<=KW_SEPARATOR)||LA133_0==KW_CommercialAt||LA133_0==RULE_ID) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalXtend.g:4756:1: (lv_members_3_0= ruleMember )
                    	    {
                    	    // InternalXtend.g:4756:1: (lv_members_3_0= ruleMember )
                    	    // InternalXtend.g:4757:3: lv_members_3_0= ruleMember
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getMembersMemberParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_3_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"members",
                    	              		lv_members_3_0, 
                    	              		"org.eclipse.xtend.core.Xtend.Member");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXConstructorCallAccess().getRightCurlyBracketKeyword_1_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXbaseConstructorCall"
    // InternalXtend.g:4785:1: entryRuleXbaseConstructorCall returns [EObject current=null] : iv_ruleXbaseConstructorCall= ruleXbaseConstructorCall EOF ;
    public final EObject entryRuleXbaseConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXbaseConstructorCall = null;


        try {
            // InternalXtend.g:4786:2: (iv_ruleXbaseConstructorCall= ruleXbaseConstructorCall EOF )
            // InternalXtend.g:4787:2: iv_ruleXbaseConstructorCall= ruleXbaseConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXbaseConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXbaseConstructorCall=ruleXbaseConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXbaseConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXbaseConstructorCall"


    // $ANTLR start "ruleXbaseConstructorCall"
    // InternalXtend.g:4794:1: ruleXbaseConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXbaseConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:4797:28: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalXtend.g:4798:1: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalXtend.g:4798:1: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalXtend.g:4798:2: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalXtend.g:4798:2: ()
            // InternalXtend.g:4799:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXbaseConstructorCallAccess().getXConstructorCallAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_New,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXbaseConstructorCallAccess().getNewKeyword_1());
                  
            }
            // InternalXtend.g:4808:1: ( ( ruleQualifiedName ) )
            // InternalXtend.g:4809:1: ( ruleQualifiedName )
            {
            // InternalXtend.g:4809:1: ( ruleQualifiedName )
            // InternalXtend.g:4810:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXbaseConstructorCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXbaseConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_62);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:4823:2: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt136=2;
            alt136 = dfa136.predict(input);
            switch (alt136) {
                case 1 :
                    // InternalXtend.g:4823:3: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // InternalXtend.g:4823:3: ( ( '<' )=>otherlv_3= '<' )
                    // InternalXtend.g:4823:4: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getXbaseConstructorCallAccess().getLessThanSignKeyword_3_0());
                          
                    }

                    }

                    // InternalXtend.g:4828:2: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalXtend.g:4829:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalXtend.g:4829:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalXtend.g:4830:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXbaseConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_10);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXbaseConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:4846:2: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop135:
                    do {
                        int alt135=2;
                        int LA135_0 = input.LA(1);

                        if ( (LA135_0==KW_Comma) ) {
                            alt135=1;
                        }


                        switch (alt135) {
                    	case 1 :
                    	    // InternalXtend.g:4846:4: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getXbaseConstructorCallAccess().getCommaKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalXtend.g:4850:1: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalXtend.g:4851:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalXtend.g:4851:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalXtend.g:4852:3: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXbaseConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXbaseConstructorCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_6_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop135;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,KW_GreaterThanSign,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getXbaseConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                          
                    }

                    }
                    break;

            }

            // InternalXtend.g:4872:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt139=2;
            alt139 = dfa139.predict(input);
            switch (alt139) {
                case 1 :
                    // InternalXtend.g:4872:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // InternalXtend.g:4872:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalXtend.g:4872:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalXtend.g:4879:1: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalXtend.g:4880:3: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXbaseConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXbaseConstructorCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:4893:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt138=3;
                    alt138 = dfa138.predict(input);
                    switch (alt138) {
                        case 1 :
                            // InternalXtend.g:4893:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalXtend.g:4893:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalXtend.g:4893:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalXtend.g:4910:1: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalXtend.g:4911:3: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXbaseConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_65);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXbaseConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_9_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:4928:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalXtend.g:4928:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalXtend.g:4928:7: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalXtend.g:4928:7: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalXtend.g:4929:1: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalXtend.g:4929:1: (lv_arguments_10_0= ruleXExpression )
                            // InternalXtend.g:4930:3: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXbaseConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXbaseConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_10_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:4946:2: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop137:
                            do {
                                int alt137=2;
                                int LA137_0 = input.LA(1);

                                if ( (LA137_0==KW_Comma) ) {
                                    alt137=1;
                                }


                                switch (alt137) {
                            	case 1 :
                            	    // InternalXtend.g:4946:4: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getXbaseConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:4950:1: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalXtend.g:4951:1: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalXtend.g:4951:1: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalXtend.g:4952:3: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXbaseConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXbaseConstructorCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"arguments",
                            	              		lv_arguments_12_0, 
                            	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop137;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,KW_RightParenthesis,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXbaseConstructorCallAccess().getRightParenthesisKeyword_4_2());
                          
                    }

                    }
                    break;

            }

            // InternalXtend.g:4972:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt140=2;
            alt140 = dfa140.predict(input);
            switch (alt140) {
                case 1 :
                    // InternalXtend.g:4972:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalXtend.g:4975:1: (lv_arguments_14_0= ruleXClosure )
                    // InternalXtend.g:4976:3: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXbaseConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXbaseConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_14_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXbaseConstructorCall"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalXtend.g:5000:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalXtend.g:5001:2: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalXtend.g:5002:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalXtend.g:5009:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        Token lv_extension_0_0=null;
        EObject lv_parameterType_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5012:28: ( ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) ) ) )
            // InternalXtend.g:5013:1: ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) ) )
            {
            // InternalXtend.g:5013:1: ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) ) )
            // InternalXtend.g:5013:2: ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) )? ( (lv_name_2_0= ruleInnerVarID ) )
            {
            // InternalXtend.g:5013:2: ( (lv_extension_0_0= 'extension' ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==KW_Extension) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalXtend.g:5014:1: (lv_extension_0_0= 'extension' )
                    {
                    // InternalXtend.g:5014:1: (lv_extension_0_0= 'extension' )
                    // InternalXtend.g:5015:3: lv_extension_0_0= 'extension'
                    {
                    lv_extension_0_0=(Token)match(input,KW_Extension,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_extension_0_0, grammarAccess.getJvmFormalParameterAccess().getExtensionExtensionKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getJvmFormalParameterRule());
                      	        }
                             		setWithLastConsumed(current, "extension", true, "extension");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalXtend.g:5028:3: ( (lv_parameterType_1_0= ruleJvmTypeReference ) )?
            int alt142=2;
            switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA142_1 = input.LA(2);

                    if ( (LA142_1==KW_Package||(LA142_1>=KW_Class && LA142_1<=KW_LessThanSign)||(LA142_1>=KW_Extends && LA142_1<=KW_Implements)||(LA142_1>=KW_Interface && LA142_1<=KW_Annotation)||LA142_1==KW_Throws||(LA142_1>=KW_FullStop && LA142_1<=KW_Transient)||(LA142_1>=KW_Def && LA142_1<=KW_Create)||(LA142_1>=KW_AFTER && LA142_1<=KW_Import)||LA142_1==KW_LeftSquareBracket||LA142_1==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_Create:
                    {
                    int LA142_2 = input.LA(2);

                    if ( (LA142_2==KW_Package||(LA142_2>=KW_Class && LA142_2<=KW_LessThanSign)||(LA142_2>=KW_Extends && LA142_2<=KW_Implements)||(LA142_2>=KW_Interface && LA142_2<=KW_Annotation)||LA142_2==KW_Throws||(LA142_2>=KW_FullStop && LA142_2<=KW_Transient)||(LA142_2>=KW_Def && LA142_2<=KW_Create)||(LA142_2>=KW_AFTER && LA142_2<=KW_Import)||LA142_2==KW_LeftSquareBracket||LA142_2==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_Annotation:
                    {
                    int LA142_3 = input.LA(2);

                    if ( (LA142_3==KW_Package||(LA142_3>=KW_Class && LA142_3<=KW_LessThanSign)||(LA142_3>=KW_Extends && LA142_3<=KW_Implements)||(LA142_3>=KW_Interface && LA142_3<=KW_Annotation)||LA142_3==KW_Throws||(LA142_3>=KW_FullStop && LA142_3<=KW_Transient)||(LA142_3>=KW_Def && LA142_3<=KW_Create)||(LA142_3>=KW_AFTER && LA142_3<=KW_Import)||LA142_3==KW_LeftSquareBracket||LA142_3==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_AFTER:
                    {
                    int LA142_4 = input.LA(2);

                    if ( (LA142_4==KW_Package||(LA142_4>=KW_Class && LA142_4<=KW_LessThanSign)||(LA142_4>=KW_Extends && LA142_4<=KW_Implements)||(LA142_4>=KW_Interface && LA142_4<=KW_Annotation)||LA142_4==KW_Throws||(LA142_4>=KW_FullStop && LA142_4<=KW_Transient)||(LA142_4>=KW_Def && LA142_4<=KW_Create)||(LA142_4>=KW_AFTER && LA142_4<=KW_Import)||LA142_4==KW_LeftSquareBracket||LA142_4==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA142_5 = input.LA(2);

                    if ( (LA142_5==KW_Package||(LA142_5>=KW_Class && LA142_5<=KW_LessThanSign)||(LA142_5>=KW_Extends && LA142_5<=KW_Implements)||(LA142_5>=KW_Interface && LA142_5<=KW_Annotation)||LA142_5==KW_Throws||(LA142_5>=KW_FullStop && LA142_5<=KW_Transient)||(LA142_5>=KW_Def && LA142_5<=KW_Create)||(LA142_5>=KW_AFTER && LA142_5<=KW_Import)||LA142_5==KW_LeftSquareBracket||LA142_5==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA142_6 = input.LA(2);

                    if ( (LA142_6==KW_Package||(LA142_6>=KW_Class && LA142_6<=KW_LessThanSign)||(LA142_6>=KW_Extends && LA142_6<=KW_Implements)||(LA142_6>=KW_Interface && LA142_6<=KW_Annotation)||LA142_6==KW_Throws||(LA142_6>=KW_FullStop && LA142_6<=KW_Transient)||(LA142_6>=KW_Def && LA142_6<=KW_Create)||(LA142_6>=KW_AFTER && LA142_6<=KW_Import)||LA142_6==KW_LeftSquareBracket||LA142_6==RULE_ID) ) {
                        alt142=1;
                    }
                    }
                    break;
                case KW_LeftParenthesis:
                case KW_EqualsSignGreaterThanSign:
                    {
                    alt142=1;
                    }
                    break;
            }

            switch (alt142) {
                case 1 :
                    // InternalXtend.g:5029:1: (lv_parameterType_1_0= ruleJvmTypeReference )
                    {
                    // InternalXtend.g:5029:1: (lv_parameterType_1_0= ruleJvmTypeReference )
                    // InternalXtend.g:5030:3: lv_parameterType_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_59);
                    lv_parameterType_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"parameterType",
                              		lv_parameterType_1_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalXtend.g:5046:3: ( (lv_name_2_0= ruleInnerVarID ) )
            // InternalXtend.g:5047:1: (lv_name_2_0= ruleInnerVarID )
            {
            // InternalXtend.g:5047:1: (lv_name_2_0= ruleInnerVarID )
            // InternalXtend.g:5048:3: lv_name_2_0= ruleInnerVarID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameInnerVarIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_2_0=ruleInnerVarID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"org.eclipse.xtend.core.Xtend.InnerVarID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalXtend.g:5072:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalXtend.g:5073:2: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalXtend.g:5074:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalXtend.g:5081:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        Token lv_extension_0_0=null;
        EObject lv_parameterType_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5084:28: ( ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) ) ) )
            // InternalXtend.g:5085:1: ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) ) )
            {
            // InternalXtend.g:5085:1: ( ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) ) )
            // InternalXtend.g:5085:2: ( (lv_extension_0_0= 'extension' ) )? ( (lv_parameterType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleInnerVarID ) )
            {
            // InternalXtend.g:5085:2: ( (lv_extension_0_0= 'extension' ) )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==KW_Extension) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalXtend.g:5086:1: (lv_extension_0_0= 'extension' )
                    {
                    // InternalXtend.g:5086:1: (lv_extension_0_0= 'extension' )
                    // InternalXtend.g:5087:3: lv_extension_0_0= 'extension'
                    {
                    lv_extension_0_0=(Token)match(input,KW_Extension,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_extension_0_0, grammarAccess.getFullJvmFormalParameterAccess().getExtensionExtensionKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFullJvmFormalParameterRule());
                      	        }
                             		setWithLastConsumed(current, "extension", true, "extension");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalXtend.g:5100:3: ( (lv_parameterType_1_0= ruleJvmTypeReference ) )
            // InternalXtend.g:5101:1: (lv_parameterType_1_0= ruleJvmTypeReference )
            {
            // InternalXtend.g:5101:1: (lv_parameterType_1_0= ruleJvmTypeReference )
            // InternalXtend.g:5102:3: lv_parameterType_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_59);
            lv_parameterType_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"parameterType",
                      		lv_parameterType_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:5118:2: ( (lv_name_2_0= ruleInnerVarID ) )
            // InternalXtend.g:5119:1: (lv_name_2_0= ruleInnerVarID )
            {
            // InternalXtend.g:5119:1: (lv_name_2_0= ruleInnerVarID )
            // InternalXtend.g:5120:3: lv_name_2_0= ruleInnerVarID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameInnerVarIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_2_0=ruleInnerVarID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"org.eclipse.xtend.core.Xtend.InnerVarID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalXtend.g:5144:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalXtend.g:5145:2: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalXtend.g:5146:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalXtend.g:5153:1: ruleXStringLiteral returns [EObject current=null] : (this_SimpleStringLiteral_0= ruleSimpleStringLiteral | this_RichString_1= ruleRichString ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleStringLiteral_0 = null;

        EObject this_RichString_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5156:28: ( (this_SimpleStringLiteral_0= ruleSimpleStringLiteral | this_RichString_1= ruleRichString ) )
            // InternalXtend.g:5157:1: (this_SimpleStringLiteral_0= ruleSimpleStringLiteral | this_RichString_1= ruleRichString )
            {
            // InternalXtend.g:5157:1: (this_SimpleStringLiteral_0= ruleSimpleStringLiteral | this_RichString_1= ruleRichString )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_STRING) ) {
                alt144=1;
            }
            else if ( ((LA144_0>=RULE_RICH_TEXT && LA144_0<=RULE_RICH_TEXT_START)) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // InternalXtend.g:5158:5: this_SimpleStringLiteral_0= ruleSimpleStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXStringLiteralAccess().getSimpleStringLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleStringLiteral_0=ruleSimpleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SimpleStringLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:5168:5: this_RichString_1= ruleRichString
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXStringLiteralAccess().getRichStringParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RichString_1=ruleRichString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RichString_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalXtend.g:5184:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalXtend.g:5185:2: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalXtend.g:5186:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalXtend.g:5193:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5196:28: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // InternalXtend.g:5197:1: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // InternalXtend.g:5197:1: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // InternalXtend.g:5197:2: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // InternalXtend.g:5197:2: ()
            // InternalXtend.g:5198:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_Switch,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
                  
            }
            // InternalXtend.g:5207:1: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) )
            int alt146=2;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    // InternalXtend.g:5207:2: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // InternalXtend.g:5207:2: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // InternalXtend.g:5207:3: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // InternalXtend.g:5207:3: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // InternalXtend.g:5207:4: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // InternalXtend.g:5213:5: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // InternalXtend.g:5213:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                          
                    }
                    // InternalXtend.g:5217:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalXtend.g:5218:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalXtend.g:5218:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalXtend.g:5219:3: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_55);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredParam",
                              		lv_declaredParam_3_0, 
                              		"org.eclipse.xtend.core.Xtend.JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                          
                    }

                    }


                    }

                    // InternalXtend.g:5239:3: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalXtend.g:5240:1: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalXtend.g:5240:1: (lv_switch_5_0= ruleXExpression )
                    // InternalXtend.g:5241:3: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_65);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_5_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:5262:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) )
                    {
                    // InternalXtend.g:5262:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) )
                    // InternalXtend.g:5262:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) )
                    {
                    // InternalXtend.g:5262:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt145=2;
                    alt145 = dfa145.predict(input);
                    switch (alt145) {
                        case 1 :
                            // InternalXtend.g:5262:8: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // InternalXtend.g:5267:5: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // InternalXtend.g:5267:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // InternalXtend.g:5267:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalXtend.g:5268:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalXtend.g:5268:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalXtend.g:5269:3: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_55);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredParam",
                                      		lv_declaredParam_7_0, 
                                      		"org.eclipse.xtend.core.Xtend.JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,KW_Colon,FOLLOW_66); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                                  
                            }

                            }


                            }
                            break;

                    }

                    // InternalXtend.g:5289:4: ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) )
                    // InternalXtend.g:5290:1: (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall )
                    {
                    // InternalXtend.g:5290:1: (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall )
                    // InternalXtend.g:5291:3: lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionOrSimpleConstructorCallParserRuleCall_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_20);
                    lv_switch_9_0=ruleXExpressionOrSimpleConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_9_0, 
                              		"org.eclipse.xtend.core.Xtend.XExpressionOrSimpleConstructorCall");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalXtend.g:5311:1: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==KW_Comma||(LA147_0>=KW_Annotation && LA147_0<=KW_LeftParenthesis)||LA147_0==KW_EqualsSignGreaterThanSign||(LA147_0>=KW_Create && LA147_0<=KW_SEPARATOR)||LA147_0==KW_Case||LA147_0==RULE_ID) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // InternalXtend.g:5312:1: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalXtend.g:5312:1: (lv_cases_11_0= ruleXCasePart )
            	    // InternalXtend.g:5313:3: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_11_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            // InternalXtend.g:5329:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==KW_Default) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalXtend.g:5329:5: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,KW_Default,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                          
                    }
                    otherlv_13=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                          
                    }
                    // InternalXtend.g:5337:1: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalXtend.g:5338:1: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalXtend.g:5338:1: (lv_default_14_0= ruleXExpression )
                    // InternalXtend.g:5339:3: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_23);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"default",
                              		lv_default_14_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXExpressionOrSimpleConstructorCall"
    // InternalXtend.g:5367:1: entryRuleXExpressionOrSimpleConstructorCall returns [EObject current=null] : iv_ruleXExpressionOrSimpleConstructorCall= ruleXExpressionOrSimpleConstructorCall EOF ;
    public final EObject entryRuleXExpressionOrSimpleConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrSimpleConstructorCall = null;


        try {
            // InternalXtend.g:5368:2: (iv_ruleXExpressionOrSimpleConstructorCall= ruleXExpressionOrSimpleConstructorCall EOF )
            // InternalXtend.g:5369:2: iv_ruleXExpressionOrSimpleConstructorCall= ruleXExpressionOrSimpleConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrSimpleConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrSimpleConstructorCall=ruleXExpressionOrSimpleConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrSimpleConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrSimpleConstructorCall"


    // $ANTLR start "ruleXExpressionOrSimpleConstructorCall"
    // InternalXtend.g:5376:1: ruleXExpressionOrSimpleConstructorCall returns [EObject current=null] : ( ( ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall ) | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrSimpleConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject this_XbaseConstructorCall_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5379:28: ( ( ( ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall ) | this_XExpression_1= ruleXExpression ) )
            // InternalXtend.g:5380:1: ( ( ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall ) | this_XExpression_1= ruleXExpression )
            {
            // InternalXtend.g:5380:1: ( ( ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall ) | this_XExpression_1= ruleXExpression )
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalXtend.g:5380:2: ( ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall )
                    {
                    // InternalXtend.g:5380:2: ( ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall )
                    // InternalXtend.g:5380:3: ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrSimpleConstructorCallAccess().getXbaseConstructorCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XbaseConstructorCall_0=ruleXbaseConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XbaseConstructorCall_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:5392:5: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrSimpleConstructorCallAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrSimpleConstructorCall"


    // $ANTLR start "entryRuleSimpleStringLiteral"
    // InternalXtend.g:5408:1: entryRuleSimpleStringLiteral returns [EObject current=null] : iv_ruleSimpleStringLiteral= ruleSimpleStringLiteral EOF ;
    public final EObject entryRuleSimpleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStringLiteral = null;


        try {
            // InternalXtend.g:5409:2: (iv_ruleSimpleStringLiteral= ruleSimpleStringLiteral EOF )
            // InternalXtend.g:5410:2: iv_ruleSimpleStringLiteral= ruleSimpleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStringLiteral=ruleSimpleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStringLiteral"


    // $ANTLR start "ruleSimpleStringLiteral"
    // InternalXtend.g:5417:1: ruleSimpleStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleSimpleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:5420:28: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalXtend.g:5421:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalXtend.g:5421:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalXtend.g:5421:2: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalXtend.g:5421:2: ()
            // InternalXtend.g:5422:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSimpleStringLiteralAccess().getXStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:5427:2: ( (lv_value_1_0= RULE_STRING ) )
            // InternalXtend.g:5428:1: (lv_value_1_0= RULE_STRING )
            {
            // InternalXtend.g:5428:1: (lv_value_1_0= RULE_STRING )
            // InternalXtend.g:5429:3: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getSimpleStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSimpleStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStringLiteral"


    // $ANTLR start "entryRuleRichString"
    // InternalXtend.g:5453:1: entryRuleRichString returns [EObject current=null] : iv_ruleRichString= ruleRichString EOF ;
    public final EObject entryRuleRichString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichString = null;


        try {
            // InternalXtend.g:5454:2: (iv_ruleRichString= ruleRichString EOF )
            // InternalXtend.g:5455:2: iv_ruleRichString= ruleRichString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichString=ruleRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichString"


    // $ANTLR start "ruleRichString"
    // InternalXtend.g:5462:1: ruleRichString returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) ) ;
    public final EObject ruleRichString() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_1_0 = null;

        EObject lv_expressions_2_0 = null;

        EObject lv_expressions_3_0 = null;

        EObject lv_expressions_4_0 = null;

        EObject lv_expressions_5_0 = null;

        EObject lv_expressions_6_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5465:28: ( ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) ) )
            // InternalXtend.g:5466:1: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) )
            {
            // InternalXtend.g:5466:1: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) ) )
            // InternalXtend.g:5466:2: () ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) )
            {
            // InternalXtend.g:5466:2: ()
            // InternalXtend.g:5467:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringAccess().getRichStringAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:5472:2: ( ( (lv_expressions_1_0= ruleRichStringLiteral ) ) | ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) ) )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==RULE_RICH_TEXT) ) {
                alt153=1;
            }
            else if ( (LA153_0==RULE_RICH_TEXT_START) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // InternalXtend.g:5472:3: ( (lv_expressions_1_0= ruleRichStringLiteral ) )
                    {
                    // InternalXtend.g:5472:3: ( (lv_expressions_1_0= ruleRichStringLiteral ) )
                    // InternalXtend.g:5473:1: (lv_expressions_1_0= ruleRichStringLiteral )
                    {
                    // InternalXtend.g:5473:1: (lv_expressions_1_0= ruleRichStringLiteral )
                    // InternalXtend.g:5474:3: lv_expressions_1_0= ruleRichStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressions_1_0=ruleRichStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                      	        }
                             		add(
                             			current, 
                             			"expressions",
                              		lv_expressions_1_0, 
                              		"org.eclipse.xtend.core.Xtend.RichStringLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:5491:6: ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) )
                    {
                    // InternalXtend.g:5491:6: ( ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) ) )
                    // InternalXtend.g:5491:7: ( (lv_expressions_2_0= ruleRichStringLiteralStart ) ) ( (lv_expressions_3_0= ruleRichStringPart ) )? ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )* ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) )
                    {
                    // InternalXtend.g:5491:7: ( (lv_expressions_2_0= ruleRichStringLiteralStart ) )
                    // InternalXtend.g:5492:1: (lv_expressions_2_0= ruleRichStringLiteralStart )
                    {
                    // InternalXtend.g:5492:1: (lv_expressions_2_0= ruleRichStringLiteralStart )
                    // InternalXtend.g:5493:3: lv_expressions_2_0= ruleRichStringLiteralStart
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralStartParserRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_68);
                    lv_expressions_2_0=ruleRichStringLiteralStart();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                      	        }
                             		add(
                             			current, 
                             			"expressions",
                              		lv_expressions_2_0, 
                              		"org.eclipse.xtend.core.Xtend.RichStringLiteralStart");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:5509:2: ( (lv_expressions_3_0= ruleRichStringPart ) )?
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==KW_Package||(LA150_0>=KW_Class && LA150_0<=KW_LessThanSign)||(LA150_0>=KW_Extends && LA150_0<=KW_LeftCurlyBracket)||(LA150_0>=KW_Interface && LA150_0<=KW_LeftParenthesis)||(LA150_0>=KW_Extension && LA150_0<=KW_New)||(LA150_0>=KW_Public && LA150_0<=KW_Create)||(LA150_0>=KW_AFTER && LA150_0<=KW_Import)||LA150_0==KW_Switch||LA150_0==KW_FOR||LA150_0==KW_IF||(LA150_0>=KW_NumberSign && LA150_0<=KW_LeftSquareBracket)||(LA150_0>=KW_PlusSign && LA150_0<=KW_HyphenMinus)||LA150_0==KW_ExclamationMark||LA150_0==KW_If||(LA150_0>=KW_For && LA150_0<=KW_Try)||(LA150_0>=RULE_ID && LA150_0<=RULE_RICH_TEXT_START)||(LA150_0>=RULE_HEX && LA150_0<=RULE_DECIMAL)) ) {
                        alt150=1;
                    }
                    switch (alt150) {
                        case 1 :
                            // InternalXtend.g:5510:1: (lv_expressions_3_0= ruleRichStringPart )
                            {
                            // InternalXtend.g:5510:1: (lv_expressions_3_0= ruleRichStringPart )
                            // InternalXtend.g:5511:3: lv_expressions_3_0= ruleRichStringPart
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringPartParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_68);
                            lv_expressions_3_0=ruleRichStringPart();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"expressions",
                                      		lv_expressions_3_0, 
                                      		"org.eclipse.xtend.core.Xtend.RichStringPart");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalXtend.g:5527:3: ( ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )? )*
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( ((LA152_0>=RULE_RICH_TEXT_INBETWEEN && LA152_0<=RULE_COMMENT_RICH_TEXT_INBETWEEN)) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // InternalXtend.g:5527:4: ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) ) ( (lv_expressions_5_0= ruleRichStringPart ) )?
                    	    {
                    	    // InternalXtend.g:5527:4: ( (lv_expressions_4_0= ruleRichStringLiteralInbetween ) )
                    	    // InternalXtend.g:5528:1: (lv_expressions_4_0= ruleRichStringLiteralInbetween )
                    	    {
                    	    // InternalXtend.g:5528:1: (lv_expressions_4_0= ruleRichStringLiteralInbetween )
                    	    // InternalXtend.g:5529:3: lv_expressions_4_0= ruleRichStringLiteralInbetween
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_2_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_68);
                    	    lv_expressions_4_0=ruleRichStringLiteralInbetween();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"expressions",
                    	              		lv_expressions_4_0, 
                    	              		"org.eclipse.xtend.core.Xtend.RichStringLiteralInbetween");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // InternalXtend.g:5545:2: ( (lv_expressions_5_0= ruleRichStringPart ) )?
                    	    int alt151=2;
                    	    int LA151_0 = input.LA(1);

                    	    if ( (LA151_0==KW_Package||(LA151_0>=KW_Class && LA151_0<=KW_LessThanSign)||(LA151_0>=KW_Extends && LA151_0<=KW_LeftCurlyBracket)||(LA151_0>=KW_Interface && LA151_0<=KW_LeftParenthesis)||(LA151_0>=KW_Extension && LA151_0<=KW_New)||(LA151_0>=KW_Public && LA151_0<=KW_Create)||(LA151_0>=KW_AFTER && LA151_0<=KW_Import)||LA151_0==KW_Switch||LA151_0==KW_FOR||LA151_0==KW_IF||(LA151_0>=KW_NumberSign && LA151_0<=KW_LeftSquareBracket)||(LA151_0>=KW_PlusSign && LA151_0<=KW_HyphenMinus)||LA151_0==KW_ExclamationMark||LA151_0==KW_If||(LA151_0>=KW_For && LA151_0<=KW_Try)||(LA151_0>=RULE_ID && LA151_0<=RULE_RICH_TEXT_START)||(LA151_0>=RULE_HEX && LA151_0<=RULE_DECIMAL)) ) {
                    	        alt151=1;
                    	    }
                    	    switch (alt151) {
                    	        case 1 :
                    	            // InternalXtend.g:5546:1: (lv_expressions_5_0= ruleRichStringPart )
                    	            {
                    	            // InternalXtend.g:5546:1: (lv_expressions_5_0= ruleRichStringPart )
                    	            // InternalXtend.g:5547:3: lv_expressions_5_0= ruleRichStringPart
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringPartParserRuleCall_1_1_2_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_68);
                    	            lv_expressions_5_0=ruleRichStringPart();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"expressions",
                    	                      		lv_expressions_5_0, 
                    	                      		"org.eclipse.xtend.core.Xtend.RichStringPart");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop152;
                        }
                    } while (true);

                    // InternalXtend.g:5563:5: ( (lv_expressions_6_0= ruleRichStringLiteralEnd ) )
                    // InternalXtend.g:5564:1: (lv_expressions_6_0= ruleRichStringLiteralEnd )
                    {
                    // InternalXtend.g:5564:1: (lv_expressions_6_0= ruleRichStringLiteralEnd )
                    // InternalXtend.g:5565:3: lv_expressions_6_0= ruleRichStringLiteralEnd
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralEndParserRuleCall_1_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressions_6_0=ruleRichStringLiteralEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringRule());
                      	        }
                             		add(
                             			current, 
                             			"expressions",
                              		lv_expressions_6_0, 
                              		"org.eclipse.xtend.core.Xtend.RichStringLiteralEnd");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichString"


    // $ANTLR start "entryRuleRichStringLiteral"
    // InternalXtend.g:5589:1: entryRuleRichStringLiteral returns [EObject current=null] : iv_ruleRichStringLiteral= ruleRichStringLiteral EOF ;
    public final EObject entryRuleRichStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringLiteral = null;


        try {
            // InternalXtend.g:5590:2: (iv_ruleRichStringLiteral= ruleRichStringLiteral EOF )
            // InternalXtend.g:5591:2: iv_ruleRichStringLiteral= ruleRichStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringLiteral=ruleRichStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringLiteral"


    // $ANTLR start "ruleRichStringLiteral"
    // InternalXtend.g:5598:1: ruleRichStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) ) ;
    public final EObject ruleRichStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:5601:28: ( ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) ) )
            // InternalXtend.g:5602:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) )
            {
            // InternalXtend.g:5602:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT ) ) )
            // InternalXtend.g:5602:2: () ( (lv_value_1_0= RULE_RICH_TEXT ) )
            {
            // InternalXtend.g:5602:2: ()
            // InternalXtend.g:5603:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringLiteralAccess().getRichStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:5608:2: ( (lv_value_1_0= RULE_RICH_TEXT ) )
            // InternalXtend.g:5609:1: (lv_value_1_0= RULE_RICH_TEXT )
            {
            // InternalXtend.g:5609:1: (lv_value_1_0= RULE_RICH_TEXT )
            // InternalXtend.g:5610:3: lv_value_1_0= RULE_RICH_TEXT
            {
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralAccess().getValueRICH_TEXTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRichStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.eclipse.xtend.core.Xtend.RICH_TEXT");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringLiteral"


    // $ANTLR start "entryRuleRichStringLiteralStart"
    // InternalXtend.g:5634:1: entryRuleRichStringLiteralStart returns [EObject current=null] : iv_ruleRichStringLiteralStart= ruleRichStringLiteralStart EOF ;
    public final EObject entryRuleRichStringLiteralStart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringLiteralStart = null;


        try {
            // InternalXtend.g:5635:2: (iv_ruleRichStringLiteralStart= ruleRichStringLiteralStart EOF )
            // InternalXtend.g:5636:2: iv_ruleRichStringLiteralStart= ruleRichStringLiteralStart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringLiteralStartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringLiteralStart=ruleRichStringLiteralStart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralStart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringLiteralStart"


    // $ANTLR start "ruleRichStringLiteralStart"
    // InternalXtend.g:5643:1: ruleRichStringLiteralStart returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) ) ;
    public final EObject ruleRichStringLiteralStart() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:5646:28: ( ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) ) )
            // InternalXtend.g:5647:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) )
            {
            // InternalXtend.g:5647:1: ( () ( (lv_value_1_0= RULE_RICH_TEXT_START ) ) )
            // InternalXtend.g:5647:2: () ( (lv_value_1_0= RULE_RICH_TEXT_START ) )
            {
            // InternalXtend.g:5647:2: ()
            // InternalXtend.g:5648:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringLiteralStartAccess().getRichStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:5653:2: ( (lv_value_1_0= RULE_RICH_TEXT_START ) )
            // InternalXtend.g:5654:1: (lv_value_1_0= RULE_RICH_TEXT_START )
            {
            // InternalXtend.g:5654:1: (lv_value_1_0= RULE_RICH_TEXT_START )
            // InternalXtend.g:5655:3: lv_value_1_0= RULE_RICH_TEXT_START
            {
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_START,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRichStringLiteralStartRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.eclipse.xtend.core.Xtend.RICH_TEXT_START");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringLiteralStart"


    // $ANTLR start "entryRuleRichStringLiteralInbetween"
    // InternalXtend.g:5679:1: entryRuleRichStringLiteralInbetween returns [EObject current=null] : iv_ruleRichStringLiteralInbetween= ruleRichStringLiteralInbetween EOF ;
    public final EObject entryRuleRichStringLiteralInbetween() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringLiteralInbetween = null;


        try {
            // InternalXtend.g:5680:2: (iv_ruleRichStringLiteralInbetween= ruleRichStringLiteralInbetween EOF )
            // InternalXtend.g:5681:2: iv_ruleRichStringLiteralInbetween= ruleRichStringLiteralInbetween EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringLiteralInbetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringLiteralInbetween=ruleRichStringLiteralInbetween();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralInbetween; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringLiteralInbetween"


    // $ANTLR start "ruleRichStringLiteralInbetween"
    // InternalXtend.g:5688:1: ruleRichStringLiteralInbetween returns [EObject current=null] : ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) ) ) ;
    public final EObject ruleRichStringLiteralInbetween() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;
        Token lv_value_2_0=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:5691:28: ( ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) ) ) )
            // InternalXtend.g:5692:1: ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) ) )
            {
            // InternalXtend.g:5692:1: ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) ) )
            // InternalXtend.g:5692:2: () ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) )
            {
            // InternalXtend.g:5692:2: ()
            // InternalXtend.g:5693:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringLiteralInbetweenAccess().getRichStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:5698:2: ( ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) ) )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==RULE_RICH_TEXT_INBETWEEN) ) {
                alt154=1;
            }
            else if ( (LA154_0==RULE_COMMENT_RICH_TEXT_INBETWEEN) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // InternalXtend.g:5698:3: ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) )
                    {
                    // InternalXtend.g:5698:3: ( (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN ) )
                    // InternalXtend.g:5699:1: (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN )
                    {
                    // InternalXtend.g:5699:1: (lv_value_1_0= RULE_RICH_TEXT_INBETWEEN )
                    // InternalXtend.g:5700:3: lv_value_1_0= RULE_RICH_TEXT_INBETWEEN
                    {
                    lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_INBETWEEN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralInbetweenAccess().getValueRICH_TEXT_INBETWEENTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRichStringLiteralInbetweenRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_1_0, 
                              		"org.eclipse.xtend.core.Xtend.RICH_TEXT_INBETWEEN");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:5717:6: ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) )
                    {
                    // InternalXtend.g:5717:6: ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN ) )
                    // InternalXtend.g:5718:1: (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN )
                    {
                    // InternalXtend.g:5718:1: (lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN )
                    // InternalXtend.g:5719:3: lv_value_2_0= RULE_COMMENT_RICH_TEXT_INBETWEEN
                    {
                    lv_value_2_0=(Token)match(input,RULE_COMMENT_RICH_TEXT_INBETWEEN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_0, grammarAccess.getRichStringLiteralInbetweenAccess().getValueCOMMENT_RICH_TEXT_INBETWEENTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRichStringLiteralInbetweenRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"org.eclipse.xtend.core.Xtend.COMMENT_RICH_TEXT_INBETWEEN");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringLiteralInbetween"


    // $ANTLR start "entryRuleRichStringLiteralEnd"
    // InternalXtend.g:5743:1: entryRuleRichStringLiteralEnd returns [EObject current=null] : iv_ruleRichStringLiteralEnd= ruleRichStringLiteralEnd EOF ;
    public final EObject entryRuleRichStringLiteralEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringLiteralEnd = null;


        try {
            // InternalXtend.g:5744:2: (iv_ruleRichStringLiteralEnd= ruleRichStringLiteralEnd EOF )
            // InternalXtend.g:5745:2: iv_ruleRichStringLiteralEnd= ruleRichStringLiteralEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringLiteralEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringLiteralEnd=ruleRichStringLiteralEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringLiteralEnd"


    // $ANTLR start "ruleRichStringLiteralEnd"
    // InternalXtend.g:5752:1: ruleRichStringLiteralEnd returns [EObject current=null] : ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) ) ) ;
    public final EObject ruleRichStringLiteralEnd() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;
        Token lv_value_2_0=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:5755:28: ( ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) ) ) )
            // InternalXtend.g:5756:1: ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) ) )
            {
            // InternalXtend.g:5756:1: ( () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) ) )
            // InternalXtend.g:5756:2: () ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) )
            {
            // InternalXtend.g:5756:2: ()
            // InternalXtend.g:5757:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringLiteralEndAccess().getRichStringLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:5762:2: ( ( (lv_value_1_0= RULE_RICH_TEXT_END ) ) | ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) ) )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==RULE_RICH_TEXT_END) ) {
                alt155=1;
            }
            else if ( (LA155_0==RULE_COMMENT_RICH_TEXT_END) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // InternalXtend.g:5762:3: ( (lv_value_1_0= RULE_RICH_TEXT_END ) )
                    {
                    // InternalXtend.g:5762:3: ( (lv_value_1_0= RULE_RICH_TEXT_END ) )
                    // InternalXtend.g:5763:1: (lv_value_1_0= RULE_RICH_TEXT_END )
                    {
                    // InternalXtend.g:5763:1: (lv_value_1_0= RULE_RICH_TEXT_END )
                    // InternalXtend.g:5764:3: lv_value_1_0= RULE_RICH_TEXT_END
                    {
                    lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_END,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_1_0, grammarAccess.getRichStringLiteralEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRichStringLiteralEndRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_1_0, 
                              		"org.eclipse.xtend.core.Xtend.RICH_TEXT_END");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:5781:6: ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) )
                    {
                    // InternalXtend.g:5781:6: ( (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END ) )
                    // InternalXtend.g:5782:1: (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END )
                    {
                    // InternalXtend.g:5782:1: (lv_value_2_0= RULE_COMMENT_RICH_TEXT_END )
                    // InternalXtend.g:5783:3: lv_value_2_0= RULE_COMMENT_RICH_TEXT_END
                    {
                    lv_value_2_0=(Token)match(input,RULE_COMMENT_RICH_TEXT_END,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_0, grammarAccess.getRichStringLiteralEndAccess().getValueCOMMENT_RICH_TEXT_ENDTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRichStringLiteralEndRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"org.eclipse.xtend.core.Xtend.COMMENT_RICH_TEXT_END");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringLiteralEnd"


    // $ANTLR start "entryRuleInternalRichString"
    // InternalXtend.g:5807:1: entryRuleInternalRichString returns [EObject current=null] : iv_ruleInternalRichString= ruleInternalRichString EOF ;
    public final EObject entryRuleInternalRichString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInternalRichString = null;


        try {
            // InternalXtend.g:5808:2: (iv_ruleInternalRichString= ruleInternalRichString EOF )
            // InternalXtend.g:5809:2: iv_ruleInternalRichString= ruleInternalRichString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInternalRichStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInternalRichString=ruleInternalRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInternalRichString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInternalRichString"


    // $ANTLR start "ruleInternalRichString"
    // InternalXtend.g:5816:1: ruleInternalRichString returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* ) ) ;
    public final EObject ruleInternalRichString() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_1_0 = null;

        EObject lv_expressions_2_0 = null;

        EObject lv_expressions_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5819:28: ( ( () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* ) ) )
            // InternalXtend.g:5820:1: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* ) )
            {
            // InternalXtend.g:5820:1: ( () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* ) )
            // InternalXtend.g:5820:2: () ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* )
            {
            // InternalXtend.g:5820:2: ()
            // InternalXtend.g:5821:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getInternalRichStringAccess().getRichStringAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:5826:2: ( ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )* )
            // InternalXtend.g:5826:3: ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) ) ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )*
            {
            // InternalXtend.g:5826:3: ( (lv_expressions_1_0= ruleRichStringLiteralInbetween ) )
            // InternalXtend.g:5827:1: (lv_expressions_1_0= ruleRichStringLiteralInbetween )
            {
            // InternalXtend.g:5827:1: (lv_expressions_1_0= ruleRichStringLiteralInbetween )
            // InternalXtend.g:5828:3: lv_expressions_1_0= ruleRichStringLiteralInbetween
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInternalRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_0_0()); 
              	    
            }
            pushFollow(FOLLOW_69);
            lv_expressions_1_0=ruleRichStringLiteralInbetween();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInternalRichStringRule());
              	        }
                     		add(
                     			current, 
                     			"expressions",
                      		lv_expressions_1_0, 
                      		"org.eclipse.xtend.core.Xtend.RichStringLiteralInbetween");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:5844:2: ( ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) ) )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==KW_Package||(LA157_0>=KW_Class && LA157_0<=KW_LessThanSign)||(LA157_0>=KW_Extends && LA157_0<=KW_LeftCurlyBracket)||(LA157_0>=KW_Interface && LA157_0<=KW_LeftParenthesis)||(LA157_0>=KW_Extension && LA157_0<=KW_New)||(LA157_0>=KW_Public && LA157_0<=KW_Create)||(LA157_0>=KW_AFTER && LA157_0<=KW_Import)||LA157_0==KW_Switch||LA157_0==KW_FOR||LA157_0==KW_IF||(LA157_0>=KW_NumberSign && LA157_0<=KW_LeftSquareBracket)||(LA157_0>=KW_PlusSign && LA157_0<=KW_HyphenMinus)||LA157_0==KW_ExclamationMark||LA157_0==KW_If||(LA157_0>=KW_For && LA157_0<=KW_Try)||(LA157_0>=RULE_ID && LA157_0<=RULE_COMMENT_RICH_TEXT_INBETWEEN)||(LA157_0>=RULE_HEX && LA157_0<=RULE_DECIMAL)) ) {
                    alt157=1;
                }


                switch (alt157) {
            	case 1 :
            	    // InternalXtend.g:5844:3: ( (lv_expressions_2_0= ruleRichStringPart ) )? ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) )
            	    {
            	    // InternalXtend.g:5844:3: ( (lv_expressions_2_0= ruleRichStringPart ) )?
            	    int alt156=2;
            	    int LA156_0 = input.LA(1);

            	    if ( (LA156_0==KW_Package||(LA156_0>=KW_Class && LA156_0<=KW_LessThanSign)||(LA156_0>=KW_Extends && LA156_0<=KW_LeftCurlyBracket)||(LA156_0>=KW_Interface && LA156_0<=KW_LeftParenthesis)||(LA156_0>=KW_Extension && LA156_0<=KW_New)||(LA156_0>=KW_Public && LA156_0<=KW_Create)||(LA156_0>=KW_AFTER && LA156_0<=KW_Import)||LA156_0==KW_Switch||LA156_0==KW_FOR||LA156_0==KW_IF||(LA156_0>=KW_NumberSign && LA156_0<=KW_LeftSquareBracket)||(LA156_0>=KW_PlusSign && LA156_0<=KW_HyphenMinus)||LA156_0==KW_ExclamationMark||LA156_0==KW_If||(LA156_0>=KW_For && LA156_0<=KW_Try)||(LA156_0>=RULE_ID && LA156_0<=RULE_RICH_TEXT_START)||(LA156_0>=RULE_HEX && LA156_0<=RULE_DECIMAL)) ) {
            	        alt156=1;
            	    }
            	    switch (alt156) {
            	        case 1 :
            	            // InternalXtend.g:5845:1: (lv_expressions_2_0= ruleRichStringPart )
            	            {
            	            // InternalXtend.g:5845:1: (lv_expressions_2_0= ruleRichStringPart )
            	            // InternalXtend.g:5846:3: lv_expressions_2_0= ruleRichStringPart
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getInternalRichStringAccess().getExpressionsRichStringPartParserRuleCall_1_1_0_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_70);
            	            lv_expressions_2_0=ruleRichStringPart();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getInternalRichStringRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"expressions",
            	                      		lv_expressions_2_0, 
            	                      		"org.eclipse.xtend.core.Xtend.RichStringPart");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalXtend.g:5862:3: ( (lv_expressions_3_0= ruleRichStringLiteralInbetween ) )
            	    // InternalXtend.g:5863:1: (lv_expressions_3_0= ruleRichStringLiteralInbetween )
            	    {
            	    // InternalXtend.g:5863:1: (lv_expressions_3_0= ruleRichStringLiteralInbetween )
            	    // InternalXtend.g:5864:3: lv_expressions_3_0= ruleRichStringLiteralInbetween
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInternalRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_expressions_3_0=ruleRichStringLiteralInbetween();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInternalRichStringRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_3_0, 
            	              		"org.eclipse.xtend.core.Xtend.RichStringLiteralInbetween");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInternalRichString"


    // $ANTLR start "entryRuleRichStringPart"
    // InternalXtend.g:5888:1: entryRuleRichStringPart returns [EObject current=null] : iv_ruleRichStringPart= ruleRichStringPart EOF ;
    public final EObject entryRuleRichStringPart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringPart = null;


        try {
            // InternalXtend.g:5889:2: (iv_ruleRichStringPart= ruleRichStringPart EOF )
            // InternalXtend.g:5890:2: iv_ruleRichStringPart= ruleRichStringPart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringPartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringPart=ruleRichStringPart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringPart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringPart"


    // $ANTLR start "ruleRichStringPart"
    // InternalXtend.g:5897:1: ruleRichStringPart returns [EObject current=null] : (this_XExpressionOrVarDeclaration_0= ruleXExpressionOrVarDeclaration | this_RichStringForLoop_1= ruleRichStringForLoop | this_RichStringIf_2= ruleRichStringIf ) ;
    public final EObject ruleRichStringPart() throws RecognitionException {
        EObject current = null;

        EObject this_XExpressionOrVarDeclaration_0 = null;

        EObject this_RichStringForLoop_1 = null;

        EObject this_RichStringIf_2 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5900:28: ( (this_XExpressionOrVarDeclaration_0= ruleXExpressionOrVarDeclaration | this_RichStringForLoop_1= ruleRichStringForLoop | this_RichStringIf_2= ruleRichStringIf ) )
            // InternalXtend.g:5901:1: (this_XExpressionOrVarDeclaration_0= ruleXExpressionOrVarDeclaration | this_RichStringForLoop_1= ruleRichStringForLoop | this_RichStringIf_2= ruleRichStringIf )
            {
            // InternalXtend.g:5901:1: (this_XExpressionOrVarDeclaration_0= ruleXExpressionOrVarDeclaration | this_RichStringForLoop_1= ruleRichStringForLoop | this_RichStringIf_2= ruleRichStringIf )
            int alt158=3;
            switch ( input.LA(1) ) {
            case KW_Package:
            case KW_Class:
            case KW_LessThanSign:
            case KW_Extends:
            case KW_Implements:
            case KW_LeftCurlyBracket:
            case KW_Interface:
            case KW_Enum:
            case KW_Annotation:
            case KW_LeftParenthesis:
            case KW_Extension:
            case KW_Throws:
            case KW_New:
            case KW_Public:
            case KW_Private:
            case KW_Protected:
            case KW_Abstract:
            case KW_Static:
            case KW_Dispatch:
            case KW_Final:
            case KW_Strictfp:
            case KW_Native:
            case KW_Volatile:
            case KW_Synchronized:
            case KW_Transient:
            case KW_Val:
            case KW_Var:
            case KW_Def:
            case KW_Override:
            case KW_Create:
            case KW_AFTER:
            case KW_BEFORE:
            case KW_SEPARATOR:
            case KW_Import:
            case KW_Switch:
            case KW_NumberSign:
            case KW_LeftSquareBracket:
            case KW_PlusSign:
            case KW_HyphenMinus:
            case KW_ExclamationMark:
            case KW_If:
            case KW_For:
            case KW_While:
            case KW_Do:
            case KW_Super:
            case KW_False:
            case KW_True:
            case KW_Null:
            case KW_Typeof:
            case KW_Throw:
            case KW_Return:
            case KW_Try:
            case RULE_ID:
            case RULE_STRING:
            case RULE_RICH_TEXT:
            case RULE_RICH_TEXT_START:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt158=1;
                }
                break;
            case KW_FOR:
                {
                alt158=2;
                }
                break;
            case KW_IF:
                {
                alt158=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }

            switch (alt158) {
                case 1 :
                    // InternalXtend.g:5902:5: this_XExpressionOrVarDeclaration_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRichStringPartAccess().getXExpressionOrVarDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpressionOrVarDeclaration_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XExpressionOrVarDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:5912:5: this_RichStringForLoop_1= ruleRichStringForLoop
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringForLoopParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RichStringForLoop_1=ruleRichStringForLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RichStringForLoop_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:5922:5: this_RichStringIf_2= ruleRichStringIf
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRichStringPartAccess().getRichStringIfParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RichStringIf_2=ruleRichStringIf();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RichStringIf_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringPart"


    // $ANTLR start "entryRuleRichStringForLoop"
    // InternalXtend.g:5938:1: entryRuleRichStringForLoop returns [EObject current=null] : iv_ruleRichStringForLoop= ruleRichStringForLoop EOF ;
    public final EObject entryRuleRichStringForLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringForLoop = null;


        try {
            // InternalXtend.g:5939:2: (iv_ruleRichStringForLoop= ruleRichStringForLoop EOF )
            // InternalXtend.g:5940:2: iv_ruleRichStringForLoop= ruleRichStringForLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringForLoopRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringForLoop=ruleRichStringForLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringForLoop; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringForLoop"


    // $ANTLR start "ruleRichStringForLoop"
    // InternalXtend.g:5947:1: ruleRichStringForLoop returns [EObject current=null] : ( () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR' ) ;
    public final EObject ruleRichStringForLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_forExpression_4_0 = null;

        EObject lv_before_6_0 = null;

        EObject lv_separator_8_0 = null;

        EObject lv_after_10_0 = null;

        EObject lv_eachExpression_11_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:5950:28: ( ( () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR' ) )
            // InternalXtend.g:5951:1: ( () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR' )
            {
            // InternalXtend.g:5951:1: ( () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR' )
            // InternalXtend.g:5951:2: () otherlv_1= 'FOR' ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) ) otherlv_3= ':' ( (lv_forExpression_4_0= ruleXExpression ) ) (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )? (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )? (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )? ( (lv_eachExpression_11_0= ruleInternalRichString ) ) otherlv_12= 'ENDFOR'
            {
            // InternalXtend.g:5951:2: ()
            // InternalXtend.g:5952:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringForLoopAccess().getRichStringForLoopAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_FOR,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRichStringForLoopAccess().getFORKeyword_1());
                  
            }
            // InternalXtend.g:5961:1: ( (lv_declaredParam_2_0= ruleJvmFormalParameter ) )
            // InternalXtend.g:5962:1: (lv_declaredParam_2_0= ruleJvmFormalParameter )
            {
            // InternalXtend.g:5962:1: (lv_declaredParam_2_0= ruleJvmFormalParameter )
            // InternalXtend.g:5963:3: lv_declaredParam_2_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_55);
            lv_declaredParam_2_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_2_0, 
                      		"org.eclipse.xtend.core.Xtend.JvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getRichStringForLoopAccess().getColonKeyword_3());
                  
            }
            // InternalXtend.g:5983:1: ( (lv_forExpression_4_0= ruleXExpression ) )
            // InternalXtend.g:5984:1: (lv_forExpression_4_0= ruleXExpression )
            {
            // InternalXtend.g:5984:1: (lv_forExpression_4_0= ruleXExpression )
            // InternalXtend.g:5985:3: lv_forExpression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getForExpressionXExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_71);
            lv_forExpression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
              	        }
                     		set(
                     			current, 
                     			"forExpression",
                      		lv_forExpression_4_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:6001:2: (otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==KW_BEFORE) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalXtend.g:6001:4: otherlv_5= 'BEFORE' ( (lv_before_6_0= ruleXExpression ) )
                    {
                    otherlv_5=(Token)match(input,KW_BEFORE,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getRichStringForLoopAccess().getBEFOREKeyword_5_0());
                          
                    }
                    // InternalXtend.g:6005:1: ( (lv_before_6_0= ruleXExpression ) )
                    // InternalXtend.g:6006:1: (lv_before_6_0= ruleXExpression )
                    {
                    // InternalXtend.g:6006:1: (lv_before_6_0= ruleXExpression )
                    // InternalXtend.g:6007:3: lv_before_6_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getBeforeXExpressionParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_71);
                    lv_before_6_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
                      	        }
                             		set(
                             			current, 
                             			"before",
                              		lv_before_6_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalXtend.g:6023:4: (otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) ) )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==KW_SEPARATOR) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalXtend.g:6023:6: otherlv_7= 'SEPARATOR' ( (lv_separator_8_0= ruleXExpression ) )
                    {
                    otherlv_7=(Token)match(input,KW_SEPARATOR,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getRichStringForLoopAccess().getSEPARATORKeyword_6_0());
                          
                    }
                    // InternalXtend.g:6027:1: ( (lv_separator_8_0= ruleXExpression ) )
                    // InternalXtend.g:6028:1: (lv_separator_8_0= ruleXExpression )
                    {
                    // InternalXtend.g:6028:1: (lv_separator_8_0= ruleXExpression )
                    // InternalXtend.g:6029:3: lv_separator_8_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getSeparatorXExpressionParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_71);
                    lv_separator_8_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
                      	        }
                             		set(
                             			current, 
                             			"separator",
                              		lv_separator_8_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalXtend.g:6045:4: (otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==KW_AFTER) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalXtend.g:6045:6: otherlv_9= 'AFTER' ( (lv_after_10_0= ruleXExpression ) )
                    {
                    otherlv_9=(Token)match(input,KW_AFTER,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getRichStringForLoopAccess().getAFTERKeyword_7_0());
                          
                    }
                    // InternalXtend.g:6049:1: ( (lv_after_10_0= ruleXExpression ) )
                    // InternalXtend.g:6050:1: (lv_after_10_0= ruleXExpression )
                    {
                    // InternalXtend.g:6050:1: (lv_after_10_0= ruleXExpression )
                    // InternalXtend.g:6051:3: lv_after_10_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getAfterXExpressionParserRuleCall_7_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_71);
                    lv_after_10_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
                      	        }
                             		set(
                             			current, 
                             			"after",
                              		lv_after_10_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalXtend.g:6067:4: ( (lv_eachExpression_11_0= ruleInternalRichString ) )
            // InternalXtend.g:6068:1: (lv_eachExpression_11_0= ruleInternalRichString )
            {
            // InternalXtend.g:6068:1: (lv_eachExpression_11_0= ruleInternalRichString )
            // InternalXtend.g:6069:3: lv_eachExpression_11_0= ruleInternalRichString
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRichStringForLoopAccess().getEachExpressionInternalRichStringParserRuleCall_8_0()); 
              	    
            }
            pushFollow(FOLLOW_72);
            lv_eachExpression_11_0=ruleInternalRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRichStringForLoopRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_11_0, 
                      		"org.eclipse.xtend.core.Xtend.InternalRichString");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_12=(Token)match(input,KW_ENDFOR,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getRichStringForLoopAccess().getENDFORKeyword_9());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringForLoop"


    // $ANTLR start "entryRuleRichStringIf"
    // InternalXtend.g:6097:1: entryRuleRichStringIf returns [EObject current=null] : iv_ruleRichStringIf= ruleRichStringIf EOF ;
    public final EObject entryRuleRichStringIf() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringIf = null;


        try {
            // InternalXtend.g:6098:2: (iv_ruleRichStringIf= ruleRichStringIf EOF )
            // InternalXtend.g:6099:2: iv_ruleRichStringIf= ruleRichStringIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringIfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringIf=ruleRichStringIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringIf"


    // $ANTLR start "ruleRichStringIf"
    // InternalXtend.g:6106:1: ruleRichStringIf returns [EObject current=null] : ( () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF' ) ;
    public final EObject ruleRichStringIf() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_if_2_0 = null;

        EObject lv_then_3_0 = null;

        EObject lv_elseIfs_4_0 = null;

        EObject lv_else_6_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6109:28: ( ( () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF' ) )
            // InternalXtend.g:6110:1: ( () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF' )
            {
            // InternalXtend.g:6110:1: ( () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF' )
            // InternalXtend.g:6110:2: () otherlv_1= 'IF' ( (lv_if_2_0= ruleXExpression ) ) ( (lv_then_3_0= ruleInternalRichString ) ) ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )* (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )? otherlv_7= 'ENDIF'
            {
            // InternalXtend.g:6110:2: ()
            // InternalXtend.g:6111:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRichStringIfAccess().getRichStringIfAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_IF,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRichStringIfAccess().getIFKeyword_1());
                  
            }
            // InternalXtend.g:6120:1: ( (lv_if_2_0= ruleXExpression ) )
            // InternalXtend.g:6121:1: (lv_if_2_0= ruleXExpression )
            {
            // InternalXtend.g:6121:1: (lv_if_2_0= ruleXExpression )
            // InternalXtend.g:6122:3: lv_if_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRichStringIfAccess().getIfXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_71);
            lv_if_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRichStringIfRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:6138:2: ( (lv_then_3_0= ruleInternalRichString ) )
            // InternalXtend.g:6139:1: (lv_then_3_0= ruleInternalRichString )
            {
            // InternalXtend.g:6139:1: (lv_then_3_0= ruleInternalRichString )
            // InternalXtend.g:6140:3: lv_then_3_0= ruleInternalRichString
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRichStringIfAccess().getThenInternalRichStringParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_then_3_0=ruleInternalRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRichStringIfRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_3_0, 
                      		"org.eclipse.xtend.core.Xtend.InternalRichString");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:6156:2: ( (lv_elseIfs_4_0= ruleRichStringElseIf ) )*
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==KW_ELSEIF) ) {
                    alt162=1;
                }


                switch (alt162) {
            	case 1 :
            	    // InternalXtend.g:6157:1: (lv_elseIfs_4_0= ruleRichStringElseIf )
            	    {
            	    // InternalXtend.g:6157:1: (lv_elseIfs_4_0= ruleRichStringElseIf )
            	    // InternalXtend.g:6158:3: lv_elseIfs_4_0= ruleRichStringElseIf
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRichStringIfAccess().getElseIfsRichStringElseIfParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_elseIfs_4_0=ruleRichStringElseIf();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRichStringIfRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elseIfs",
            	              		lv_elseIfs_4_0, 
            	              		"org.eclipse.xtend.core.Xtend.RichStringElseIf");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);

            // InternalXtend.g:6174:3: (otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==KW_ELSE) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalXtend.g:6174:5: otherlv_5= 'ELSE' ( (lv_else_6_0= ruleInternalRichString ) )
                    {
                    otherlv_5=(Token)match(input,KW_ELSE,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getRichStringIfAccess().getELSEKeyword_5_0());
                          
                    }
                    // InternalXtend.g:6178:1: ( (lv_else_6_0= ruleInternalRichString ) )
                    // InternalXtend.g:6179:1: (lv_else_6_0= ruleInternalRichString )
                    {
                    // InternalXtend.g:6179:1: (lv_else_6_0= ruleInternalRichString )
                    // InternalXtend.g:6180:3: lv_else_6_0= ruleInternalRichString
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRichStringIfAccess().getElseInternalRichStringParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_74);
                    lv_else_6_0=ruleInternalRichString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRichStringIfRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_6_0, 
                              		"org.eclipse.xtend.core.Xtend.InternalRichString");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,KW_ENDIF,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getRichStringIfAccess().getENDIFKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringIf"


    // $ANTLR start "entryRuleRichStringElseIf"
    // InternalXtend.g:6208:1: entryRuleRichStringElseIf returns [EObject current=null] : iv_ruleRichStringElseIf= ruleRichStringElseIf EOF ;
    public final EObject entryRuleRichStringElseIf() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRichStringElseIf = null;


        try {
            // InternalXtend.g:6209:2: (iv_ruleRichStringElseIf= ruleRichStringElseIf EOF )
            // InternalXtend.g:6210:2: iv_ruleRichStringElseIf= ruleRichStringElseIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRichStringElseIfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringElseIf=ruleRichStringElseIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringElseIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRichStringElseIf"


    // $ANTLR start "ruleRichStringElseIf"
    // InternalXtend.g:6217:1: ruleRichStringElseIf returns [EObject current=null] : (otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) ) ) ;
    public final EObject ruleRichStringElseIf() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_if_1_0 = null;

        EObject lv_then_2_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6220:28: ( (otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) ) ) )
            // InternalXtend.g:6221:1: (otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) ) )
            {
            // InternalXtend.g:6221:1: (otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) ) )
            // InternalXtend.g:6221:3: otherlv_0= 'ELSEIF' ( (lv_if_1_0= ruleXExpression ) ) ( (lv_then_2_0= ruleInternalRichString ) )
            {
            otherlv_0=(Token)match(input,KW_ELSEIF,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRichStringElseIfAccess().getELSEIFKeyword_0());
                  
            }
            // InternalXtend.g:6225:1: ( (lv_if_1_0= ruleXExpression ) )
            // InternalXtend.g:6226:1: (lv_if_1_0= ruleXExpression )
            {
            // InternalXtend.g:6226:1: (lv_if_1_0= ruleXExpression )
            // InternalXtend.g:6227:3: lv_if_1_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRichStringElseIfAccess().getIfXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_71);
            lv_if_1_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRichStringElseIfRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_1_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:6243:2: ( (lv_then_2_0= ruleInternalRichString ) )
            // InternalXtend.g:6244:1: (lv_then_2_0= ruleInternalRichString )
            {
            // InternalXtend.g:6244:1: (lv_then_2_0= ruleInternalRichString )
            // InternalXtend.g:6245:3: lv_then_2_0= ruleInternalRichString
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRichStringElseIfAccess().getThenInternalRichStringParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_then_2_0=ruleInternalRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRichStringElseIfRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_2_0, 
                      		"org.eclipse.xtend.core.Xtend.InternalRichString");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRichStringElseIf"


    // $ANTLR start "entryRuleXAnnotation"
    // InternalXtend.g:6269:1: entryRuleXAnnotation returns [EObject current=null] : iv_ruleXAnnotation= ruleXAnnotation EOF ;
    public final EObject entryRuleXAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotation = null;


        try {
            // InternalXtend.g:6270:2: (iv_ruleXAnnotation= ruleXAnnotation EOF )
            // InternalXtend.g:6271:2: iv_ruleXAnnotation= ruleXAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotation=ruleXAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotation"


    // $ANTLR start "ruleXAnnotation"
    // InternalXtend.g:6278:1: ruleXAnnotation returns [EObject current=null] : ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) ;
    public final EObject ruleXAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_elementValuePairs_4_0 = null;

        EObject lv_elementValuePairs_6_0 = null;

        EObject lv_value_7_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6281:28: ( ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) )
            // InternalXtend.g:6282:1: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            {
            // InternalXtend.g:6282:1: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            // InternalXtend.g:6282:2: () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            {
            // InternalXtend.g:6282:2: ()
            // InternalXtend.g:6283:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXAnnotationAccess().getXAnnotationAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_CommercialAt,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXAnnotationAccess().getCommercialAtKeyword_1());
                  
            }
            // InternalXtend.g:6292:1: ( ( ruleQualifiedName ) )
            // InternalXtend.g:6293:1: ( ruleQualifiedName )
            {
            // InternalXtend.g:6293:1: ( ruleQualifiedName )
            // InternalXtend.g:6294:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXAnnotationRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXAnnotationAccess().getAnnotationTypeJvmAnnotationTypeCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:6307:2: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            int alt166=2;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // InternalXtend.g:6307:3: ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')'
                    {
                    // InternalXtend.g:6307:3: ( ( '(' )=>otherlv_3= '(' )
                    // InternalXtend.g:6307:4: ( '(' )=>otherlv_3= '('
                    {
                    otherlv_3=(Token)match(input,KW_LeftParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getXAnnotationAccess().getLeftParenthesisKeyword_3_0());
                          
                    }

                    }

                    // InternalXtend.g:6312:2: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?
                    int alt165=3;
                    alt165 = dfa165.predict(input);
                    switch (alt165) {
                        case 1 :
                            // InternalXtend.g:6312:3: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            {
                            // InternalXtend.g:6312:3: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            // InternalXtend.g:6312:4: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            {
                            // InternalXtend.g:6312:4: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
                            // InternalXtend.g:6312:5: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            {
                            // InternalXtend.g:6318:1: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            // InternalXtend.g:6319:3: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"elementValuePairs",
                                      		lv_elementValuePairs_4_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:6335:2: (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            loop164:
                            do {
                                int alt164=2;
                                int LA164_0 = input.LA(1);

                                if ( (LA164_0==KW_Comma) ) {
                                    alt164=1;
                                }


                                switch (alt164) {
                            	case 1 :
                            	    // InternalXtend.g:6335:4: otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    {
                            	    otherlv_5=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_5, grammarAccess.getXAnnotationAccess().getCommaKeyword_3_1_0_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:6339:1: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    // InternalXtend.g:6339:2: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    {
                            	    // InternalXtend.g:6345:1: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    // InternalXtend.g:6346:3: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elementValuePairs",
                            	              		lv_elementValuePairs_6_0, 
                            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop164;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:6363:6: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            {
                            // InternalXtend.g:6363:6: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            // InternalXtend.g:6364:1: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            {
                            // InternalXtend.g:6364:1: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            // InternalXtend.g:6365:3: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_65);
                            lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"value",
                                      		lv_value_7_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValueOrCommaList");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXAnnotationAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotation"


    // $ANTLR start "entryRuleXAnnotationElementValuePair"
    // InternalXtend.g:6393:1: entryRuleXAnnotationElementValuePair returns [EObject current=null] : iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF ;
    public final EObject entryRuleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValuePair = null;


        try {
            // InternalXtend.g:6394:2: (iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF )
            // InternalXtend.g:6395:2: iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValuePair=ruleXAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValuePair"


    // $ANTLR start "ruleXAnnotationElementValuePair"
    // InternalXtend.g:6402:1: ruleXAnnotationElementValuePair returns [EObject current=null] : ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) ;
    public final EObject ruleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_2_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6405:28: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) )
            // InternalXtend.g:6406:1: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            {
            // InternalXtend.g:6406:1: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            // InternalXtend.g:6406:2: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            {
            // InternalXtend.g:6406:2: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) )
            // InternalXtend.g:6406:3: ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' )
            {
            // InternalXtend.g:6411:5: ( ( ( ruleValidID ) ) otherlv_1= '=' )
            // InternalXtend.g:6411:6: ( ( ruleValidID ) ) otherlv_1= '='
            {
            // InternalXtend.g:6411:6: ( ( ruleValidID ) )
            // InternalXtend.g:6412:1: ( ruleValidID )
            {
            // InternalXtend.g:6412:1: ( ruleValidID )
            // InternalXtend.g:6413:3: ruleValidID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXAnnotationElementValuePairRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getElementJvmOperationCrossReference_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_77);
            ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,KW_EqualsSign,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValuePairAccess().getEqualsSignKeyword_0_0_1());
                  
            }

            }


            }

            // InternalXtend.g:6430:3: ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            // InternalXtend.g:6431:1: (lv_value_2_0= ruleXAnnotationElementValue )
            {
            // InternalXtend.g:6431:1: (lv_value_2_0= ruleXAnnotationElementValue )
            // InternalXtend.g:6432:3: lv_value_2_0= ruleXAnnotationElementValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getValueXAnnotationElementValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValue");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValuePair"


    // $ANTLR start "entryRuleXAnnotationElementValueOrCommaList"
    // InternalXtend.g:6456:1: entryRuleXAnnotationElementValueOrCommaList returns [EObject current=null] : iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF ;
    public final EObject entryRuleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValueOrCommaList = null;


        try {
            // InternalXtend.g:6457:2: (iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF )
            // InternalXtend.g:6458:2: iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValueOrCommaList=ruleXAnnotationElementValueOrCommaList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValueOrCommaList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValueOrCommaList"


    // $ANTLR start "ruleXAnnotationElementValueOrCommaList"
    // InternalXtend.g:6465:1: ruleXAnnotationElementValueOrCommaList returns [EObject current=null] : ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) ) ;
    public final EObject ruleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject this_XAnnotationOrExpression_7 = null;

        EObject lv_elements_10_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6468:28: ( ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) ) )
            // InternalXtend.g:6469:1: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )
            {
            // InternalXtend.g:6469:1: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )
            int alt171=2;
            alt171 = dfa171.predict(input);
            switch (alt171) {
                case 1 :
                    // InternalXtend.g:6469:2: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    {
                    // InternalXtend.g:6469:2: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    // InternalXtend.g:6469:3: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']'
                    {
                    // InternalXtend.g:6469:3: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) )
                    // InternalXtend.g:6469:4: ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' )
                    {
                    // InternalXtend.g:6472:5: ( () otherlv_1= '#' otherlv_2= '[' )
                    // InternalXtend.g:6472:6: () otherlv_1= '#' otherlv_2= '['
                    {
                    // InternalXtend.g:6472:6: ()
                    // InternalXtend.g:6473:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXListLiteralAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getNumberSignKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getLeftSquareBracketKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    // InternalXtend.g:6486:3: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==KW_Package||(LA168_0>=KW_Class && LA168_0<=KW_LessThanSign)||(LA168_0>=KW_Extends && LA168_0<=KW_LeftCurlyBracket)||(LA168_0>=KW_Interface && LA168_0<=KW_LeftParenthesis)||(LA168_0>=KW_Extension && LA168_0<=KW_New)||(LA168_0>=KW_Public && LA168_0<=KW_Transient)||(LA168_0>=KW_Def && LA168_0<=KW_Create)||(LA168_0>=KW_AFTER && LA168_0<=KW_Import)||LA168_0==KW_Switch||(LA168_0>=KW_CommercialAt && LA168_0<=KW_LeftSquareBracket)||(LA168_0>=KW_PlusSign && LA168_0<=KW_HyphenMinus)||LA168_0==KW_ExclamationMark||LA168_0==KW_If||(LA168_0>=KW_For && LA168_0<=KW_Try)||(LA168_0>=RULE_ID && LA168_0<=RULE_RICH_TEXT_START)||(LA168_0>=RULE_HEX && LA168_0<=RULE_DECIMAL)) ) {
                        alt168=1;
                    }
                    switch (alt168) {
                        case 1 :
                            // InternalXtend.g:6486:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalXtend.g:6486:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                            // InternalXtend.g:6487:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            {
                            // InternalXtend.g:6487:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            // InternalXtend.g:6488:3: lv_elements_3_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_79);
                            lv_elements_3_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"elements",
                                      		lv_elements_3_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:6504:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            loop167:
                            do {
                                int alt167=2;
                                int LA167_0 = input.LA(1);

                                if ( (LA167_0==KW_Comma) ) {
                                    alt167=1;
                                }


                                switch (alt167) {
                            	case 1 :
                            	    // InternalXtend.g:6504:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_4, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:6508:1: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    // InternalXtend.g:6509:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalXtend.g:6509:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    // InternalXtend.g:6510:3: lv_elements_5_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_79);
                            	    lv_elements_5_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_5_0, 
                            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop167;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getRightSquareBracketKeyword_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:6531:6: (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? )
                    {
                    // InternalXtend.g:6531:6: (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? )
                    // InternalXtend.g:6532:5: this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )?
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXAnnotationOrExpressionParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_80);
                    this_XAnnotationOrExpression_7=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XAnnotationOrExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalXtend.g:6540:1: ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )?
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( (LA170_0==KW_Comma) ) {
                        alt170=1;
                    }
                    switch (alt170) {
                        case 1 :
                            // InternalXtend.g:6540:2: () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+
                            {
                            // InternalXtend.g:6540:2: ()
                            // InternalXtend.g:6541:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndAdd(
                                          grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXListLiteralElementsAction_1_1_0(),
                                          current);
                                  
                            }

                            }

                            // InternalXtend.g:6546:2: (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+
                            int cnt169=0;
                            loop169:
                            do {
                                int alt169=2;
                                int LA169_0 = input.LA(1);

                                if ( (LA169_0==KW_Comma) ) {
                                    alt169=1;
                                }


                                switch (alt169) {
                            	case 1 :
                            	    // InternalXtend.g:6546:4: otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_9=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_9, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:6550:1: ( (lv_elements_10_0= ruleXAnnotationOrExpression ) )
                            	    // InternalXtend.g:6551:1: (lv_elements_10_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalXtend.g:6551:1: (lv_elements_10_0= ruleXAnnotationOrExpression )
                            	    // InternalXtend.g:6552:3: lv_elements_10_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_80);
                            	    lv_elements_10_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_10_0, 
                            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt169 >= 1 ) break loop169;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(169, input);
                                        throw eee;
                                }
                                cnt169++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValueOrCommaList"


    // $ANTLR start "entryRuleXAnnotationElementValue"
    // InternalXtend.g:6576:1: entryRuleXAnnotationElementValue returns [EObject current=null] : iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF ;
    public final EObject entryRuleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValue = null;


        try {
            // InternalXtend.g:6577:2: (iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF )
            // InternalXtend.g:6578:2: iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValue=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValue"


    // $ANTLR start "ruleXAnnotationElementValue"
    // InternalXtend.g:6585:1: ruleXAnnotationElementValue returns [EObject current=null] : ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject this_XAnnotationOrExpression_7 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6588:28: ( ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ) )
            // InternalXtend.g:6589:1: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )
            {
            // InternalXtend.g:6589:1: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )
            int alt174=2;
            alt174 = dfa174.predict(input);
            switch (alt174) {
                case 1 :
                    // InternalXtend.g:6589:2: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    {
                    // InternalXtend.g:6589:2: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    // InternalXtend.g:6589:3: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']'
                    {
                    // InternalXtend.g:6589:3: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) )
                    // InternalXtend.g:6589:4: ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' )
                    {
                    // InternalXtend.g:6592:5: ( () otherlv_1= '#' otherlv_2= '[' )
                    // InternalXtend.g:6592:6: () otherlv_1= '#' otherlv_2= '['
                    {
                    // InternalXtend.g:6592:6: ()
                    // InternalXtend.g:6593:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAnnotationElementValueAccess().getXListLiteralAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueAccess().getNumberSignKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXAnnotationElementValueAccess().getLeftSquareBracketKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    // InternalXtend.g:6606:3: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==KW_Package||(LA173_0>=KW_Class && LA173_0<=KW_LessThanSign)||(LA173_0>=KW_Extends && LA173_0<=KW_LeftCurlyBracket)||(LA173_0>=KW_Interface && LA173_0<=KW_LeftParenthesis)||(LA173_0>=KW_Extension && LA173_0<=KW_New)||(LA173_0>=KW_Public && LA173_0<=KW_Transient)||(LA173_0>=KW_Def && LA173_0<=KW_Create)||(LA173_0>=KW_AFTER && LA173_0<=KW_Import)||LA173_0==KW_Switch||(LA173_0>=KW_CommercialAt && LA173_0<=KW_LeftSquareBracket)||(LA173_0>=KW_PlusSign && LA173_0<=KW_HyphenMinus)||LA173_0==KW_ExclamationMark||LA173_0==KW_If||(LA173_0>=KW_For && LA173_0<=KW_Try)||(LA173_0>=RULE_ID && LA173_0<=RULE_RICH_TEXT_START)||(LA173_0>=RULE_HEX && LA173_0<=RULE_DECIMAL)) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // InternalXtend.g:6606:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalXtend.g:6606:4: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                            // InternalXtend.g:6607:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            {
                            // InternalXtend.g:6607:1: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            // InternalXtend.g:6608:3: lv_elements_3_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_79);
                            lv_elements_3_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"elements",
                                      		lv_elements_3_0, 
                                      		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:6624:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            loop172:
                            do {
                                int alt172=2;
                                int LA172_0 = input.LA(1);

                                if ( (LA172_0==KW_Comma) ) {
                                    alt172=1;
                                }


                                switch (alt172) {
                            	case 1 :
                            	    // InternalXtend.g:6624:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_4, grammarAccess.getXAnnotationElementValueAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:6628:1: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    // InternalXtend.g:6629:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalXtend.g:6629:1: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    // InternalXtend.g:6630:3: lv_elements_5_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_79);
                            	    lv_elements_5_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_5_0, 
                            	              		"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop172;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXAnnotationElementValueAccess().getRightSquareBracketKeyword_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:6652:5: this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getXAnnotationOrExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_7=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XAnnotationOrExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValue"


    // $ANTLR start "entryRuleXAnnotationOrExpression"
    // InternalXtend.g:6668:1: entryRuleXAnnotationOrExpression returns [EObject current=null] : iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF ;
    public final EObject entryRuleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationOrExpression = null;


        try {
            // InternalXtend.g:6669:2: (iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF )
            // InternalXtend.g:6670:2: iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationOrExpression=ruleXAnnotationOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationOrExpression"


    // $ANTLR start "ruleXAnnotationOrExpression"
    // InternalXtend.g:6677:1: ruleXAnnotationOrExpression returns [EObject current=null] : (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAnnotation_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6680:28: ( (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) )
            // InternalXtend.g:6681:1: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            {
            // InternalXtend.g:6681:1: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==KW_CommercialAt) ) {
                alt175=1;
            }
            else if ( (LA175_0==KW_Package||(LA175_0>=KW_Class && LA175_0<=KW_LessThanSign)||(LA175_0>=KW_Extends && LA175_0<=KW_LeftCurlyBracket)||(LA175_0>=KW_Interface && LA175_0<=KW_LeftParenthesis)||(LA175_0>=KW_Extension && LA175_0<=KW_New)||(LA175_0>=KW_Public && LA175_0<=KW_Transient)||(LA175_0>=KW_Def && LA175_0<=KW_Create)||(LA175_0>=KW_AFTER && LA175_0<=KW_Import)||LA175_0==KW_Switch||(LA175_0>=KW_NumberSign && LA175_0<=KW_LeftSquareBracket)||(LA175_0>=KW_PlusSign && LA175_0<=KW_HyphenMinus)||LA175_0==KW_ExclamationMark||LA175_0==KW_If||(LA175_0>=KW_For && LA175_0<=KW_Try)||(LA175_0>=RULE_ID && LA175_0<=RULE_RICH_TEXT_START)||(LA175_0>=RULE_HEX && LA175_0<=RULE_DECIMAL)) ) {
                alt175=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;
            }
            switch (alt175) {
                case 1 :
                    // InternalXtend.g:6682:5: this_XAnnotation_0= ruleXAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotation_0=ruleXAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:6692:5: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationOrExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalXtend.g:6708:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalXtend.g:6709:2: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalXtend.g:6710:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalXtend.g:6717:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6720:28: (this_XAssignment_0= ruleXAssignment )
            // InternalXtend.g:6722:5: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAssignment_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalXtend.g:6738:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalXtend.g:6739:2: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalXtend.g:6740:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalXtend.g:6747:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6750:28: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalXtend.g:6751:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalXtend.g:6751:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt177=2;
            alt177 = dfa177.predict(input);
            switch (alt177) {
                case 1 :
                    // InternalXtend.g:6751:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalXtend.g:6751:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalXtend.g:6751:3: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalXtend.g:6751:3: ()
                    // InternalXtend.g:6752:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:6757:2: ( ( ruleFeatureCallID ) )
                    // InternalXtend.g:6758:1: ( ruleFeatureCallID )
                    {
                    // InternalXtend.g:6758:1: ( ruleFeatureCallID )
                    // InternalXtend.g:6759:3: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXAssignmentRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_77);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_33);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalXtend.g:6780:1: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalXtend.g:6781:1: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalXtend.g:6781:1: (lv_value_3_0= ruleXAssignment )
                    // InternalXtend.g:6782:3: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:6799:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalXtend.g:6799:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalXtend.g:6800:5: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_81);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XOrExpression_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalXtend.g:6808:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt176=2;
                    alt176 = dfa176.predict(input);
                    switch (alt176) {
                        case 1 :
                            // InternalXtend.g:6808:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalXtend.g:6808:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalXtend.g:6808:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalXtend.g:6813:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalXtend.g:6813:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalXtend.g:6813:7: ()
                            // InternalXtend.g:6814:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                                          current);
                                  
                            }

                            }

                            // InternalXtend.g:6819:2: ( ( ruleOpMultiAssign ) )
                            // InternalXtend.g:6820:1: ( ruleOpMultiAssign )
                            {
                            // InternalXtend.g:6820:1: ( ruleOpMultiAssign )
                            // InternalXtend.g:6821:3: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getXAssignmentRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_33);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }

                            // InternalXtend.g:6834:4: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalXtend.g:6835:1: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalXtend.g:6835:1: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalXtend.g:6836:3: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rightOperand",
                                      		lv_rightOperand_7_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalXtend.g:6860:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalXtend.g:6861:2: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalXtend.g:6862:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalXtend.g:6869:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:6872:28: (kw= '=' )
            // InternalXtend.g:6874:2: kw= '='
            {
            kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalXtend.g:6887:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalXtend.g:6888:2: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalXtend.g:6889:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalXtend.g:6896:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:6899:28: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalXtend.g:6900:1: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalXtend.g:6900:1: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt179=7;
            switch ( input.LA(1) ) {
            case KW_PlusSignEqualsSign:
                {
                alt179=1;
                }
                break;
            case KW_HyphenMinusEqualsSign:
                {
                alt179=2;
                }
                break;
            case KW_AsteriskEqualsSign:
                {
                alt179=3;
                }
                break;
            case KW_SolidusEqualsSign:
                {
                alt179=4;
                }
                break;
            case KW_PercentSignEqualsSign:
                {
                alt179=5;
                }
                break;
            case KW_LessThanSign:
                {
                alt179=6;
                }
                break;
            case KW_GreaterThanSign:
                {
                alt179=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }

            switch (alt179) {
                case 1 :
                    // InternalXtend.g:6901:2: kw= '+='
                    {
                    kw=(Token)match(input,KW_PlusSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:6908:2: kw= '-='
                    {
                    kw=(Token)match(input,KW_HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:6915:2: kw= '*='
                    {
                    kw=(Token)match(input,KW_AsteriskEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:6922:2: kw= '/='
                    {
                    kw=(Token)match(input,KW_SolidusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalXtend.g:6929:2: kw= '%='
                    {
                    kw=(Token)match(input,KW_PercentSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalXtend.g:6935:6: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalXtend.g:6935:6: (kw= '<' kw= '<' kw= '=' )
                    // InternalXtend.g:6936:2: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); 
                          
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); 
                          
                    }
                    kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalXtend.g:6954:6: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalXtend.g:6954:6: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalXtend.g:6955:2: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); 
                          
                    }
                    // InternalXtend.g:6960:1: (kw= '>' )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==KW_GreaterThanSign) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalXtend.g:6961:2: kw= '>'
                            {
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); 
                                  
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,KW_GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalXtend.g:6980:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalXtend.g:6981:2: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalXtend.g:6982:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalXtend.g:6989:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:6992:28: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalXtend.g:6993:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalXtend.g:6993:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalXtend.g:6994:5: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_84);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:7002:1: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==KW_VerticalLineVerticalLine) ) {
                    int LA180_2 = input.LA(2);

                    if ( (synpred26_InternalXtend()) ) {
                        alt180=1;
                    }


                }


                switch (alt180) {
            	case 1 :
            	    // InternalXtend.g:7002:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalXtend.g:7002:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalXtend.g:7002:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalXtend.g:7007:6: ( () ( ( ruleOpOr ) ) )
            	    // InternalXtend.g:7007:7: () ( ( ruleOpOr ) )
            	    {
            	    // InternalXtend.g:7007:7: ()
            	    // InternalXtend.g:7008:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:7013:2: ( ( ruleOpOr ) )
            	    // InternalXtend.g:7014:1: ( ruleOpOr )
            	    {
            	    // InternalXtend.g:7014:1: ( ruleOpOr )
            	    // InternalXtend.g:7015:3: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalXtend.g:7028:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalXtend.g:7029:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalXtend.g:7029:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalXtend.g:7030:3: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalXtend.g:7054:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalXtend.g:7055:2: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalXtend.g:7056:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalXtend.g:7063:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:7066:28: (kw= '||' )
            // InternalXtend.g:7068:2: kw= '||'
            {
            kw=(Token)match(input,KW_VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalXtend.g:7081:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalXtend.g:7082:2: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalXtend.g:7083:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalXtend.g:7090:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:7093:28: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalXtend.g:7094:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalXtend.g:7094:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalXtend.g:7095:5: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_85);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XEqualityExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:7103:1: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==KW_AmpersandAmpersand) ) {
                    int LA181_2 = input.LA(2);

                    if ( (synpred27_InternalXtend()) ) {
                        alt181=1;
                    }


                }


                switch (alt181) {
            	case 1 :
            	    // InternalXtend.g:7103:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalXtend.g:7103:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalXtend.g:7103:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalXtend.g:7108:6: ( () ( ( ruleOpAnd ) ) )
            	    // InternalXtend.g:7108:7: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalXtend.g:7108:7: ()
            	    // InternalXtend.g:7109:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:7114:2: ( ( ruleOpAnd ) )
            	    // InternalXtend.g:7115:1: ( ruleOpAnd )
            	    {
            	    // InternalXtend.g:7115:1: ( ruleOpAnd )
            	    // InternalXtend.g:7116:3: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalXtend.g:7129:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalXtend.g:7130:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalXtend.g:7130:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalXtend.g:7131:3: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_85);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalXtend.g:7155:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalXtend.g:7156:2: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalXtend.g:7157:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalXtend.g:7164:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:7167:28: (kw= '&&' )
            // InternalXtend.g:7169:2: kw= '&&'
            {
            kw=(Token)match(input,KW_AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalXtend.g:7182:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalXtend.g:7183:2: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalXtend.g:7184:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalXtend.g:7191:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:7194:28: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalXtend.g:7195:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalXtend.g:7195:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalXtend.g:7196:5: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_86);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XRelationalExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:7204:1: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop182:
            do {
                int alt182=2;
                switch ( input.LA(1) ) {
                case KW_EqualsSignEqualsSign:
                    {
                    int LA182_2 = input.LA(2);

                    if ( (synpred28_InternalXtend()) ) {
                        alt182=1;
                    }


                    }
                    break;
                case KW_ExclamationMarkEqualsSign:
                    {
                    int LA182_3 = input.LA(2);

                    if ( (synpred28_InternalXtend()) ) {
                        alt182=1;
                    }


                    }
                    break;
                case KW_EqualsSignEqualsSignEqualsSign:
                    {
                    int LA182_4 = input.LA(2);

                    if ( (synpred28_InternalXtend()) ) {
                        alt182=1;
                    }


                    }
                    break;
                case KW_ExclamationMarkEqualsSignEqualsSign:
                    {
                    int LA182_5 = input.LA(2);

                    if ( (synpred28_InternalXtend()) ) {
                        alt182=1;
                    }


                    }
                    break;

                }

                switch (alt182) {
            	case 1 :
            	    // InternalXtend.g:7204:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalXtend.g:7204:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalXtend.g:7204:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalXtend.g:7209:6: ( () ( ( ruleOpEquality ) ) )
            	    // InternalXtend.g:7209:7: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalXtend.g:7209:7: ()
            	    // InternalXtend.g:7210:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:7215:2: ( ( ruleOpEquality ) )
            	    // InternalXtend.g:7216:1: ( ruleOpEquality )
            	    {
            	    // InternalXtend.g:7216:1: ( ruleOpEquality )
            	    // InternalXtend.g:7217:3: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalXtend.g:7230:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalXtend.g:7231:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalXtend.g:7231:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalXtend.g:7232:3: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_86);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalXtend.g:7256:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalXtend.g:7257:2: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalXtend.g:7258:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalXtend.g:7265:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:7268:28: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // InternalXtend.g:7269:1: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // InternalXtend.g:7269:1: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt183=4;
            switch ( input.LA(1) ) {
            case KW_EqualsSignEqualsSign:
                {
                alt183=1;
                }
                break;
            case KW_ExclamationMarkEqualsSign:
                {
                alt183=2;
                }
                break;
            case KW_EqualsSignEqualsSignEqualsSign:
                {
                alt183=3;
                }
                break;
            case KW_ExclamationMarkEqualsSignEqualsSign:
                {
                alt183=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }

            switch (alt183) {
                case 1 :
                    // InternalXtend.g:7270:2: kw= '=='
                    {
                    kw=(Token)match(input,KW_EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:7277:2: kw= '!='
                    {
                    kw=(Token)match(input,KW_ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:7284:2: kw= '==='
                    {
                    kw=(Token)match(input,KW_EqualsSignEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:7291:2: kw= '!=='
                    {
                    kw=(Token)match(input,KW_ExclamationMarkEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalXtend.g:7304:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalXtend.g:7305:2: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalXtend.g:7306:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalXtend.g:7313:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:7316:28: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalXtend.g:7317:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalXtend.g:7317:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalXtend.g:7318:5: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_87);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XOtherOperatorExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:7326:1: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop184:
            do {
                int alt184=3;
                switch ( input.LA(1) ) {
                case KW_LessThanSign:
                    {
                    int LA184_2 = input.LA(2);

                    if ( (synpred30_InternalXtend()) ) {
                        alt184=2;
                    }


                    }
                    break;
                case KW_GreaterThanSign:
                    {
                    int LA184_3 = input.LA(2);

                    if ( (synpred30_InternalXtend()) ) {
                        alt184=2;
                    }


                    }
                    break;
                case KW_Instanceof:
                    {
                    int LA184_4 = input.LA(2);

                    if ( (synpred29_InternalXtend()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case KW_GreaterThanSignEqualsSign:
                    {
                    int LA184_5 = input.LA(2);

                    if ( (synpred30_InternalXtend()) ) {
                        alt184=2;
                    }


                    }
                    break;

                }

                switch (alt184) {
            	case 1 :
            	    // InternalXtend.g:7326:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalXtend.g:7326:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalXtend.g:7326:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalXtend.g:7326:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalXtend.g:7326:4: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalXtend.g:7328:5: ( () otherlv_2= 'instanceof' )
            	    // InternalXtend.g:7328:6: () otherlv_2= 'instanceof'
            	    {
            	    // InternalXtend.g:7328:6: ()
            	    // InternalXtend.g:7329:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,KW_Instanceof,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // InternalXtend.g:7338:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalXtend.g:7339:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalXtend.g:7339:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalXtend.g:7340:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXtend.g:7357:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalXtend.g:7357:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalXtend.g:7357:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalXtend.g:7357:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalXtend.g:7357:8: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalXtend.g:7362:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalXtend.g:7362:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalXtend.g:7362:7: ()
            	    // InternalXtend.g:7363:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:7368:2: ( ( ruleOpCompare ) )
            	    // InternalXtend.g:7369:1: ( ruleOpCompare )
            	    {
            	    // InternalXtend.g:7369:1: ( ruleOpCompare )
            	    // InternalXtend.g:7370:3: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalXtend.g:7383:4: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalXtend.g:7384:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalXtend.g:7384:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalXtend.g:7385:3: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_6_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalXtend.g:7409:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalXtend.g:7410:2: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalXtend.g:7411:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalXtend.g:7418:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:7421:28: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalXtend.g:7422:1: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalXtend.g:7422:1: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt185=4;
            switch ( input.LA(1) ) {
            case KW_GreaterThanSignEqualsSign:
                {
                alt185=1;
                }
                break;
            case KW_LessThanSign:
                {
                int LA185_2 = input.LA(2);

                if ( (LA185_2==EOF||LA185_2==KW_Package||(LA185_2>=KW_Class && LA185_2<=KW_LessThanSign)||(LA185_2>=KW_Extends && LA185_2<=KW_LeftCurlyBracket)||(LA185_2>=KW_Interface && LA185_2<=KW_LeftParenthesis)||(LA185_2>=KW_Extension && LA185_2<=KW_New)||(LA185_2>=KW_Public && LA185_2<=KW_Transient)||(LA185_2>=KW_Def && LA185_2<=KW_Create)||(LA185_2>=KW_AFTER && LA185_2<=KW_Import)||LA185_2==KW_Switch||(LA185_2>=KW_NumberSign && LA185_2<=KW_LeftSquareBracket)||(LA185_2>=KW_PlusSign && LA185_2<=KW_HyphenMinus)||LA185_2==KW_ExclamationMark||LA185_2==KW_If||(LA185_2>=KW_For && LA185_2<=KW_Try)||(LA185_2>=RULE_ID && LA185_2<=RULE_RICH_TEXT_START)||(LA185_2>=RULE_HEX && LA185_2<=RULE_DECIMAL)) ) {
                    alt185=4;
                }
                else if ( (LA185_2==KW_EqualsSign) ) {
                    alt185=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 185, 2, input);

                    throw nvae;
                }
                }
                break;
            case KW_GreaterThanSign:
                {
                alt185=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }

            switch (alt185) {
                case 1 :
                    // InternalXtend.g:7423:2: kw= '>='
                    {
                    kw=(Token)match(input,KW_GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:7429:6: (kw= '<' kw= '=' )
                    {
                    // InternalXtend.g:7429:6: (kw= '<' kw= '=' )
                    // InternalXtend.g:7430:2: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); 
                          
                    }
                    kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalXtend.g:7443:2: kw= '>'
                    {
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:7450:2: kw= '<'
                    {
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalXtend.g:7463:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalXtend.g:7464:2: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalXtend.g:7465:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalXtend.g:7472:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:7475:28: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalXtend.g:7476:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalXtend.g:7476:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalXtend.g:7477:5: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_88);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAdditiveExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:7485:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop186:
            do {
                int alt186=2;
                alt186 = dfa186.predict(input);
                switch (alt186) {
            	case 1 :
            	    // InternalXtend.g:7485:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalXtend.g:7485:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalXtend.g:7485:3: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalXtend.g:7490:6: ( () ( ( ruleOpOther ) ) )
            	    // InternalXtend.g:7490:7: () ( ( ruleOpOther ) )
            	    {
            	    // InternalXtend.g:7490:7: ()
            	    // InternalXtend.g:7491:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:7496:2: ( ( ruleOpOther ) )
            	    // InternalXtend.g:7497:1: ( ruleOpOther )
            	    {
            	    // InternalXtend.g:7497:1: ( ruleOpOther )
            	    // InternalXtend.g:7498:3: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalXtend.g:7511:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalXtend.g:7512:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalXtend.g:7512:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalXtend.g:7513:3: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_88);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalXtend.g:7537:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalXtend.g:7538:2: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalXtend.g:7539:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalXtend.g:7546:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:7549:28: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // InternalXtend.g:7550:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // InternalXtend.g:7550:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt189=9;
            alt189 = dfa189.predict(input);
            switch (alt189) {
                case 1 :
                    // InternalXtend.g:7551:2: kw= '->'
                    {
                    kw=(Token)match(input,KW_HyphenMinusGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:7558:2: kw= '..<'
                    {
                    kw=(Token)match(input,KW_FullStopFullStopLessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:7564:6: (kw= '>' kw= '..' )
                    {
                    // InternalXtend.g:7564:6: (kw= '>' kw= '..' )
                    // InternalXtend.g:7565:2: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
                          
                    }
                    kw=(Token)match(input,KW_FullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalXtend.g:7578:2: kw= '..'
                    {
                    kw=(Token)match(input,KW_FullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalXtend.g:7585:2: kw= '=>'
                    {
                    kw=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalXtend.g:7591:6: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalXtend.g:7591:6: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalXtend.g:7592:2: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
                          
                    }
                    // InternalXtend.g:7597:1: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt187=2;
                    int LA187_0 = input.LA(1);

                    if ( (LA187_0==KW_GreaterThanSign) ) {
                        int LA187_1 = input.LA(2);

                        if ( (LA187_1==EOF||LA187_1==KW_Package||(LA187_1>=KW_Class && LA187_1<=KW_LessThanSign)||(LA187_1>=KW_Extends && LA187_1<=KW_LeftCurlyBracket)||(LA187_1>=KW_Interface && LA187_1<=KW_LeftParenthesis)||(LA187_1>=KW_Extension && LA187_1<=KW_New)||(LA187_1>=KW_Public && LA187_1<=KW_Transient)||(LA187_1>=KW_Def && LA187_1<=KW_Create)||(LA187_1>=KW_AFTER && LA187_1<=KW_Import)||LA187_1==KW_Switch||(LA187_1>=KW_NumberSign && LA187_1<=KW_LeftSquareBracket)||(LA187_1>=KW_PlusSign && LA187_1<=KW_HyphenMinus)||LA187_1==KW_ExclamationMark||LA187_1==KW_If||(LA187_1>=KW_For && LA187_1<=KW_Try)||(LA187_1>=RULE_ID && LA187_1<=RULE_RICH_TEXT_START)||(LA187_1>=RULE_HEX && LA187_1<=RULE_DECIMAL)) ) {
                            alt187=2;
                        }
                        else if ( (LA187_1==KW_GreaterThanSign) && (synpred32_InternalXtend())) {
                            alt187=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 187, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 187, 0, input);

                        throw nvae;
                    }
                    switch (alt187) {
                        case 1 :
                            // InternalXtend.g:7597:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalXtend.g:7597:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalXtend.g:7597:3: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalXtend.g:7601:5: (kw= '>' kw= '>' )
                            // InternalXtend.g:7602:2: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_90); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:7615:2: kw= '>'
                            {
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalXtend.g:7621:6: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // InternalXtend.g:7621:6: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // InternalXtend.g:7622:2: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
                          
                    }
                    // InternalXtend.g:7627:1: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt188=3;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==KW_LessThanSign) ) {
                        int LA188_1 = input.LA(2);

                        if ( (synpred33_InternalXtend()) ) {
                            alt188=1;
                        }
                        else if ( (true) ) {
                            alt188=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 188, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA188_0==KW_EqualsSignGreaterThanSign) ) {
                        alt188=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 188, 0, input);

                        throw nvae;
                    }
                    switch (alt188) {
                        case 1 :
                            // InternalXtend.g:7627:2: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // InternalXtend.g:7627:2: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // InternalXtend.g:7627:3: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // InternalXtend.g:7631:5: (kw= '<' kw= '<' )
                            // InternalXtend.g:7632:2: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:7645:2: kw= '<'
                            {
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
                                  
                            }

                            }
                            break;
                        case 3 :
                            // InternalXtend.g:7652:2: kw= '=>'
                            {
                            kw=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalXtend.g:7659:2: kw= '<>'
                    {
                    kw=(Token)match(input,KW_LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalXtend.g:7666:2: kw= '?:'
                    {
                    kw=(Token)match(input,KW_QuestionMarkColon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalXtend.g:7679:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalXtend.g:7680:2: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalXtend.g:7681:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalXtend.g:7688:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:7691:28: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalXtend.g:7692:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalXtend.g:7692:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalXtend.g:7693:5: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_92);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XMultiplicativeExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:7701:1: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==KW_HyphenMinus) ) {
                    int LA190_2 = input.LA(2);

                    if ( (synpred34_InternalXtend()) ) {
                        alt190=1;
                    }


                }
                else if ( (LA190_0==KW_PlusSign) ) {
                    int LA190_3 = input.LA(2);

                    if ( (synpred34_InternalXtend()) ) {
                        alt190=1;
                    }


                }


                switch (alt190) {
            	case 1 :
            	    // InternalXtend.g:7701:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalXtend.g:7701:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalXtend.g:7701:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalXtend.g:7706:6: ( () ( ( ruleOpAdd ) ) )
            	    // InternalXtend.g:7706:7: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalXtend.g:7706:7: ()
            	    // InternalXtend.g:7707:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:7712:2: ( ( ruleOpAdd ) )
            	    // InternalXtend.g:7713:1: ( ruleOpAdd )
            	    {
            	    // InternalXtend.g:7713:1: ( ruleOpAdd )
            	    // InternalXtend.g:7714:3: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalXtend.g:7727:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalXtend.g:7728:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalXtend.g:7728:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalXtend.g:7729:3: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_92);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalXtend.g:7753:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalXtend.g:7754:2: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalXtend.g:7755:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalXtend.g:7762:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:7765:28: ( (kw= '+' | kw= '-' ) )
            // InternalXtend.g:7766:1: (kw= '+' | kw= '-' )
            {
            // InternalXtend.g:7766:1: (kw= '+' | kw= '-' )
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==KW_PlusSign) ) {
                alt191=1;
            }
            else if ( (LA191_0==KW_HyphenMinus) ) {
                alt191=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }
            switch (alt191) {
                case 1 :
                    // InternalXtend.g:7767:2: kw= '+'
                    {
                    kw=(Token)match(input,KW_PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:7774:2: kw= '-'
                    {
                    kw=(Token)match(input,KW_HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalXtend.g:7787:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalXtend.g:7788:2: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalXtend.g:7789:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalXtend.g:7796:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:7799:28: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalXtend.g:7800:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalXtend.g:7800:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalXtend.g:7801:5: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_93);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XUnaryOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:7809:1: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop192:
            do {
                int alt192=2;
                switch ( input.LA(1) ) {
                case KW_Asterisk:
                    {
                    int LA192_2 = input.LA(2);

                    if ( (synpred35_InternalXtend()) ) {
                        alt192=1;
                    }


                    }
                    break;
                case KW_AsteriskAsterisk:
                    {
                    int LA192_3 = input.LA(2);

                    if ( (synpred35_InternalXtend()) ) {
                        alt192=1;
                    }


                    }
                    break;
                case KW_Solidus:
                    {
                    int LA192_4 = input.LA(2);

                    if ( (synpred35_InternalXtend()) ) {
                        alt192=1;
                    }


                    }
                    break;
                case KW_PercentSign:
                    {
                    int LA192_5 = input.LA(2);

                    if ( (synpred35_InternalXtend()) ) {
                        alt192=1;
                    }


                    }
                    break;

                }

                switch (alt192) {
            	case 1 :
            	    // InternalXtend.g:7809:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalXtend.g:7809:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalXtend.g:7809:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalXtend.g:7814:6: ( () ( ( ruleOpMulti ) ) )
            	    // InternalXtend.g:7814:7: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalXtend.g:7814:7: ()
            	    // InternalXtend.g:7815:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:7820:2: ( ( ruleOpMulti ) )
            	    // InternalXtend.g:7821:1: ( ruleOpMulti )
            	    {
            	    // InternalXtend.g:7821:1: ( ruleOpMulti )
            	    // InternalXtend.g:7822:3: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalXtend.g:7835:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalXtend.g:7836:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalXtend.g:7836:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalXtend.g:7837:3: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_93);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalXtend.g:7861:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalXtend.g:7862:2: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalXtend.g:7863:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalXtend.g:7870:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:7873:28: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // InternalXtend.g:7874:1: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // InternalXtend.g:7874:1: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt193=4;
            switch ( input.LA(1) ) {
            case KW_Asterisk:
                {
                alt193=1;
                }
                break;
            case KW_AsteriskAsterisk:
                {
                alt193=2;
                }
                break;
            case KW_Solidus:
                {
                alt193=3;
                }
                break;
            case KW_PercentSign:
                {
                alt193=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;
            }

            switch (alt193) {
                case 1 :
                    // InternalXtend.g:7875:2: kw= '*'
                    {
                    kw=(Token)match(input,KW_Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:7882:2: kw= '**'
                    {
                    kw=(Token)match(input,KW_AsteriskAsterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:7889:2: kw= '/'
                    {
                    kw=(Token)match(input,KW_Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:7896:2: kw= '%'
                    {
                    kw=(Token)match(input,KW_PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalXtend.g:7909:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalXtend.g:7910:2: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalXtend.g:7911:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalXtend.g:7918:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:7921:28: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalXtend.g:7922:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalXtend.g:7922:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( ((LA194_0>=KW_PlusSign && LA194_0<=KW_HyphenMinus)||LA194_0==KW_ExclamationMark) ) {
                alt194=1;
            }
            else if ( (LA194_0==KW_Package||(LA194_0>=KW_Class && LA194_0<=KW_LessThanSign)||(LA194_0>=KW_Extends && LA194_0<=KW_LeftCurlyBracket)||(LA194_0>=KW_Interface && LA194_0<=KW_LeftParenthesis)||(LA194_0>=KW_Extension && LA194_0<=KW_New)||(LA194_0>=KW_Public && LA194_0<=KW_Transient)||(LA194_0>=KW_Def && LA194_0<=KW_Create)||(LA194_0>=KW_AFTER && LA194_0<=KW_Import)||LA194_0==KW_Switch||(LA194_0>=KW_NumberSign && LA194_0<=KW_LeftSquareBracket)||LA194_0==KW_If||(LA194_0>=KW_For && LA194_0<=KW_Try)||(LA194_0>=RULE_ID && LA194_0<=RULE_RICH_TEXT_START)||(LA194_0>=RULE_HEX && LA194_0<=RULE_DECIMAL)) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;
            }
            switch (alt194) {
                case 1 :
                    // InternalXtend.g:7922:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalXtend.g:7922:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalXtend.g:7922:3: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalXtend.g:7922:3: ()
                    // InternalXtend.g:7923:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:7928:2: ( ( ruleOpUnary ) )
                    // InternalXtend.g:7929:1: ( ruleOpUnary )
                    {
                    // InternalXtend.g:7929:1: ( ruleOpUnary )
                    // InternalXtend.g:7930:3: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_33);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:7943:2: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalXtend.g:7944:1: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalXtend.g:7944:1: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalXtend.g:7945:3: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:7963:5: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XCastedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalXtend.g:7979:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalXtend.g:7980:2: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalXtend.g:7981:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalXtend.g:7988:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:7991:28: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // InternalXtend.g:7992:1: (kw= '!' | kw= '-' | kw= '+' )
            {
            // InternalXtend.g:7992:1: (kw= '!' | kw= '-' | kw= '+' )
            int alt195=3;
            switch ( input.LA(1) ) {
            case KW_ExclamationMark:
                {
                alt195=1;
                }
                break;
            case KW_HyphenMinus:
                {
                alt195=2;
                }
                break;
            case KW_PlusSign:
                {
                alt195=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;
            }

            switch (alt195) {
                case 1 :
                    // InternalXtend.g:7993:2: kw= '!'
                    {
                    kw=(Token)match(input,KW_ExclamationMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:8000:2: kw= '-'
                    {
                    kw=(Token)match(input,KW_HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:8007:2: kw= '+'
                    {
                    kw=(Token)match(input,KW_PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalXtend.g:8020:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalXtend.g:8021:2: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalXtend.g:8022:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalXtend.g:8029:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:8032:28: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalXtend.g:8033:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalXtend.g:8033:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalXtend.g:8034:5: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_94);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XPostfixOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:8042:1: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==KW_As) ) {
                    int LA196_2 = input.LA(2);

                    if ( (synpred36_InternalXtend()) ) {
                        alt196=1;
                    }


                }


                switch (alt196) {
            	case 1 :
            	    // InternalXtend.g:8042:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalXtend.g:8042:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalXtend.g:8042:3: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalXtend.g:8044:5: ( () otherlv_2= 'as' )
            	    // InternalXtend.g:8044:6: () otherlv_2= 'as'
            	    {
            	    // InternalXtend.g:8044:6: ()
            	    // InternalXtend.g:8045:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,KW_As,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // InternalXtend.g:8054:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalXtend.g:8055:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalXtend.g:8055:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalXtend.g:8056:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalXtend.g:8080:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalXtend.g:8081:2: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalXtend.g:8082:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalXtend.g:8089:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:8092:28: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalXtend.g:8093:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalXtend.g:8093:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalXtend.g:8094:5: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_95);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XMemberFeatureCall_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:8102:1: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==KW_PlusSignPlusSign) ) {
                int LA197_1 = input.LA(2);

                if ( (synpred37_InternalXtend()) ) {
                    alt197=1;
                }
            }
            else if ( (LA197_0==KW_HyphenMinusHyphenMinus) ) {
                int LA197_2 = input.LA(2);

                if ( (synpred37_InternalXtend()) ) {
                    alt197=1;
                }
            }
            switch (alt197) {
                case 1 :
                    // InternalXtend.g:8102:2: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalXtend.g:8107:6: ( () ( ( ruleOpPostfix ) ) )
                    // InternalXtend.g:8107:7: () ( ( ruleOpPostfix ) )
                    {
                    // InternalXtend.g:8107:7: ()
                    // InternalXtend.g:8108:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalXtend.g:8113:2: ( ( ruleOpPostfix ) )
                    // InternalXtend.g:8114:1: ( ruleOpPostfix )
                    {
                    // InternalXtend.g:8114:1: ( ruleOpPostfix )
                    // InternalXtend.g:8115:3: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalXtend.g:8136:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalXtend.g:8137:2: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalXtend.g:8138:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalXtend.g:8145:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:8148:28: ( (kw= '++' | kw= '--' ) )
            // InternalXtend.g:8149:1: (kw= '++' | kw= '--' )
            {
            // InternalXtend.g:8149:1: (kw= '++' | kw= '--' )
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==KW_PlusSignPlusSign) ) {
                alt198=1;
            }
            else if ( (LA198_0==KW_HyphenMinusHyphenMinus) ) {
                alt198=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;
            }
            switch (alt198) {
                case 1 :
                    // InternalXtend.g:8150:2: kw= '++'
                    {
                    kw=(Token)match(input,KW_PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:8157:2: kw= '--'
                    {
                    kw=(Token)match(input,KW_HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalXtend.g:8170:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalXtend.g:8171:2: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalXtend.g:8172:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalXtend.g:8179:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:8182:28: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalXtend.g:8183:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalXtend.g:8183:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalXtend.g:8184:5: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_96);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XPrimaryExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:8192:1: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop207:
            do {
                int alt207=3;
                switch ( input.LA(1) ) {
                case KW_FullStop:
                    {
                    int LA207_2 = input.LA(2);

                    if ( (synpred38_InternalXtend()) ) {
                        alt207=1;
                    }
                    else if ( (synpred39_InternalXtend()) ) {
                        alt207=2;
                    }


                    }
                    break;
                case KW_ColonColon:
                    {
                    int LA207_3 = input.LA(2);

                    if ( (synpred38_InternalXtend()) ) {
                        alt207=1;
                    }
                    else if ( (synpred39_InternalXtend()) ) {
                        alt207=2;
                    }


                    }
                    break;
                case KW_QuestionMarkFullStop:
                    {
                    int LA207_4 = input.LA(2);

                    if ( (synpred39_InternalXtend()) ) {
                        alt207=2;
                    }


                    }
                    break;

                }

                switch (alt207) {
            	case 1 :
            	    // InternalXtend.g:8192:2: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalXtend.g:8192:2: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalXtend.g:8192:3: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalXtend.g:8192:3: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalXtend.g:8192:4: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalXtend.g:8205:25: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalXtend.g:8205:26: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalXtend.g:8205:26: ()
            	    // InternalXtend.g:8206:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:8211:2: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt199=2;
            	    int LA199_0 = input.LA(1);

            	    if ( (LA199_0==KW_FullStop) ) {
            	        alt199=1;
            	    }
            	    else if ( (LA199_0==KW_ColonColon) ) {
            	        alt199=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 199, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt199) {
            	        case 1 :
            	            // InternalXtend.g:8211:4: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,KW_FullStop,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalXtend.g:8216:6: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // InternalXtend.g:8216:6: ( (lv_explicitStatic_3_0= '::' ) )
            	            // InternalXtend.g:8217:1: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // InternalXtend.g:8217:1: (lv_explicitStatic_3_0= '::' )
            	            // InternalXtend.g:8218:3: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,KW_ColonColon,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalXtend.g:8231:3: ( ( ruleFeatureCallID ) )
            	    // InternalXtend.g:8232:1: ( ruleFeatureCallID )
            	    {
            	    // InternalXtend.g:8232:1: ( ruleFeatureCallID )
            	    // InternalXtend.g:8233:3: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_77);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
            	          
            	    }
            	    pushFollow(FOLLOW_33);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }


            	    }

            	    // InternalXtend.g:8254:3: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalXtend.g:8255:1: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalXtend.g:8255:1: (lv_value_6_0= ruleXAssignment )
            	    // InternalXtend.g:8256:3: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"value",
            	              		lv_value_6_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalXtend.g:8273:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalXtend.g:8273:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalXtend.g:8273:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalXtend.g:8273:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // InternalXtend.g:8273:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // InternalXtend.g:8289:7: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // InternalXtend.g:8289:8: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // InternalXtend.g:8289:8: ()
            	    // InternalXtend.g:8290:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalXtend.g:8295:2: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt200=3;
            	    switch ( input.LA(1) ) {
            	    case KW_FullStop:
            	        {
            	        alt200=1;
            	        }
            	        break;
            	    case KW_QuestionMarkFullStop:
            	        {
            	        alt200=2;
            	        }
            	        break;
            	    case KW_ColonColon:
            	        {
            	        alt200=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 200, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt200) {
            	        case 1 :
            	            // InternalXtend.g:8295:4: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,KW_FullStop,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalXtend.g:8300:6: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // InternalXtend.g:8300:6: ( (lv_nullSafe_9_0= '?.' ) )
            	            // InternalXtend.g:8301:1: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // InternalXtend.g:8301:1: (lv_nullSafe_9_0= '?.' )
            	            // InternalXtend.g:8302:3: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,KW_QuestionMarkFullStop,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "nullSafe", true, "?.");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalXtend.g:8316:6: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // InternalXtend.g:8316:6: ( (lv_explicitStatic_10_0= '::' ) )
            	            // InternalXtend.g:8317:1: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // InternalXtend.g:8317:1: (lv_explicitStatic_10_0= '::' )
            	            // InternalXtend.g:8318:3: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,KW_ColonColon,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalXtend.g:8331:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt202=2;
            	    int LA202_0 = input.LA(1);

            	    if ( (LA202_0==KW_LessThanSign) ) {
            	        alt202=1;
            	    }
            	    switch (alt202) {
            	        case 1 :
            	            // InternalXtend.g:8331:7: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	                  
            	            }
            	            // InternalXtend.g:8335:1: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalXtend.g:8336:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalXtend.g:8336:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalXtend.g:8337:3: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_10);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"typeArguments",
            	                      		lv_typeArguments_12_0, 
            	                      		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }

            	            // InternalXtend.g:8353:2: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop201:
            	            do {
            	                int alt201=2;
            	                int LA201_0 = input.LA(1);

            	                if ( (LA201_0==KW_Comma) ) {
            	                    alt201=1;
            	                }


            	                switch (alt201) {
            	            	case 1 :
            	            	    // InternalXtend.g:8353:4: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	          	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	          
            	            	    }
            	            	    // InternalXtend.g:8357:1: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalXtend.g:8358:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalXtend.g:8358:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalXtend.g:8359:3: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {
            	            	       
            	            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_10);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      	        }
            	            	             		add(
            	            	             			current, 
            	            	             			"typeArguments",
            	            	              		lv_typeArguments_14_0, 
            	            	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      	        afterParserOrEnumRuleCall();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop201;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,KW_GreaterThanSign,FOLLOW_98); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalXtend.g:8379:3: ( ( ruleIdOrSuper ) )
            	    // InternalXtend.g:8380:1: ( ruleIdOrSuper )
            	    {
            	    // InternalXtend.g:8380:1: ( ruleIdOrSuper )
            	    // InternalXtend.g:8381:3: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_99);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalXtend.g:8394:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt205=2;
            	    alt205 = dfa205.predict(input);
            	    switch (alt205) {
            	        case 1 :
            	            // InternalXtend.g:8394:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // InternalXtend.g:8394:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // InternalXtend.g:8394:4: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // InternalXtend.g:8401:1: (lv_explicitOperationCall_17_0= '(' )
            	            // InternalXtend.g:8402:3: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_64); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              	    
            	            }

            	            }


            	            }

            	            // InternalXtend.g:8415:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt204=3;
            	            alt204 = dfa204.predict(input);
            	            switch (alt204) {
            	                case 1 :
            	                    // InternalXtend.g:8415:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalXtend.g:8415:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalXtend.g:8415:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalXtend.g:8432:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalXtend.g:8433:3: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_65);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_18_0, 
            	                              		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalXtend.g:8450:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalXtend.g:8450:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalXtend.g:8450:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalXtend.g:8450:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalXtend.g:8451:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalXtend.g:8451:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalXtend.g:8452:3: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_27);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_19_0, 
            	                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }

            	                    // InternalXtend.g:8468:2: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop203:
            	                    do {
            	                        int alt203=2;
            	                        int LA203_0 = input.LA(1);

            	                        if ( (LA203_0==KW_Comma) ) {
            	                            alt203=1;
            	                        }


            	                        switch (alt203) {
            	                    	case 1 :
            	                    	    // InternalXtend.g:8468:4: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	          	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	          
            	                    	    }
            	                    	    // InternalXtend.g:8472:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalXtend.g:8473:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalXtend.g:8473:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalXtend.g:8474:3: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {
            	                    	       
            	                    	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
            	                    	      	    
            	                    	    }
            	                    	    pushFollow(FOLLOW_27);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      	        if (current==null) {
            	                    	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      	        }
            	                    	             		add(
            	                    	             			current, 
            	                    	             			"memberCallArguments",
            	                    	              		lv_memberCallArguments_21_0, 
            	                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      	        afterParserOrEnumRuleCall();
            	                    	      	    
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop203;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,KW_RightParenthesis,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalXtend.g:8494:3: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt206=2;
            	    alt206 = dfa206.predict(input);
            	    switch (alt206) {
            	        case 1 :
            	            // InternalXtend.g:8494:4: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalXtend.g:8497:1: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalXtend.g:8498:3: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_96);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"memberCallArguments",
            	                      		lv_memberCallArguments_23_0, 
            	                      		"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop207;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalXtend.g:8522:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalXtend.g:8523:2: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalXtend.g:8524:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalXtend.g:8531:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:8534:28: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalXtend.g:8535:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalXtend.g:8535:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt208=15;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    // InternalXtend.g:8536:5: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XConstructorCall_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:8546:5: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBlockExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalXtend.g:8556:5: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSwitchExpression_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:8565:6: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalXtend.g:8565:6: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalXtend.g:8565:7: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSynchronizedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalXtend.g:8579:5: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFeatureCall_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalXtend.g:8589:5: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XLiteral_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalXtend.g:8599:5: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XIfExpression_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalXtend.g:8608:6: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalXtend.g:8608:6: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalXtend.g:8608:7: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XForLoopExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalXtend.g:8627:5: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBasicForLoopExpression_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalXtend.g:8637:5: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XWhileExpression_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalXtend.g:8647:5: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XDoWhileExpression_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalXtend.g:8657:5: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XThrowExpression_11; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    // InternalXtend.g:8667:5: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XReturnExpression_12; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    // InternalXtend.g:8677:5: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XTryCatchFinallyExpression_13; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    // InternalXtend.g:8687:5: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XParenthesizedExpression_14; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalXtend.g:8703:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalXtend.g:8704:2: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalXtend.g:8705:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalXtend.g:8712:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:8715:28: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalXtend.g:8716:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalXtend.g:8716:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt209=7;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==KW_NumberSign) ) {
                alt209=1;
            }
            else if ( (LA209_0==KW_LeftSquareBracket) && (synpred45_InternalXtend())) {
                alt209=2;
            }
            else if ( ((LA209_0>=KW_False && LA209_0<=KW_True)) ) {
                alt209=3;
            }
            else if ( ((LA209_0>=RULE_HEX && LA209_0<=RULE_DECIMAL)) ) {
                alt209=4;
            }
            else if ( (LA209_0==KW_Null) ) {
                alt209=5;
            }
            else if ( ((LA209_0>=RULE_STRING && LA209_0<=RULE_RICH_TEXT_START)) ) {
                alt209=6;
            }
            else if ( (LA209_0==KW_Typeof) ) {
                alt209=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }
            switch (alt209) {
                case 1 :
                    // InternalXtend.g:8717:5: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XCollectionLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:8726:6: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalXtend.g:8726:6: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // InternalXtend.g:8726:7: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XClosure_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalXtend.g:8739:5: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBooleanLiteral_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalXtend.g:8749:5: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XNumberLiteral_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalXtend.g:8759:5: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XNullLiteral_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalXtend.g:8769:5: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XStringLiteral_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalXtend.g:8779:5: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XTypeLiteral_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalXtend.g:8795:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalXtend.g:8796:2: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalXtend.g:8797:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalXtend.g:8804:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:8807:28: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalXtend.g:8808:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalXtend.g:8808:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==KW_NumberSign) ) {
                int LA210_1 = input.LA(2);

                if ( (LA210_1==KW_LeftSquareBracket) ) {
                    alt210=2;
                }
                else if ( (LA210_1==KW_LeftCurlyBracket) ) {
                    alt210=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;
            }
            switch (alt210) {
                case 1 :
                    // InternalXtend.g:8809:5: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSetLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:8819:5: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XListLiteral_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalXtend.g:8835:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalXtend.g:8836:2: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalXtend.g:8837:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalXtend.g:8844:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:8847:28: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalXtend.g:8848:1: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalXtend.g:8848:1: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalXtend.g:8848:2: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalXtend.g:8848:2: ()
            // InternalXtend.g:8849:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalXtend.g:8862:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==KW_Package||(LA212_0>=KW_Class && LA212_0<=KW_LessThanSign)||(LA212_0>=KW_Extends && LA212_0<=KW_LeftCurlyBracket)||(LA212_0>=KW_Interface && LA212_0<=KW_LeftParenthesis)||(LA212_0>=KW_Extension && LA212_0<=KW_New)||(LA212_0>=KW_Public && LA212_0<=KW_Transient)||(LA212_0>=KW_Def && LA212_0<=KW_Create)||(LA212_0>=KW_AFTER && LA212_0<=KW_Import)||LA212_0==KW_Switch||(LA212_0>=KW_NumberSign && LA212_0<=KW_LeftSquareBracket)||(LA212_0>=KW_PlusSign && LA212_0<=KW_HyphenMinus)||LA212_0==KW_ExclamationMark||LA212_0==KW_If||(LA212_0>=KW_For && LA212_0<=KW_Try)||(LA212_0>=RULE_ID && LA212_0<=RULE_RICH_TEXT_START)||(LA212_0>=RULE_HEX && LA212_0<=RULE_DECIMAL)) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // InternalXtend.g:8862:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalXtend.g:8862:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalXtend.g:8863:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalXtend.g:8863:1: (lv_elements_3_0= ruleXExpression )
                    // InternalXtend.g:8864:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_102);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:8880:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop211:
                    do {
                        int alt211=2;
                        int LA211_0 = input.LA(1);

                        if ( (LA211_0==KW_Comma) ) {
                            alt211=1;
                        }


                        switch (alt211) {
                    	case 1 :
                    	    // InternalXtend.g:8880:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalXtend.g:8884:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalXtend.g:8885:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalXtend.g:8885:1: (lv_elements_5_0= ruleXExpression )
                    	    // InternalXtend.g:8886:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop211;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalXtend.g:8914:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalXtend.g:8915:2: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalXtend.g:8916:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalXtend.g:8923:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:8926:28: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalXtend.g:8927:1: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalXtend.g:8927:1: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalXtend.g:8927:2: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalXtend.g:8927:2: ()
            // InternalXtend.g:8928:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalXtend.g:8941:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==KW_Package||(LA214_0>=KW_Class && LA214_0<=KW_LessThanSign)||(LA214_0>=KW_Extends && LA214_0<=KW_LeftCurlyBracket)||(LA214_0>=KW_Interface && LA214_0<=KW_LeftParenthesis)||(LA214_0>=KW_Extension && LA214_0<=KW_New)||(LA214_0>=KW_Public && LA214_0<=KW_Transient)||(LA214_0>=KW_Def && LA214_0<=KW_Create)||(LA214_0>=KW_AFTER && LA214_0<=KW_Import)||LA214_0==KW_Switch||(LA214_0>=KW_NumberSign && LA214_0<=KW_LeftSquareBracket)||(LA214_0>=KW_PlusSign && LA214_0<=KW_HyphenMinus)||LA214_0==KW_ExclamationMark||LA214_0==KW_If||(LA214_0>=KW_For && LA214_0<=KW_Try)||(LA214_0>=RULE_ID && LA214_0<=RULE_RICH_TEXT_START)||(LA214_0>=RULE_HEX && LA214_0<=RULE_DECIMAL)) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalXtend.g:8941:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalXtend.g:8941:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalXtend.g:8942:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalXtend.g:8942:1: (lv_elements_3_0= ruleXExpression )
                    // InternalXtend.g:8943:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_79);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:8959:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop213:
                    do {
                        int alt213=2;
                        int LA213_0 = input.LA(1);

                        if ( (LA213_0==KW_Comma) ) {
                            alt213=1;
                        }


                        switch (alt213) {
                    	case 1 :
                    	    // InternalXtend.g:8959:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalXtend.g:8963:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalXtend.g:8964:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalXtend.g:8964:1: (lv_elements_5_0= ruleXExpression )
                    	    // InternalXtend.g:8965:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_79);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop213;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalXtend.g:8993:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalXtend.g:8994:2: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalXtend.g:8995:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalXtend.g:9002:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9005:28: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // InternalXtend.g:9006:1: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // InternalXtend.g:9006:1: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // InternalXtend.g:9006:2: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // InternalXtend.g:9006:2: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // InternalXtend.g:9006:3: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // InternalXtend.g:9008:5: ( () otherlv_1= '[' )
            // InternalXtend.g:9008:6: () otherlv_1= '['
            {
            // InternalXtend.g:9008:6: ()
            // InternalXtend.g:9009:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_LeftSquareBracket,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
                  
            }

            }


            }

            // InternalXtend.g:9018:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt217=2;
            alt217 = dfa217.predict(input);
            switch (alt217) {
                case 1 :
                    // InternalXtend.g:9018:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // InternalXtend.g:9033:6: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // InternalXtend.g:9033:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // InternalXtend.g:9033:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt216=2;
                    int LA216_0 = input.LA(1);

                    if ( (LA216_0==KW_Package||LA216_0==KW_Class||(LA216_0>=KW_Extends && LA216_0<=KW_Implements)||(LA216_0>=KW_Interface && LA216_0<=KW_LeftParenthesis)||LA216_0==KW_EqualsSignGreaterThanSign||(LA216_0>=KW_Extension && LA216_0<=KW_Throws)||(LA216_0>=KW_Public && LA216_0<=KW_Transient)||(LA216_0>=KW_Def && LA216_0<=KW_Create)||(LA216_0>=KW_AFTER && LA216_0<=KW_Import)||LA216_0==RULE_ID) ) {
                        alt216=1;
                    }
                    switch (alt216) {
                        case 1 :
                            // InternalXtend.g:9033:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalXtend.g:9033:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalXtend.g:9034:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalXtend.g:9034:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalXtend.g:9035:3: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"declaredFormalParameters",
                                      		lv_declaredFormalParameters_2_0, 
                                      		"org.eclipse.xtend.core.Xtend.JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:9051:2: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop215:
                            do {
                                int alt215=2;
                                int LA215_0 = input.LA(1);

                                if ( (LA215_0==KW_Comma) ) {
                                    alt215=1;
                                }


                                switch (alt215) {
                            	case 1 :
                            	    // InternalXtend.g:9051:4: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_57); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:9055:1: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalXtend.g:9056:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalXtend.g:9056:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalXtend.g:9057:3: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_104);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredFormalParameters",
                            	              		lv_declaredFormalParameters_4_0, 
                            	              		"org.eclipse.xtend.core.Xtend.JvmFormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop215;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalXtend.g:9073:6: ( (lv_explicitSyntax_5_0= '|' ) )
                    // InternalXtend.g:9074:1: (lv_explicitSyntax_5_0= '|' )
                    {
                    // InternalXtend.g:9074:1: (lv_explicitSyntax_5_0= '|' )
                    // InternalXtend.g:9075:3: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,KW_VerticalLine,FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXClosureRule());
                      	        }
                             		setWithLastConsumed(current, "explicitSyntax", true, "|");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalXtend.g:9088:5: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalXtend.g:9089:1: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalXtend.g:9089:1: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalXtend.g:9090:3: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_106);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalXtend.g:9118:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalXtend.g:9119:2: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalXtend.g:9120:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalXtend.g:9127:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9130:28: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalXtend.g:9131:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalXtend.g:9131:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalXtend.g:9131:2: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalXtend.g:9131:2: ()
            // InternalXtend.g:9132:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:9137:2: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==KW_Package||(LA219_0>=KW_Class && LA219_0<=KW_LessThanSign)||(LA219_0>=KW_Extends && LA219_0<=KW_LeftCurlyBracket)||(LA219_0>=KW_Interface && LA219_0<=KW_LeftParenthesis)||(LA219_0>=KW_Extension && LA219_0<=KW_New)||(LA219_0>=KW_Public && LA219_0<=KW_Create)||(LA219_0>=KW_AFTER && LA219_0<=KW_Import)||LA219_0==KW_Switch||(LA219_0>=KW_NumberSign && LA219_0<=KW_LeftSquareBracket)||(LA219_0>=KW_PlusSign && LA219_0<=KW_HyphenMinus)||LA219_0==KW_ExclamationMark||LA219_0==KW_If||(LA219_0>=KW_For && LA219_0<=KW_Try)||(LA219_0>=RULE_ID && LA219_0<=RULE_RICH_TEXT_START)||(LA219_0>=RULE_HEX && LA219_0<=RULE_DECIMAL)) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // InternalXtend.g:9137:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalXtend.g:9137:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalXtend.g:9138:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalXtend.g:9138:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalXtend.g:9139:3: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_1_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalXtend.g:9155:2: (otherlv_2= ';' )?
            	    int alt218=2;
            	    int LA218_0 = input.LA(1);

            	    if ( (LA218_0==KW_Semicolon) ) {
            	        alt218=1;
            	    }
            	    switch (alt218) {
            	        case 1 :
            	            // InternalXtend.g:9155:4: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,KW_Semicolon,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalXtend.g:9167:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalXtend.g:9168:2: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalXtend.g:9169:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalXtend.g:9176:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9179:28: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalXtend.g:9180:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalXtend.g:9180:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalXtend.g:9180:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalXtend.g:9180:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // InternalXtend.g:9180:3: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // InternalXtend.g:9196:6: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // InternalXtend.g:9196:7: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // InternalXtend.g:9196:7: ()
            // InternalXtend.g:9197:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:9202:2: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==KW_Package||LA221_0==KW_Class||(LA221_0>=KW_Extends && LA221_0<=KW_Implements)||(LA221_0>=KW_Interface && LA221_0<=KW_LeftParenthesis)||LA221_0==KW_EqualsSignGreaterThanSign||(LA221_0>=KW_Extension && LA221_0<=KW_Throws)||(LA221_0>=KW_Public && LA221_0<=KW_Transient)||(LA221_0>=KW_Def && LA221_0<=KW_Create)||(LA221_0>=KW_AFTER && LA221_0<=KW_Import)||LA221_0==RULE_ID) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalXtend.g:9202:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalXtend.g:9202:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalXtend.g:9203:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalXtend.g:9203:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalXtend.g:9204:3: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      	        }
                             		add(
                             			current, 
                             			"declaredFormalParameters",
                              		lv_declaredFormalParameters_1_0, 
                              		"org.eclipse.xtend.core.Xtend.JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:9220:2: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==KW_Comma) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // InternalXtend.g:9220:4: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_57); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	          
                    	    }
                    	    // InternalXtend.g:9224:1: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalXtend.g:9225:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalXtend.g:9225:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalXtend.g:9226:3: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_104);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredFormalParameters",
                    	              		lv_declaredFormalParameters_3_0, 
                    	              		"org.eclipse.xtend.core.Xtend.JvmFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop220;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalXtend.g:9242:6: ( (lv_explicitSyntax_4_0= '|' ) )
            // InternalXtend.g:9243:1: (lv_explicitSyntax_4_0= '|' )
            {
            // InternalXtend.g:9243:1: (lv_explicitSyntax_4_0= '|' )
            // InternalXtend.g:9244:3: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,KW_VerticalLine,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXShortClosureRule());
              	        }
                     		setWithLastConsumed(current, "explicitSyntax", true, "|");
              	    
            }

            }


            }


            }


            }

            // InternalXtend.g:9257:4: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalXtend.g:9258:1: (lv_expression_5_0= ruleXExpression )
            {
            // InternalXtend.g:9258:1: (lv_expression_5_0= ruleXExpression )
            // InternalXtend.g:9259:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalXtend.g:9283:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalXtend.g:9284:2: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalXtend.g:9285:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalXtend.g:9292:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9295:28: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalXtend.g:9296:1: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalXtend.g:9296:1: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalXtend.g:9296:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_65);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XExpression_1; 
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalXtend.g:9321:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalXtend.g:9322:2: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalXtend.g:9323:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalXtend.g:9330:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9333:28: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalXtend.g:9334:1: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalXtend.g:9334:1: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalXtend.g:9334:2: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalXtend.g:9334:2: ()
            // InternalXtend.g:9335:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_If,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalXtend.g:9348:1: ( (lv_if_3_0= ruleXExpression ) )
            // InternalXtend.g:9349:1: (lv_if_3_0= ruleXExpression )
            {
            // InternalXtend.g:9349:1: (lv_if_3_0= ruleXExpression )
            // InternalXtend.g:9350:3: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_65);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // InternalXtend.g:9370:1: ( (lv_then_5_0= ruleXExpression ) )
            // InternalXtend.g:9371:1: (lv_then_5_0= ruleXExpression )
            {
            // InternalXtend.g:9371:1: (lv_then_5_0= ruleXExpression )
            // InternalXtend.g:9372:3: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_109);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:9388:2: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==KW_Else) ) {
                int LA222_1 = input.LA(2);

                if ( (synpred49_InternalXtend()) ) {
                    alt222=1;
                }
            }
            switch (alt222) {
                case 1 :
                    // InternalXtend.g:9388:3: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalXtend.g:9388:3: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalXtend.g:9388:4: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,KW_Else,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                          
                    }

                    }

                    // InternalXtend.g:9393:2: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalXtend.g:9394:1: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalXtend.g:9394:1: (lv_else_7_0= ruleXExpression )
                    // InternalXtend.g:9395:3: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalXtend.g:9419:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalXtend.g:9420:2: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalXtend.g:9421:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalXtend.g:9428:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9431:28: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // InternalXtend.g:9432:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // InternalXtend.g:9432:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // InternalXtend.g:9432:2: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // InternalXtend.g:9432:2: ()
            // InternalXtend.g:9433:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:9438:2: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( ((LA223_0>=KW_Annotation && LA223_0<=KW_LeftParenthesis)||LA223_0==KW_EqualsSignGreaterThanSign||LA223_0==KW_Create||(LA223_0>=KW_AFTER && LA223_0<=KW_SEPARATOR)||LA223_0==RULE_ID) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalXtend.g:9439:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalXtend.g:9439:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalXtend.g:9440:3: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_110);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"typeGuard",
                              		lv_typeGuard_1_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalXtend.g:9456:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==KW_Case) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // InternalXtend.g:9456:5: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,KW_Case,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                          
                    }
                    // InternalXtend.g:9460:1: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalXtend.g:9461:1: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalXtend.g:9461:1: (lv_case_3_0= ruleXExpression )
                    // InternalXtend.g:9462:3: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_111);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"case",
                              		lv_case_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalXtend.g:9478:4: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==KW_Colon) ) {
                alt225=1;
            }
            else if ( (LA225_0==KW_Comma) ) {
                alt225=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }
            switch (alt225) {
                case 1 :
                    // InternalXtend.g:9478:5: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalXtend.g:9478:5: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalXtend.g:9478:7: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                          
                    }
                    // InternalXtend.g:9482:1: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalXtend.g:9483:1: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalXtend.g:9483:1: (lv_then_5_0= ruleXExpression )
                    // InternalXtend.g:9484:3: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"then",
                              		lv_then_5_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:9501:6: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // InternalXtend.g:9501:6: ( (lv_fallThrough_6_0= ',' ) )
                    // InternalXtend.g:9502:1: (lv_fallThrough_6_0= ',' )
                    {
                    // InternalXtend.g:9502:1: (lv_fallThrough_6_0= ',' )
                    // InternalXtend.g:9503:3: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,KW_Comma,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXCasePartRule());
                      	        }
                             		setWithLastConsumed(current, "fallThrough", true, ",");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalXtend.g:9524:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalXtend.g:9525:2: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalXtend.g:9526:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalXtend.g:9533:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9536:28: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalXtend.g:9537:1: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalXtend.g:9537:1: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalXtend.g:9537:2: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalXtend.g:9537:2: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalXtend.g:9537:3: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalXtend.g:9545:5: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalXtend.g:9545:6: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalXtend.g:9545:6: ()
            // InternalXtend.g:9546:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_For,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }
            // InternalXtend.g:9559:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalXtend.g:9560:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalXtend.g:9560:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalXtend.g:9561:3: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_55);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_3_0, 
                      		"org.eclipse.xtend.core.Xtend.JvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,KW_Colon,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
                  
            }

            }


            }

            // InternalXtend.g:9581:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalXtend.g:9582:1: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalXtend.g:9582:1: (lv_forExpression_5_0= ruleXExpression )
            // InternalXtend.g:9583:3: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_65);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"forExpression",
                      		lv_forExpression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // InternalXtend.g:9603:1: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalXtend.g:9604:1: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalXtend.g:9604:1: (lv_eachExpression_7_0= ruleXExpression )
            // InternalXtend.g:9605:3: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_7_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalXtend.g:9629:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalXtend.g:9630:2: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalXtend.g:9631:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalXtend.g:9638:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9641:28: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalXtend.g:9642:1: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalXtend.g:9642:1: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalXtend.g:9642:2: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalXtend.g:9642:2: ()
            // InternalXtend.g:9643:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_For,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalXtend.g:9656:1: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==KW_Package||(LA227_0>=KW_Class && LA227_0<=KW_LessThanSign)||(LA227_0>=KW_Extends && LA227_0<=KW_LeftCurlyBracket)||(LA227_0>=KW_Interface && LA227_0<=KW_LeftParenthesis)||(LA227_0>=KW_Extension && LA227_0<=KW_New)||(LA227_0>=KW_Public && LA227_0<=KW_Create)||(LA227_0>=KW_AFTER && LA227_0<=KW_Import)||LA227_0==KW_Switch||(LA227_0>=KW_NumberSign && LA227_0<=KW_LeftSquareBracket)||(LA227_0>=KW_PlusSign && LA227_0<=KW_HyphenMinus)||LA227_0==KW_ExclamationMark||LA227_0==KW_If||(LA227_0>=KW_For && LA227_0<=KW_Try)||(LA227_0>=RULE_ID && LA227_0<=RULE_RICH_TEXT_START)||(LA227_0>=RULE_HEX && LA227_0<=RULE_DECIMAL)) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalXtend.g:9656:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalXtend.g:9656:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalXtend.g:9657:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalXtend.g:9657:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalXtend.g:9658:3: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_113);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"initExpressions",
                              		lv_initExpressions_3_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:9674:2: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop226:
                    do {
                        int alt226=2;
                        int LA226_0 = input.LA(1);

                        if ( (LA226_0==KW_Comma) ) {
                            alt226=1;
                        }


                        switch (alt226) {
                    	case 1 :
                    	    // InternalXtend.g:9674:4: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_114); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalXtend.g:9678:1: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalXtend.g:9679:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalXtend.g:9679:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalXtend.g:9680:3: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_113);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"initExpressions",
                    	              		lv_initExpressions_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop226;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,KW_Semicolon,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
                  
            }
            // InternalXtend.g:9700:1: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==KW_Package||(LA228_0>=KW_Class && LA228_0<=KW_LessThanSign)||(LA228_0>=KW_Extends && LA228_0<=KW_LeftCurlyBracket)||(LA228_0>=KW_Interface && LA228_0<=KW_LeftParenthesis)||(LA228_0>=KW_Extension && LA228_0<=KW_New)||(LA228_0>=KW_Public && LA228_0<=KW_Transient)||(LA228_0>=KW_Def && LA228_0<=KW_Create)||(LA228_0>=KW_AFTER && LA228_0<=KW_Import)||LA228_0==KW_Switch||(LA228_0>=KW_NumberSign && LA228_0<=KW_LeftSquareBracket)||(LA228_0>=KW_PlusSign && LA228_0<=KW_HyphenMinus)||LA228_0==KW_ExclamationMark||LA228_0==KW_If||(LA228_0>=KW_For && LA228_0<=KW_Try)||(LA228_0>=RULE_ID && LA228_0<=RULE_RICH_TEXT_START)||(LA228_0>=RULE_HEX && LA228_0<=RULE_DECIMAL)) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // InternalXtend.g:9701:1: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalXtend.g:9701:1: (lv_expression_7_0= ruleXExpression )
                    // InternalXtend.g:9702:3: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_116);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,KW_Semicolon,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
                  
            }
            // InternalXtend.g:9722:1: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==KW_Package||(LA230_0>=KW_Class && LA230_0<=KW_LessThanSign)||(LA230_0>=KW_Extends && LA230_0<=KW_LeftCurlyBracket)||(LA230_0>=KW_Interface && LA230_0<=KW_LeftParenthesis)||(LA230_0>=KW_Extension && LA230_0<=KW_New)||(LA230_0>=KW_Public && LA230_0<=KW_Transient)||(LA230_0>=KW_Def && LA230_0<=KW_Create)||(LA230_0>=KW_AFTER && LA230_0<=KW_Import)||LA230_0==KW_Switch||(LA230_0>=KW_NumberSign && LA230_0<=KW_LeftSquareBracket)||(LA230_0>=KW_PlusSign && LA230_0<=KW_HyphenMinus)||LA230_0==KW_ExclamationMark||LA230_0==KW_If||(LA230_0>=KW_For && LA230_0<=KW_Try)||(LA230_0>=RULE_ID && LA230_0<=RULE_RICH_TEXT_START)||(LA230_0>=RULE_HEX && LA230_0<=RULE_DECIMAL)) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    // InternalXtend.g:9722:2: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalXtend.g:9722:2: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalXtend.g:9723:1: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalXtend.g:9723:1: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalXtend.g:9724:3: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"updateExpressions",
                              		lv_updateExpressions_9_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:9740:2: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop229:
                    do {
                        int alt229=2;
                        int LA229_0 = input.LA(1);

                        if ( (LA229_0==KW_Comma) ) {
                            alt229=1;
                        }


                        switch (alt229) {
                    	case 1 :
                    	    // InternalXtend.g:9740:4: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	          
                    	    }
                    	    // InternalXtend.g:9744:1: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalXtend.g:9745:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalXtend.g:9745:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalXtend.g:9746:3: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"updateExpressions",
                    	              		lv_updateExpressions_11_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop229;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
                  
            }
            // InternalXtend.g:9766:1: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalXtend.g:9767:1: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalXtend.g:9767:1: (lv_eachExpression_13_0= ruleXExpression )
            // InternalXtend.g:9768:3: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_13_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalXtend.g:9792:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalXtend.g:9793:2: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalXtend.g:9794:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalXtend.g:9801:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9804:28: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalXtend.g:9805:1: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalXtend.g:9805:1: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalXtend.g:9805:2: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalXtend.g:9805:2: ()
            // InternalXtend.g:9806:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_While,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalXtend.g:9819:1: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalXtend.g:9820:1: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalXtend.g:9820:1: (lv_predicate_3_0= ruleXExpression )
            // InternalXtend.g:9821:3: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_65);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // InternalXtend.g:9841:1: ( (lv_body_5_0= ruleXExpression ) )
            // InternalXtend.g:9842:1: (lv_body_5_0= ruleXExpression )
            {
            // InternalXtend.g:9842:1: (lv_body_5_0= ruleXExpression )
            // InternalXtend.g:9843:3: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalXtend.g:9867:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalXtend.g:9868:2: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalXtend.g:9869:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalXtend.g:9876:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9879:28: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalXtend.g:9880:1: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalXtend.g:9880:1: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalXtend.g:9880:2: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalXtend.g:9880:2: ()
            // InternalXtend.g:9881:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_Do,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
                  
            }
            // InternalXtend.g:9890:1: ( (lv_body_2_0= ruleXExpression ) )
            // InternalXtend.g:9891:1: (lv_body_2_0= ruleXExpression )
            {
            // InternalXtend.g:9891:1: (lv_body_2_0= ruleXExpression )
            // InternalXtend.g:9892:3: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_117);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,KW_While,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
                  
            }
            // InternalXtend.g:9916:1: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalXtend.g:9917:1: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalXtend.g:9917:1: (lv_predicate_5_0= ruleXExpression )
            // InternalXtend.g:9918:3: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_65);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalXtend.g:9946:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalXtend.g:9947:2: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalXtend.g:9948:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalXtend.g:9955:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:9958:28: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalXtend.g:9959:1: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalXtend.g:9959:1: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalXtend.g:9959:2: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // InternalXtend.g:9959:2: ()
            // InternalXtend.g:9960:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // InternalXtend.g:9969:1: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop232:
            do {
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( (LA232_0==KW_Package||(LA232_0>=KW_Class && LA232_0<=KW_LessThanSign)||(LA232_0>=KW_Extends && LA232_0<=KW_LeftCurlyBracket)||(LA232_0>=KW_Interface && LA232_0<=KW_LeftParenthesis)||(LA232_0>=KW_Extension && LA232_0<=KW_New)||(LA232_0>=KW_Public && LA232_0<=KW_Create)||(LA232_0>=KW_AFTER && LA232_0<=KW_Import)||LA232_0==KW_Switch||(LA232_0>=KW_NumberSign && LA232_0<=KW_LeftSquareBracket)||(LA232_0>=KW_PlusSign && LA232_0<=KW_HyphenMinus)||LA232_0==KW_ExclamationMark||LA232_0==KW_If||(LA232_0>=KW_For && LA232_0<=KW_Try)||(LA232_0>=RULE_ID && LA232_0<=RULE_RICH_TEXT_START)||(LA232_0>=RULE_HEX && LA232_0<=RULE_DECIMAL)) ) {
                    alt232=1;
                }


                switch (alt232) {
            	case 1 :
            	    // InternalXtend.g:9969:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalXtend.g:9969:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalXtend.g:9970:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalXtend.g:9970:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalXtend.g:9971:3: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_2_0, 
            	              		"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalXtend.g:9987:2: (otherlv_3= ';' )?
            	    int alt231=2;
            	    int LA231_0 = input.LA(1);

            	    if ( (LA231_0==KW_Semicolon) ) {
            	        alt231=1;
            	    }
            	    switch (alt231) {
            	        case 1 :
            	            // InternalXtend.g:9987:4: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,KW_Semicolon,FOLLOW_118); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);

            otherlv_4=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalXtend.g:10003:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalXtend.g:10004:2: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalXtend.g:10005:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalXtend.g:10012:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10015:28: ( ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression ) )
            // InternalXtend.g:10016:1: ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )
            {
            // InternalXtend.g:10016:1: ( ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==KW_Var) && (synpred51_InternalXtend())) {
                alt233=1;
            }
            else if ( (LA233_0==KW_Val) && (synpred51_InternalXtend())) {
                alt233=1;
            }
            else if ( (LA233_0==KW_Extension) ) {
                switch ( input.LA(2) ) {
                case EOF:
                case KW_Package:
                case KW_Semicolon:
                case KW_Class:
                case KW_LessThanSign:
                case KW_Comma:
                case KW_GreaterThanSign:
                case KW_Extends:
                case KW_Implements:
                case KW_LeftCurlyBracket:
                case KW_RightCurlyBracket:
                case KW_Interface:
                case KW_Enum:
                case KW_Annotation:
                case KW_LeftParenthesis:
                case KW_EqualsSignGreaterThanSign:
                case KW_EqualsSign:
                case KW_Extension:
                case KW_Throws:
                case KW_New:
                case KW_FullStop:
                case KW_Public:
                case KW_Private:
                case KW_Protected:
                case KW_Abstract:
                case KW_Static:
                case KW_Dispatch:
                case KW_Final:
                case KW_Strictfp:
                case KW_Native:
                case KW_Volatile:
                case KW_Synchronized:
                case KW_Transient:
                case KW_Def:
                case KW_Override:
                case KW_Create:
                case KW_AFTER:
                case KW_BEFORE:
                case KW_SEPARATOR:
                case KW_Import:
                case KW_Switch:
                case KW_NumberSign:
                case KW_LeftSquareBracket:
                case KW_RightSquareBracket:
                case KW_PlusSignEqualsSign:
                case KW_HyphenMinusEqualsSign:
                case KW_AsteriskEqualsSign:
                case KW_SolidusEqualsSign:
                case KW_PercentSignEqualsSign:
                case KW_GreaterThanSignEqualsSign:
                case KW_VerticalLineVerticalLine:
                case KW_AmpersandAmpersand:
                case KW_EqualsSignEqualsSign:
                case KW_ExclamationMarkEqualsSign:
                case KW_EqualsSignEqualsSignEqualsSign:
                case KW_ExclamationMarkEqualsSignEqualsSign:
                case KW_Instanceof:
                case KW_HyphenMinusGreaterThanSign:
                case KW_FullStopFullStopLessThanSign:
                case KW_FullStopFullStop:
                case KW_LessThanSignGreaterThanSign:
                case KW_QuestionMarkColon:
                case KW_PlusSign:
                case KW_HyphenMinus:
                case KW_Asterisk:
                case KW_AsteriskAsterisk:
                case KW_Solidus:
                case KW_PercentSign:
                case KW_ExclamationMark:
                case KW_As:
                case KW_PlusSignPlusSign:
                case KW_HyphenMinusHyphenMinus:
                case KW_ColonColon:
                case KW_QuestionMarkFullStop:
                case KW_If:
                case KW_For:
                case KW_While:
                case KW_Do:
                case KW_Super:
                case KW_False:
                case KW_True:
                case KW_Null:
                case KW_Typeof:
                case KW_Throw:
                case KW_Return:
                case KW_Try:
                case RULE_ID:
                case RULE_STRING:
                case RULE_RICH_TEXT:
                case RULE_RICH_TEXT_START:
                case RULE_RICH_TEXT_INBETWEEN:
                case RULE_COMMENT_RICH_TEXT_INBETWEEN:
                case RULE_RICH_TEXT_END:
                case RULE_COMMENT_RICH_TEXT_END:
                case RULE_HEX:
                case RULE_INT:
                case RULE_DECIMAL:
                    {
                    alt233=2;
                    }
                    break;
                case KW_Var:
                    {
                    int LA233_5 = input.LA(3);

                    if ( (synpred51_InternalXtend()) ) {
                        alt233=1;
                    }
                    else if ( (true) ) {
                        alt233=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 233, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case KW_Val:
                    {
                    int LA233_6 = input.LA(3);

                    if ( (synpred51_InternalXtend()) ) {
                        alt233=1;
                    }
                    else if ( (true) ) {
                        alt233=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 233, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 233, 3, input);

                    throw nvae;
                }

            }
            else if ( (LA233_0==KW_Package||(LA233_0>=KW_Class && LA233_0<=KW_LessThanSign)||(LA233_0>=KW_Extends && LA233_0<=KW_LeftCurlyBracket)||(LA233_0>=KW_Interface && LA233_0<=KW_LeftParenthesis)||(LA233_0>=KW_Throws && LA233_0<=KW_New)||(LA233_0>=KW_Public && LA233_0<=KW_Transient)||(LA233_0>=KW_Def && LA233_0<=KW_Create)||(LA233_0>=KW_AFTER && LA233_0<=KW_Import)||LA233_0==KW_Switch||(LA233_0>=KW_NumberSign && LA233_0<=KW_LeftSquareBracket)||(LA233_0>=KW_PlusSign && LA233_0<=KW_HyphenMinus)||LA233_0==KW_ExclamationMark||LA233_0==KW_If||(LA233_0>=KW_For && LA233_0<=KW_Try)||(LA233_0>=RULE_ID && LA233_0<=RULE_RICH_TEXT_START)||(LA233_0>=RULE_HEX && LA233_0<=RULE_DECIMAL)) ) {
                alt233=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;
            }
            switch (alt233) {
                case 1 :
                    // InternalXtend.g:10016:2: ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration )
                    {
                    // InternalXtend.g:10016:2: ( ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration )
                    // InternalXtend.g:10016:3: ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XVariableDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:10057:5: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalXtend.g:10073:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalXtend.g:10074:2: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalXtend.g:10075:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalXtend.g:10082:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10085:28: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalXtend.g:10086:1: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalXtend.g:10086:1: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalXtend.g:10086:2: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalXtend.g:10086:2: ()
            // InternalXtend.g:10087:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:10092:2: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==KW_LessThanSign) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalXtend.g:10092:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalXtend.g:10096:1: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalXtend.g:10097:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalXtend.g:10097:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalXtend.g:10098:3: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_10);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:10114:2: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==KW_Comma) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // InternalXtend.g:10114:4: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalXtend.g:10118:1: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalXtend.g:10119:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalXtend.g:10119:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalXtend.g:10120:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_4_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop234;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }

            // InternalXtend.g:10140:3: ( ( ruleIdOrSuper ) )
            // InternalXtend.g:10141:1: ( ruleIdOrSuper )
            {
            // InternalXtend.g:10141:1: ( ruleIdOrSuper )
            // InternalXtend.g:10142:3: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXFeatureCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_63);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:10155:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt238=2;
            alt238 = dfa238.predict(input);
            switch (alt238) {
                case 1 :
                    // InternalXtend.g:10155:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // InternalXtend.g:10155:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // InternalXtend.g:10155:4: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // InternalXtend.g:10162:1: (lv_explicitOperationCall_7_0= '(' )
                    // InternalXtend.g:10163:3: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXFeatureCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:10176:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt237=3;
                    alt237 = dfa237.predict(input);
                    switch (alt237) {
                        case 1 :
                            // InternalXtend.g:10176:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalXtend.g:10176:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalXtend.g:10176:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalXtend.g:10193:1: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalXtend.g:10194:3: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_65);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_8_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:10211:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalXtend.g:10211:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalXtend.g:10211:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalXtend.g:10211:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalXtend.g:10212:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalXtend.g:10212:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalXtend.g:10213:3: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_9_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:10229:2: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop236:
                            do {
                                int alt236=2;
                                int LA236_0 = input.LA(1);

                                if ( (LA236_0==KW_Comma) ) {
                                    alt236=1;
                                }


                                switch (alt236) {
                            	case 1 :
                            	    // InternalXtend.g:10229:4: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,KW_Comma,FOLLOW_33); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:10233:1: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalXtend.g:10234:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalXtend.g:10234:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalXtend.g:10235:3: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"featureCallArguments",
                            	              		lv_featureCallArguments_11_0, 
                            	              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop236;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,KW_RightParenthesis,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }
                    break;

            }

            // InternalXtend.g:10255:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt239=2;
            alt239 = dfa239.predict(input);
            switch (alt239) {
                case 1 :
                    // InternalXtend.g:10255:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalXtend.g:10258:1: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalXtend.g:10259:3: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"featureCallArguments",
                              		lv_featureCallArguments_13_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalXtend.g:10283:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalXtend.g:10284:2: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalXtend.g:10285:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalXtend.g:10292:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10295:28: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalXtend.g:10296:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalXtend.g:10296:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==KW_Package||LA240_0==KW_Class||(LA240_0>=KW_Extends && LA240_0<=KW_Implements)||(LA240_0>=KW_Interface && LA240_0<=KW_Annotation)||(LA240_0>=KW_Extension && LA240_0<=KW_Throws)||(LA240_0>=KW_Public && LA240_0<=KW_Transient)||(LA240_0>=KW_Def && LA240_0<=KW_Create)||(LA240_0>=KW_AFTER && LA240_0<=KW_Import)||LA240_0==RULE_ID) ) {
                alt240=1;
            }
            else if ( (LA240_0==KW_Super) ) {
                alt240=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;
            }
            switch (alt240) {
                case 1 :
                    // InternalXtend.g:10297:5: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_FeatureCallID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:10309:2: kw= 'super'
                    {
                    kw=(Token)match(input,KW_Super,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalXtend.g:10322:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalXtend.g:10323:2: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalXtend.g:10324:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalXtend.g:10331:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:10334:28: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalXtend.g:10335:1: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalXtend.g:10335:1: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalXtend.g:10335:2: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalXtend.g:10335:2: ()
            // InternalXtend.g:10336:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:10341:2: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==KW_False) ) {
                alt241=1;
            }
            else if ( (LA241_0==KW_True) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }
            switch (alt241) {
                case 1 :
                    // InternalXtend.g:10341:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,KW_False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:10346:6: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalXtend.g:10346:6: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalXtend.g:10347:1: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalXtend.g:10347:1: (lv_isTrue_2_0= 'true' )
                    // InternalXtend.g:10348:3: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,KW_True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "isTrue", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalXtend.g:10369:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalXtend.g:10370:2: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalXtend.g:10371:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalXtend.g:10378:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:10381:28: ( ( () otherlv_1= 'null' ) )
            // InternalXtend.g:10382:1: ( () otherlv_1= 'null' )
            {
            // InternalXtend.g:10382:1: ( () otherlv_1= 'null' )
            // InternalXtend.g:10382:2: () otherlv_1= 'null'
            {
            // InternalXtend.g:10382:2: ()
            // InternalXtend.g:10383:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_Null,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalXtend.g:10400:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalXtend.g:10401:2: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalXtend.g:10402:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalXtend.g:10409:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10412:28: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalXtend.g:10413:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalXtend.g:10413:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalXtend.g:10413:2: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalXtend.g:10413:2: ()
            // InternalXtend.g:10414:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalXtend.g:10419:2: ( (lv_value_1_0= ruleNumber ) )
            // InternalXtend.g:10420:1: (lv_value_1_0= ruleNumber )
            {
            // InternalXtend.g:10420:1: (lv_value_1_0= ruleNumber )
            // InternalXtend.g:10421:3: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"org.eclipse.xtext.xbase.Xbase.Number");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalXtend.g:10445:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalXtend.g:10446:2: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalXtend.g:10447:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalXtend.g:10454:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10457:28: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // InternalXtend.g:10458:1: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // InternalXtend.g:10458:1: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // InternalXtend.g:10458:2: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // InternalXtend.g:10458:2: ()
            // InternalXtend.g:10459:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_Typeof,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalXtend.g:10472:1: ( ( ruleQualifiedName ) )
            // InternalXtend.g:10473:1: ( ruleQualifiedName )
            {
            // InternalXtend.g:10473:1: ( ruleQualifiedName )
            // InternalXtend.g:10474:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXTypeLiteralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FOLLOW_120);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:10487:2: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop242:
            do {
                int alt242=2;
                int LA242_0 = input.LA(1);

                if ( (LA242_0==KW_LeftSquareBracket) ) {
                    alt242=1;
                }


                switch (alt242) {
            	case 1 :
            	    // InternalXtend.g:10488:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalXtend.g:10488:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalXtend.g:10489:3: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arrayDimensions",
            	              		lv_arrayDimensions_4_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop242;
                }
            } while (true);

            otherlv_5=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalXtend.g:10517:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalXtend.g:10518:2: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalXtend.g:10519:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalXtend.g:10526:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10529:28: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalXtend.g:10530:1: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalXtend.g:10530:1: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalXtend.g:10530:2: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalXtend.g:10530:2: ()
            // InternalXtend.g:10531:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_Throw,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
                  
            }
            // InternalXtend.g:10540:1: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalXtend.g:10541:1: (lv_expression_2_0= ruleXExpression )
            {
            // InternalXtend.g:10541:1: (lv_expression_2_0= ruleXExpression )
            // InternalXtend.g:10542:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalXtend.g:10566:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalXtend.g:10567:2: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalXtend.g:10568:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalXtend.g:10575:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10578:28: ( ( () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalXtend.g:10579:1: ( () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalXtend.g:10579:1: ( () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalXtend.g:10579:2: () otherlv_1= 'return' ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalXtend.g:10579:2: ()
            // InternalXtend.g:10580:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_Return,FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
                  
            }
            // InternalXtend.g:10589:1: ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt243=2;
            alt243 = dfa243.predict(input);
            switch (alt243) {
                case 1 :
                    // InternalXtend.g:10589:2: ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalXtend.g:10640:1: (lv_expression_2_0= ruleXExpression )
                    // InternalXtend.g:10641:3: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalXtend.g:10665:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalXtend.g:10666:2: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalXtend.g:10667:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalXtend.g:10674:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10677:28: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalXtend.g:10678:1: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalXtend.g:10678:1: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalXtend.g:10678:2: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalXtend.g:10678:2: ()
            // InternalXtend.g:10679:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_Try,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
                  
            }
            // InternalXtend.g:10688:1: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalXtend.g:10689:1: (lv_expression_2_0= ruleXExpression )
            {
            // InternalXtend.g:10689:1: (lv_expression_2_0= ruleXExpression )
            // InternalXtend.g:10690:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_122);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:10706:2: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==KW_Catch) ) {
                alt246=1;
            }
            else if ( (LA246_0==KW_Finally) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;
            }
            switch (alt246) {
                case 1 :
                    // InternalXtend.g:10706:3: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalXtend.g:10706:3: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalXtend.g:10706:4: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalXtend.g:10706:4: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt244=0;
                    loop244:
                    do {
                        int alt244=2;
                        int LA244_0 = input.LA(1);

                        if ( (LA244_0==KW_Catch) ) {
                            int LA244_2 = input.LA(2);

                            if ( (synpred56_InternalXtend()) ) {
                                alt244=1;
                            }


                        }


                        switch (alt244) {
                    	case 1 :
                    	    // InternalXtend.g:10706:5: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalXtend.g:10708:1: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalXtend.g:10709:3: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"catchClauses",
                    	              		lv_catchClauses_3_0, 
                    	              		"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt244 >= 1 ) break loop244;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(244, input);
                                throw eee;
                        }
                        cnt244++;
                    } while (true);

                    // InternalXtend.g:10725:3: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt245=2;
                    int LA245_0 = input.LA(1);

                    if ( (LA245_0==KW_Finally) ) {
                        int LA245_1 = input.LA(2);

                        if ( (synpred57_InternalXtend()) ) {
                            alt245=1;
                        }
                    }
                    switch (alt245) {
                        case 1 :
                            // InternalXtend.g:10725:4: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalXtend.g:10725:4: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalXtend.g:10725:5: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,KW_Finally,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                                  
                            }

                            }

                            // InternalXtend.g:10730:2: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalXtend.g:10731:1: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalXtend.g:10731:1: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalXtend.g:10732:3: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finallyExpression",
                                      		lv_finallyExpression_5_0, 
                                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:10749:6: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalXtend.g:10749:6: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalXtend.g:10749:8: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,KW_Finally,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                          
                    }
                    // InternalXtend.g:10753:1: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalXtend.g:10754:1: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalXtend.g:10754:1: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalXtend.g:10755:3: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"finallyExpression",
                              		lv_finallyExpression_7_0, 
                              		"org.eclipse.xtext.xbase.Xbase.XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalXtend.g:10779:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalXtend.g:10780:2: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalXtend.g:10781:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalXtend.g:10788:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10791:28: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalXtend.g:10792:1: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalXtend.g:10792:1: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalXtend.g:10792:2: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalXtend.g:10792:2: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalXtend.g:10792:3: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalXtend.g:10795:5: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalXtend.g:10795:6: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalXtend.g:10795:6: ()
            // InternalXtend.g:10796:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_Synchronized,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }

            }


            }

            // InternalXtend.g:10809:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalXtend.g:10810:1: (lv_param_3_0= ruleXExpression )
            {
            // InternalXtend.g:10810:1: (lv_param_3_0= ruleXExpression )
            // InternalXtend.g:10811:3: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_65);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"param",
                      		lv_param_3_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // InternalXtend.g:10831:1: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalXtend.g:10832:1: (lv_expression_5_0= ruleXExpression )
            {
            // InternalXtend.g:10832:1: (lv_expression_5_0= ruleXExpression )
            // InternalXtend.g:10833:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalXtend.g:10857:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalXtend.g:10858:2: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalXtend.g:10859:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalXtend.g:10866:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10869:28: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalXtend.g:10870:1: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalXtend.g:10870:1: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalXtend.g:10870:2: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalXtend.g:10870:2: ( ( 'catch' )=>otherlv_0= 'catch' )
            // InternalXtend.g:10870:3: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,KW_Catch,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
                  
            }

            }

            otherlv_1=(Token)match(input,KW_LeftParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalXtend.g:10879:1: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalXtend.g:10880:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalXtend.g:10880:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalXtend.g:10881:3: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_65);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_2_0, 
                      		"org.eclipse.xtend.core.Xtend.FullJvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,KW_RightParenthesis,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
                  
            }
            // InternalXtend.g:10901:1: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalXtend.g:10902:1: (lv_expression_4_0= ruleXExpression )
            {
            // InternalXtend.g:10902:1: (lv_expression_4_0= ruleXExpression )
            // InternalXtend.g:10903:3: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"org.eclipse.xtext.xbase.Xbase.XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalXtend.g:10927:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalXtend.g:10928:2: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalXtend.g:10929:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalXtend.g:10936:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:10939:28: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalXtend.g:10940:1: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalXtend.g:10940:1: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalXtend.g:10941:5: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_53);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ValidID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalXtend.g:10951:1: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop247:
            do {
                int alt247=2;
                alt247 = dfa247.predict(input);
                switch (alt247) {
            	case 1 :
            	    // InternalXtend.g:10951:2: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalXtend.g:10951:2: ( ( '.' )=>kw= '.' )
            	    // InternalXtend.g:10951:3: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FOLLOW_53);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalXtend.g:10978:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // InternalXtend.g:10982:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalXtend.g:10983:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalXtend.g:10993:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // InternalXtend.g:10997:28: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalXtend.g:10998:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalXtend.g:10998:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==RULE_HEX) ) {
                alt251=1;
            }
            else if ( ((LA251_0>=RULE_INT && LA251_0<=RULE_DECIMAL)) ) {
                alt251=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;
            }
            switch (alt251) {
                case 1 :
                    // InternalXtend.g:10998:6: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:11006:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalXtend.g:11006:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalXtend.g:11006:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalXtend.g:11006:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt248=2;
                    int LA248_0 = input.LA(1);

                    if ( (LA248_0==RULE_INT) ) {
                        alt248=1;
                    }
                    else if ( (LA248_0==RULE_DECIMAL) ) {
                        alt248=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 248, 0, input);

                        throw nvae;
                    }
                    switch (alt248) {
                        case 1 :
                            // InternalXtend.g:11006:12: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_INT_1);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalXtend.g:11014:10: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_DECIMAL_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
                                  
                            }

                            }
                            break;

                    }

                    // InternalXtend.g:11021:2: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt250=2;
                    int LA250_0 = input.LA(1);

                    if ( (LA250_0==KW_FullStop) ) {
                        int LA250_1 = input.LA(2);

                        if ( ((LA250_1>=RULE_INT && LA250_1<=RULE_DECIMAL)) ) {
                            alt250=1;
                        }
                    }
                    switch (alt250) {
                        case 1 :
                            // InternalXtend.g:11022:2: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,KW_FullStop,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
                                  
                            }
                            // InternalXtend.g:11027:1: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt249=2;
                            int LA249_0 = input.LA(1);

                            if ( (LA249_0==RULE_INT) ) {
                                alt249=1;
                            }
                            else if ( (LA249_0==RULE_DECIMAL) ) {
                                alt249=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 249, 0, input);

                                throw nvae;
                            }
                            switch (alt249) {
                                case 1 :
                                    // InternalXtend.g:11027:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_INT_4);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
                                          
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalXtend.g:11035:10: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_DECIMAL_5);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalXtend.g:11055:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalXtend.g:11056:2: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalXtend.g:11057:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalXtend.g:11064:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11067:28: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalXtend.g:11068:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalXtend.g:11068:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==KW_Annotation||LA253_0==KW_Create||(LA253_0>=KW_AFTER && LA253_0<=KW_SEPARATOR)||LA253_0==RULE_ID) ) {
                alt253=1;
            }
            else if ( (LA253_0==KW_LeftParenthesis||LA253_0==KW_EqualsSignGreaterThanSign) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }
            switch (alt253) {
                case 1 :
                    // InternalXtend.g:11068:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalXtend.g:11068:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalXtend.g:11069:5: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_49);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmParameterizedTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalXtend.g:11077:1: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop252:
                    do {
                        int alt252=2;
                        int LA252_0 = input.LA(1);

                        if ( (LA252_0==KW_LeftSquareBracket) ) {
                            int LA252_2 = input.LA(2);

                            if ( (LA252_2==KW_RightSquareBracket) ) {
                                int LA252_3 = input.LA(3);

                                if ( (synpred61_InternalXtend()) ) {
                                    alt252=1;
                                }


                            }


                        }


                        switch (alt252) {
                    	case 1 :
                    	    // InternalXtend.g:11077:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalXtend.g:11078:24: ( () ruleArrayBrackets )
                    	    // InternalXtend.g:11078:25: () ruleArrayBrackets
                    	    {
                    	    // InternalXtend.g:11078:25: ()
                    	    // InternalXtend.g:11079:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_49);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop252;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:11094:5: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFunctionTypeRef_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalXtend.g:11110:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalXtend.g:11111:2: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalXtend.g:11112:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalXtend.g:11119:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalXtend.g:11122:28: ( (kw= '[' kw= ']' ) )
            // InternalXtend.g:11123:1: (kw= '[' kw= ']' )
            {
            // InternalXtend.g:11123:1: (kw= '[' kw= ']' )
            // InternalXtend.g:11124:2: kw= '[' kw= ']'
            {
            kw=(Token)match(input,KW_LeftSquareBracket,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
                  
            }
            kw=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalXtend.g:11143:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalXtend.g:11144:2: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalXtend.g:11145:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalXtend.g:11152:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11155:28: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalXtend.g:11156:1: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalXtend.g:11156:1: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalXtend.g:11156:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalXtend.g:11156:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==KW_LeftParenthesis) ) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // InternalXtend.g:11156:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                          
                    }
                    // InternalXtend.g:11160:1: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt255=2;
                    int LA255_0 = input.LA(1);

                    if ( ((LA255_0>=KW_Annotation && LA255_0<=KW_LeftParenthesis)||LA255_0==KW_EqualsSignGreaterThanSign||LA255_0==KW_Create||(LA255_0>=KW_AFTER && LA255_0<=KW_SEPARATOR)||LA255_0==RULE_ID) ) {
                        alt255=1;
                    }
                    switch (alt255) {
                        case 1 :
                            // InternalXtend.g:11160:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalXtend.g:11160:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalXtend.g:11161:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalXtend.g:11161:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalXtend.g:11162:3: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"paramTypes",
                                      		lv_paramTypes_1_0, 
                                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalXtend.g:11178:2: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop254:
                            do {
                                int alt254=2;
                                int LA254_0 = input.LA(1);

                                if ( (LA254_0==KW_Comma) ) {
                                    alt254=1;
                                }


                                switch (alt254) {
                            	case 1 :
                            	    // InternalXtend.g:11178:4: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // InternalXtend.g:11182:1: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalXtend.g:11183:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalXtend.g:11183:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalXtend.g:11184:3: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"paramTypes",
                            	              		lv_paramTypes_3_0, 
                            	              		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop254;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
                  
            }
            // InternalXtend.g:11208:1: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalXtend.g:11209:1: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalXtend.g:11209:1: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalXtend.g:11210:3: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_6_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalXtend.g:11234:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalXtend.g:11235:2: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalXtend.g:11236:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalXtend.g:11243:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11246:28: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalXtend.g:11247:1: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalXtend.g:11247:1: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalXtend.g:11247:2: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalXtend.g:11247:2: ( ( ruleQualifiedName ) )
            // InternalXtend.g:11248:1: ( ruleQualifiedName )
            {
            // InternalXtend.g:11248:1: ( ruleQualifiedName )
            // InternalXtend.g:11249:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_125);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:11262:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt261=2;
            alt261 = dfa261.predict(input);
            switch (alt261) {
                case 1 :
                    // InternalXtend.g:11262:3: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalXtend.g:11262:3: ( ( '<' )=>otherlv_1= '<' )
                    // InternalXtend.g:11262:4: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }

                    // InternalXtend.g:11267:2: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalXtend.g:11268:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalXtend.g:11268:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalXtend.g:11269:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_10);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:11285:2: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop257:
                    do {
                        int alt257=2;
                        int LA257_0 = input.LA(1);

                        if ( (LA257_0==KW_Comma) ) {
                            alt257=1;
                        }


                        switch (alt257) {
                    	case 1 :
                    	    // InternalXtend.g:11285:4: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalXtend.g:11289:1: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalXtend.g:11290:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalXtend.g:11290:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalXtend.g:11291:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"arguments",
                    	              		lv_arguments_4_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop257;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                          
                    }
                    // InternalXtend.g:11311:1: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop260:
                    do {
                        int alt260=2;
                        alt260 = dfa260.predict(input);
                        switch (alt260) {
                    	case 1 :
                    	    // InternalXtend.g:11311:2: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalXtend.g:11311:2: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalXtend.g:11311:3: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalXtend.g:11313:5: ( () otherlv_7= '.' )
                    	    // InternalXtend.g:11313:6: () otherlv_7= '.'
                    	    {
                    	    // InternalXtend.g:11313:6: ()
                    	    // InternalXtend.g:11314:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	          
                    	    }

                    	    }


                    	    }

                    	    // InternalXtend.g:11323:3: ( ( ruleValidID ) )
                    	    // InternalXtend.g:11324:1: ( ruleValidID )
                    	    {
                    	    // InternalXtend.g:11324:1: ( ruleValidID )
                    	    // InternalXtend.g:11325:3: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	              
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_54);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // InternalXtend.g:11338:2: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt259=2;
                    	    alt259 = dfa259.predict(input);
                    	    switch (alt259) {
                    	        case 1 :
                    	            // InternalXtend.g:11338:3: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalXtend.g:11338:3: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalXtend.g:11338:4: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	                  
                    	            }

                    	            }

                    	            // InternalXtend.g:11343:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalXtend.g:11344:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalXtend.g:11344:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalXtend.g:11345:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_10);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"arguments",
                    	                      		lv_arguments_10_0, 
                    	                      		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }

                    	            // InternalXtend.g:11361:2: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop258:
                    	            do {
                    	                int alt258=2;
                    	                int LA258_0 = input.LA(1);

                    	                if ( (LA258_0==KW_Comma) ) {
                    	                    alt258=1;
                    	                }


                    	                switch (alt258) {
                    	            	case 1 :
                    	            	    // InternalXtend.g:11361:4: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_52); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	          	newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	          
                    	            	    }
                    	            	    // InternalXtend.g:11365:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalXtend.g:11366:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalXtend.g:11366:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalXtend.g:11367:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {
                    	            	       
                    	            	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
                    	            	      	    
                    	            	    }
                    	            	    pushFollow(FOLLOW_10);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      	        if (current==null) {
                    	            	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      	        }
                    	            	             		add(
                    	            	             			current, 
                    	            	             			"arguments",
                    	            	              		lv_arguments_12_0, 
                    	            	              		"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      	        afterParserOrEnumRuleCall();
                    	            	      	    
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop258;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,KW_GreaterThanSign,FOLLOW_53); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop260;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalXtend.g:11395:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalXtend.g:11396:2: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalXtend.g:11397:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalXtend.g:11404:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11407:28: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalXtend.g:11408:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalXtend.g:11408:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( ((LA262_0>=KW_Annotation && LA262_0<=KW_LeftParenthesis)||LA262_0==KW_EqualsSignGreaterThanSign||LA262_0==KW_Create||(LA262_0>=KW_AFTER && LA262_0<=KW_SEPARATOR)||LA262_0==RULE_ID) ) {
                alt262=1;
            }
            else if ( (LA262_0==KW_QuestionMark) ) {
                alt262=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;
            }
            switch (alt262) {
                case 1 :
                    // InternalXtend.g:11409:5: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalXtend.g:11419:5: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmWildcardTypeReference_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalXtend.g:11435:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalXtend.g:11436:2: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalXtend.g:11437:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalXtend.g:11444:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11447:28: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalXtend.g:11448:1: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalXtend.g:11448:1: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalXtend.g:11448:2: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalXtend.g:11448:2: ()
            // InternalXtend.g:11449:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_QuestionMark,FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
                  
            }
            // InternalXtend.g:11458:1: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt265=3;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==KW_Extends) ) {
                alt265=1;
            }
            else if ( (LA265_0==KW_Super) ) {
                alt265=2;
            }
            switch (alt265) {
                case 1 :
                    // InternalXtend.g:11458:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalXtend.g:11458:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalXtend.g:11458:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalXtend.g:11458:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalXtend.g:11459:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalXtend.g:11459:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalXtend.g:11460:3: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_127);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_2_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:11476:2: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop263:
                    do {
                        int alt263=2;
                        int LA263_0 = input.LA(1);

                        if ( (LA263_0==KW_Ampersand) ) {
                            alt263=1;
                        }


                        switch (alt263) {
                    	case 1 :
                    	    // InternalXtend.g:11477:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalXtend.g:11477:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalXtend.g:11478:3: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_127);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_3_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop263;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:11495:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalXtend.g:11495:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalXtend.g:11495:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalXtend.g:11495:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalXtend.g:11496:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalXtend.g:11496:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalXtend.g:11497:3: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_127);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_4_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:11513:2: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop264:
                    do {
                        int alt264=2;
                        int LA264_0 = input.LA(1);

                        if ( (LA264_0==KW_Ampersand) ) {
                            alt264=1;
                        }


                        switch (alt264) {
                    	case 1 :
                    	    // InternalXtend.g:11514:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalXtend.g:11514:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalXtend.g:11515:3: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_127);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_5_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop264;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalXtend.g:11539:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalXtend.g:11540:2: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalXtend.g:11541:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalXtend.g:11548:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11551:28: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalXtend.g:11552:1: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalXtend.g:11552:1: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalXtend.g:11552:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,KW_Extends,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
                  
            }
            // InternalXtend.g:11556:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalXtend.g:11557:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalXtend.g:11557:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalXtend.g:11558:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalXtend.g:11582:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalXtend.g:11583:2: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalXtend.g:11584:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalXtend.g:11591:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11594:28: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalXtend.g:11595:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalXtend.g:11595:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalXtend.g:11595:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,KW_Ampersand,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // InternalXtend.g:11599:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalXtend.g:11600:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalXtend.g:11600:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalXtend.g:11601:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalXtend.g:11625:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalXtend.g:11626:2: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalXtend.g:11627:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalXtend.g:11634:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11637:28: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalXtend.g:11638:1: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalXtend.g:11638:1: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalXtend.g:11638:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,KW_Super,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
                  
            }
            // InternalXtend.g:11642:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalXtend.g:11643:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalXtend.g:11643:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalXtend.g:11644:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalXtend.g:11668:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalXtend.g:11669:2: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalXtend.g:11670:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalXtend.g:11677:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11680:28: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalXtend.g:11681:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalXtend.g:11681:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalXtend.g:11681:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,KW_Ampersand,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // InternalXtend.g:11685:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalXtend.g:11686:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalXtend.g:11686:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalXtend.g:11687:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleJvmTypeParameter"
    // InternalXtend.g:11711:1: entryRuleJvmTypeParameter returns [EObject current=null] : iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF ;
    public final EObject entryRuleJvmTypeParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeParameter = null;


        try {
            // InternalXtend.g:11712:2: (iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF )
            // InternalXtend.g:11713:2: iv_ruleJvmTypeParameter= ruleJvmTypeParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeParameter=ruleJvmTypeParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeParameter"


    // $ANTLR start "ruleJvmTypeParameter"
    // InternalXtend.g:11720:1: ruleJvmTypeParameter returns [EObject current=null] : ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? ) ;
    public final EObject ruleJvmTypeParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_constraints_1_0 = null;

        EObject lv_constraints_2_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11723:28: ( ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? ) )
            // InternalXtend.g:11724:1: ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? )
            {
            // InternalXtend.g:11724:1: ( ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )? )
            // InternalXtend.g:11724:2: ( (lv_name_0_0= ruleValidID ) ) ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )?
            {
            // InternalXtend.g:11724:2: ( (lv_name_0_0= ruleValidID ) )
            // InternalXtend.g:11725:1: (lv_name_0_0= ruleValidID )
            {
            // InternalXtend.g:11725:1: (lv_name_0_0= ruleValidID )
            // InternalXtend.g:11726:3: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getNameValidIDParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_128);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"org.eclipse.xtend.core.Xtend.ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalXtend.g:11742:2: ( ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )* )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==KW_Extends) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // InternalXtend.g:11742:3: ( (lv_constraints_1_0= ruleJvmUpperBound ) ) ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalXtend.g:11742:3: ( (lv_constraints_1_0= ruleJvmUpperBound ) )
                    // InternalXtend.g:11743:1: (lv_constraints_1_0= ruleJvmUpperBound )
                    {
                    // InternalXtend.g:11743:1: (lv_constraints_1_0= ruleJvmUpperBound )
                    // InternalXtend.g:11744:3: lv_constraints_1_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getConstraintsJvmUpperBoundParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_127);
                    lv_constraints_1_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_1_0, 
                              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:11760:2: ( (lv_constraints_2_0= ruleJvmUpperBoundAnded ) )*
                    loop266:
                    do {
                        int alt266=2;
                        int LA266_0 = input.LA(1);

                        if ( (LA266_0==KW_Ampersand) ) {
                            alt266=1;
                        }


                        switch (alt266) {
                    	case 1 :
                    	    // InternalXtend.g:11761:1: (lv_constraints_2_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalXtend.g:11761:1: (lv_constraints_2_0= ruleJvmUpperBoundAnded )
                    	    // InternalXtend.g:11762:3: lv_constraints_2_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmTypeParameterAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_127);
                    	    lv_constraints_2_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmTypeParameterRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_2_0, 
                    	              		"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop266;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeParameter"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalXtend.g:11786:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalXtend.g:11787:2: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalXtend.g:11788:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalXtend.g:11795:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11798:28: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalXtend.g:11799:1: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalXtend.g:11799:1: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalXtend.g:11800:5: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            kw=(Token)match(input,KW_FullStop,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); 
                  
            }
            kw=(Token)match(input,KW_Asterisk,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleXImportSection"
    // InternalXtend.g:11830:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalXtend.g:11831:2: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalXtend.g:11832:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalXtend.g:11839:1: ruleXImportSection returns [EObject current=null] : ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11842:28: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalXtend.g:11843:1: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalXtend.g:11843:1: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt268=0;
            loop268:
            do {
                int alt268=2;
                int LA268_0 = input.LA(1);

                if ( (LA268_0==KW_Import) ) {
                    alt268=1;
                }


                switch (alt268) {
            	case 1 :
            	    // InternalXtend.g:11844:1: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalXtend.g:11844:1: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalXtend.g:11845:3: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"importDeclarations",
            	              		lv_importDeclarations_0_0, 
            	              		"org.eclipse.xtext.xbase.Xtype.XImportDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt268 >= 1 ) break loop268;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(268, input);
                        throw eee;
                }
                cnt268++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalXtend.g:11869:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalXtend.g:11870:2: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalXtend.g:11871:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalXtend.g:11878:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:11881:28: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // InternalXtend.g:11882:1: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // InternalXtend.g:11882:1: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // InternalXtend.g:11882:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,KW_Import,FOLLOW_132); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
                  
            }
            // InternalXtend.g:11886:1: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt271=3;
            alt271 = dfa271.predict(input);
            switch (alt271) {
                case 1 :
                    // InternalXtend.g:11886:2: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalXtend.g:11886:2: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalXtend.g:11886:3: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalXtend.g:11886:3: ( (lv_static_1_0= 'static' ) )
                    // InternalXtend.g:11887:1: (lv_static_1_0= 'static' )
                    {
                    // InternalXtend.g:11887:1: (lv_static_1_0= 'static' )
                    // InternalXtend.g:11888:3: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,KW_Static,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:11901:2: ( (lv_extension_2_0= 'extension' ) )?
                    int alt269=2;
                    int LA269_0 = input.LA(1);

                    if ( (LA269_0==KW_Extension) ) {
                        alt269=1;
                    }
                    switch (alt269) {
                        case 1 :
                            // InternalXtend.g:11902:1: (lv_extension_2_0= 'extension' )
                            {
                            // InternalXtend.g:11902:1: (lv_extension_2_0= 'extension' )
                            // InternalXtend.g:11903:3: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,KW_Extension,FOLLOW_133); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "extension", true, "extension");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalXtend.g:11916:3: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalXtend.g:11917:1: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalXtend.g:11917:1: ( ruleQualifiedNameInStaticImport )
                    // InternalXtend.g:11918:3: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_134);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalXtend.g:11931:2: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt270=2;
                    int LA270_0 = input.LA(1);

                    if ( (LA270_0==KW_Asterisk) ) {
                        alt270=1;
                    }
                    else if ( (LA270_0==KW_Annotation||LA270_0==KW_Create||(LA270_0>=KW_AFTER && LA270_0<=KW_SEPARATOR)||LA270_0==RULE_ID) ) {
                        alt270=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 270, 0, input);

                        throw nvae;
                    }
                    switch (alt270) {
                        case 1 :
                            // InternalXtend.g:11931:3: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // InternalXtend.g:11931:3: ( (lv_wildcard_4_0= '*' ) )
                            // InternalXtend.g:11932:1: (lv_wildcard_4_0= '*' )
                            {
                            // InternalXtend.g:11932:1: (lv_wildcard_4_0= '*' )
                            // InternalXtend.g:11933:3: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,KW_Asterisk,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "wildcard", true, "*");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalXtend.g:11947:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalXtend.g:11947:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalXtend.g:11948:1: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalXtend.g:11948:1: (lv_memberName_5_0= ruleValidID )
                            // InternalXtend.g:11949:3: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_34);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"memberName",
                                      		lv_memberName_5_0, 
                                      		"org.eclipse.xtend.core.Xtend.ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalXtend.g:11966:6: ( ( ruleQualifiedName ) )
                    {
                    // InternalXtend.g:11966:6: ( ( ruleQualifiedName ) )
                    // InternalXtend.g:11967:1: ( ruleQualifiedName )
                    {
                    // InternalXtend.g:11967:1: ( ruleQualifiedName )
                    // InternalXtend.g:11968:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_34);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalXtend.g:11982:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalXtend.g:11982:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalXtend.g:11983:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalXtend.g:11983:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalXtend.g:11984:3: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_34);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"importedNamespace",
                              		lv_importedNamespace_7_0, 
                              		"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalXtend.g:12000:3: (otherlv_8= ';' )?
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==KW_Semicolon) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    // InternalXtend.g:12000:5: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalXtend.g:12012:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalXtend.g:12013:2: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalXtend.g:12014:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalXtend.g:12021:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // InternalXtend.g:12024:28: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalXtend.g:12025:1: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalXtend.g:12025:1: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt273=0;
            loop273:
            do {
                int alt273=2;
                switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA273_2 = input.LA(2);

                    if ( (LA273_2==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_Create:
                    {
                    int LA273_3 = input.LA(2);

                    if ( (LA273_3==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_Annotation:
                    {
                    int LA273_4 = input.LA(2);

                    if ( (LA273_4==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_AFTER:
                    {
                    int LA273_5 = input.LA(2);

                    if ( (LA273_5==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA273_6 = input.LA(2);

                    if ( (LA273_6==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA273_7 = input.LA(2);

                    if ( (LA273_7==KW_FullStop) ) {
                        alt273=1;
                    }


                    }
                    break;

                }

                switch (alt273) {
            	case 1 :
            	    // InternalXtend.g:12026:5: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); 
            	          
            	    }
            	    pushFollow(FOLLOW_129);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }
            	    kw=(Token)match(input,KW_FullStop,FOLLOW_135); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt273 >= 1 ) break loop273;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(273, input);
                        throw eee;
                }
                cnt273++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"

    // $ANTLR start synpred1_InternalXtend
    public final void synpred1_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:2242:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )
        // InternalXtend.g:2242:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' )
        {
        // InternalXtend.g:2242:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' )
        // InternalXtend.g:2242:7: ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '('
        {
        // InternalXtend.g:2242:7: ( ( ruleJvmTypeReference ) )
        // InternalXtend.g:2243:1: ( ruleJvmTypeReference )
        {
        // InternalXtend.g:2243:1: ( ruleJvmTypeReference )
        // InternalXtend.g:2244:1: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_40);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalXtend.g:2246:2: ( ( ruleCreateExtensionInfo ) )
        // InternalXtend.g:2247:1: ( ruleCreateExtensionInfo )
        {
        // InternalXtend.g:2247:1: ( ruleCreateExtensionInfo )
        // InternalXtend.g:2248:1: ruleCreateExtensionInfo
        {
        pushFollow(FOLLOW_3);
        ruleCreateExtensionInfo();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalXtend.g:2250:2: ( ( ruleValidID ) )
        // InternalXtend.g:2251:1: ( ruleValidID )
        {
        // InternalXtend.g:2251:1: ( ruleValidID )
        // InternalXtend.g:2252:1: ruleValidID
        {
        pushFollow(FOLLOW_41);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred1_InternalXtend

    // $ANTLR start synpred2_InternalXtend
    public final void synpred2_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:2314:7: ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )
        // InternalXtend.g:2314:8: ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' )
        {
        // InternalXtend.g:2314:8: ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' )
        // InternalXtend.g:2314:9: ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '('
        {
        // InternalXtend.g:2314:9: ( ( ruleTypeReferenceWithTypeArgs ) )
        // InternalXtend.g:2315:1: ( ruleTypeReferenceWithTypeArgs )
        {
        // InternalXtend.g:2315:1: ( ruleTypeReferenceWithTypeArgs )
        // InternalXtend.g:2316:1: ruleTypeReferenceWithTypeArgs
        {
        pushFollow(FOLLOW_39);
        ruleTypeReferenceWithTypeArgs();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalXtend.g:2318:2: ( ( ruleFunctionID ) )
        // InternalXtend.g:2319:1: ( ruleFunctionID )
        {
        // InternalXtend.g:2319:1: ( ruleFunctionID )
        // InternalXtend.g:2320:1: ruleFunctionID
        {
        pushFollow(FOLLOW_41);
        ruleFunctionID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalXtend

    // $ANTLR start synpred3_InternalXtend
    public final void synpred3_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:2364:7: ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )
        // InternalXtend.g:2364:8: ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' )
        {
        // InternalXtend.g:2364:8: ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' )
        // InternalXtend.g:2364:9: ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '('
        {
        // InternalXtend.g:2364:9: ( ( ruleTypeReferenceNoTypeArgs ) )
        // InternalXtend.g:2365:1: ( ruleTypeReferenceNoTypeArgs )
        {
        // InternalXtend.g:2365:1: ( ruleTypeReferenceNoTypeArgs )
        // InternalXtend.g:2366:1: ruleTypeReferenceNoTypeArgs
        {
        pushFollow(FOLLOW_39);
        ruleTypeReferenceNoTypeArgs();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalXtend.g:2368:2: ( ( ruleFunctionID ) )
        // InternalXtend.g:2369:1: ( ruleFunctionID )
        {
        // InternalXtend.g:2369:1: ( ruleFunctionID )
        // InternalXtend.g:2370:1: ruleFunctionID
        {
        pushFollow(FOLLOW_41);
        ruleFunctionID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred3_InternalXtend

    // $ANTLR start synpred4_InternalXtend
    public final void synpred4_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:2414:7: ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )
        // InternalXtend.g:2414:8: ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' )
        {
        // InternalXtend.g:2414:8: ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' )
        // InternalXtend.g:2414:9: ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '('
        {
        // InternalXtend.g:2414:9: ( ( ruleCreateExtensionInfo ) )
        // InternalXtend.g:2415:1: ( ruleCreateExtensionInfo )
        {
        // InternalXtend.g:2415:1: ( ruleCreateExtensionInfo )
        // InternalXtend.g:2416:1: ruleCreateExtensionInfo
        {
        pushFollow(FOLLOW_3);
        ruleCreateExtensionInfo();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalXtend.g:2418:2: ( ( ruleValidID ) )
        // InternalXtend.g:2419:1: ( ruleValidID )
        {
        // InternalXtend.g:2419:1: ( ruleValidID )
        // InternalXtend.g:2420:1: ruleValidID
        {
        pushFollow(FOLLOW_41);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalXtend

    // $ANTLR start synpred5_InternalXtend
    public final void synpred5_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:3393:2: ( ( () ruleArrayBrackets ) )
        // InternalXtend.g:3393:3: ( () ruleArrayBrackets )
        {
        // InternalXtend.g:3393:3: ( () ruleArrayBrackets )
        // InternalXtend.g:3393:4: () ruleArrayBrackets
        {
        // InternalXtend.g:3393:4: ()
        // InternalXtend.g:3394:1: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalXtend

    // $ANTLR start synpred6_InternalXtend
    public final void synpred6_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:3418:2: ( ( () ruleArrayBrackets ) )
        // InternalXtend.g:3418:3: ( () ruleArrayBrackets )
        {
        // InternalXtend.g:3418:3: ( () ruleArrayBrackets )
        // InternalXtend.g:3418:4: () ruleArrayBrackets
        {
        // InternalXtend.g:3418:4: ()
        // InternalXtend.g:3419:1: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalXtend

    // $ANTLR start synpred7_InternalXtend
    public final void synpred7_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:3527:3: ( ( () '.' ) )
        // InternalXtend.g:3527:4: ( () '.' )
        {
        // InternalXtend.g:3527:4: ( () '.' )
        // InternalXtend.g:3527:5: () '.'
        {
        // InternalXtend.g:3527:5: ()
        // InternalXtend.g:3528:1: 
        {
        }

        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalXtend

    // $ANTLR start synpred8_InternalXtend
    public final void synpred8_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:3554:4: ( '<' )
        // InternalXtend.g:3554:6: '<'
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_InternalXtend

    // $ANTLR start synpred10_InternalXtend
    public final void synpred10_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:4628:8: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )
        // InternalXtend.g:4628:9: ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) )
        {
        // InternalXtend.g:4628:9: ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) )
        // InternalXtend.g:4628:10: ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) )
        {
        // InternalXtend.g:4628:10: ( ( ruleJvmTypeReference ) )
        // InternalXtend.g:4629:1: ( ruleJvmTypeReference )
        {
        // InternalXtend.g:4629:1: ( ruleJvmTypeReference )
        // InternalXtend.g:4630:1: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_59);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalXtend.g:4632:2: ( ( ruleInnerVarID ) )
        // InternalXtend.g:4633:1: ( ruleInnerVarID )
        {
        // InternalXtend.g:4633:1: ( ruleInnerVarID )
        // InternalXtend.g:4634:1: ruleInnerVarID
        {
        pushFollow(FOLLOW_2);
        ruleInnerVarID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalXtend

    // $ANTLR start synpred11_InternalXtend
    public final void synpred11_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:4743:3: ( ( () '{' ) )
        // InternalXtend.g:4743:4: ( () '{' )
        {
        // InternalXtend.g:4743:4: ( () '{' )
        // InternalXtend.g:4743:5: () '{'
        {
        // InternalXtend.g:4743:5: ()
        // InternalXtend.g:4744:1: 
        {
        }

        match(input,KW_LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred11_InternalXtend

    // $ANTLR start synpred12_InternalXtend
    public final void synpred12_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:4823:4: ( '<' )
        // InternalXtend.g:4823:6: '<'
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_InternalXtend

    // $ANTLR start synpred13_InternalXtend
    public final void synpred13_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:4872:5: ( ( '(' ) )
        // InternalXtend.g:4873:1: ( '(' )
        {
        // InternalXtend.g:4873:1: ( '(' )
        // InternalXtend.g:4874:2: '('
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalXtend

    // $ANTLR start synpred14_InternalXtend
    public final void synpred14_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:4893:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalXtend.g:4893:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalXtend.g:4893:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalXtend.g:4893:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalXtend.g:4893:6: ()
        // InternalXtend.g:4894:1: 
        {
        }

        // InternalXtend.g:4894:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt279=2;
        int LA279_0 = input.LA(1);

        if ( (LA279_0==KW_Package||LA279_0==KW_Class||(LA279_0>=KW_Extends && LA279_0<=KW_Implements)||(LA279_0>=KW_Interface && LA279_0<=KW_LeftParenthesis)||LA279_0==KW_EqualsSignGreaterThanSign||(LA279_0>=KW_Extension && LA279_0<=KW_Throws)||(LA279_0>=KW_Public && LA279_0<=KW_Transient)||(LA279_0>=KW_Def && LA279_0<=KW_Create)||(LA279_0>=KW_AFTER && LA279_0<=KW_Import)||LA279_0==RULE_ID) ) {
            alt279=1;
        }
        switch (alt279) {
            case 1 :
                // InternalXtend.g:4894:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalXtend.g:4894:3: ( ( ruleJvmFormalParameter ) )
                // InternalXtend.g:4895:1: ( ruleJvmFormalParameter )
                {
                // InternalXtend.g:4895:1: ( ruleJvmFormalParameter )
                // InternalXtend.g:4896:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_104);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalXtend.g:4898:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop278:
                do {
                    int alt278=2;
                    int LA278_0 = input.LA(1);

                    if ( (LA278_0==KW_Comma) ) {
                        alt278=1;
                    }


                    switch (alt278) {
                	case 1 :
                	    // InternalXtend.g:4898:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                	    // InternalXtend.g:4899:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalXtend.g:4900:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalXtend.g:4900:1: ( ruleJvmFormalParameter )
                	    // InternalXtend.g:4901:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_104);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop278;
                    }
                } while (true);


                }
                break;

        }

        // InternalXtend.g:4903:6: ( ( '|' ) )
        // InternalXtend.g:4904:1: ( '|' )
        {
        // InternalXtend.g:4904:1: ( '|' )
        // InternalXtend.g:4905:2: '|'
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred14_InternalXtend

    // $ANTLR start synpred15_InternalXtend
    public final void synpred15_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:4972:4: ( ( () '[' ) )
        // InternalXtend.g:4972:5: ( () '[' )
        {
        // InternalXtend.g:4972:5: ( () '[' )
        // InternalXtend.g:4972:6: () '['
        {
        // InternalXtend.g:4972:6: ()
        // InternalXtend.g:4973:1: 
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalXtend

    // $ANTLR start synpred16_InternalXtend
    public final void synpred16_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:5207:4: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalXtend.g:5207:5: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalXtend.g:5207:5: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalXtend.g:5207:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,KW_LeftParenthesis,FOLLOW_57); if (state.failed) return ;
        // InternalXtend.g:5208:1: ( ( ruleJvmFormalParameter ) )
        // InternalXtend.g:5209:1: ( ruleJvmFormalParameter )
        {
        // InternalXtend.g:5209:1: ( ruleJvmFormalParameter )
        // InternalXtend.g:5210:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_55);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalXtend

    // $ANTLR start synpred17_InternalXtend
    public final void synpred17_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:5262:8: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalXtend.g:5262:9: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalXtend.g:5262:9: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalXtend.g:5262:10: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalXtend.g:5262:10: ( ( ruleJvmFormalParameter ) )
        // InternalXtend.g:5263:1: ( ruleJvmFormalParameter )
        {
        // InternalXtend.g:5263:1: ( ruleJvmFormalParameter )
        // InternalXtend.g:5264:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_55);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_InternalXtend

    // $ANTLR start synpred18_InternalXtend
    public final void synpred18_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:5380:3: ( 'new' )
        // InternalXtend.g:5380:5: 'new'
        {
        match(input,KW_New,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred18_InternalXtend

    // $ANTLR start synpred19_InternalXtend
    public final void synpred19_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:6307:4: ( '(' )
        // InternalXtend.g:6307:6: '('
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred19_InternalXtend

    // $ANTLR start synpred20_InternalXtend
    public final void synpred20_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:6312:5: ( ( ( ( ruleValidID ) ) '=' ) )
        // InternalXtend.g:6312:6: ( ( ( ruleValidID ) ) '=' )
        {
        // InternalXtend.g:6312:6: ( ( ( ruleValidID ) ) '=' )
        // InternalXtend.g:6312:7: ( ( ruleValidID ) ) '='
        {
        // InternalXtend.g:6312:7: ( ( ruleValidID ) )
        // InternalXtend.g:6313:1: ( ruleValidID )
        {
        // InternalXtend.g:6313:1: ( ruleValidID )
        // InternalXtend.g:6314:3: ruleValidID
        {
        pushFollow(FOLLOW_77);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalXtend

    // $ANTLR start synpred23_InternalXtend
    public final void synpred23_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:6469:4: ( ( () '#' '[' ) )
        // InternalXtend.g:6469:5: ( () '#' '[' )
        {
        // InternalXtend.g:6469:5: ( () '#' '[' )
        // InternalXtend.g:6469:6: () '#' '['
        {
        // InternalXtend.g:6469:6: ()
        // InternalXtend.g:6470:1: 
        {
        }

        match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return ;
        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalXtend

    // $ANTLR start synpred24_InternalXtend
    public final void synpred24_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:6589:4: ( ( () '#' '[' ) )
        // InternalXtend.g:6589:5: ( () '#' '[' )
        {
        // InternalXtend.g:6589:5: ( () '#' '[' )
        // InternalXtend.g:6589:6: () '#' '['
        {
        // InternalXtend.g:6589:6: ()
        // InternalXtend.g:6590:1: 
        {
        }

        match(input,KW_NumberSign,FOLLOW_50); if (state.failed) return ;
        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalXtend

    // $ANTLR start synpred25_InternalXtend
    public final void synpred25_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:6808:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalXtend.g:6808:4: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalXtend.g:6808:4: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalXtend.g:6808:5: () ( ( ruleOpMultiAssign ) )
        {
        // InternalXtend.g:6808:5: ()
        // InternalXtend.g:6809:1: 
        {
        }

        // InternalXtend.g:6809:2: ( ( ruleOpMultiAssign ) )
        // InternalXtend.g:6810:1: ( ruleOpMultiAssign )
        {
        // InternalXtend.g:6810:1: ( ruleOpMultiAssign )
        // InternalXtend.g:6811:3: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred25_InternalXtend

    // $ANTLR start synpred26_InternalXtend
    public final void synpred26_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7002:3: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalXtend.g:7002:4: ( () ( ( ruleOpOr ) ) )
        {
        // InternalXtend.g:7002:4: ( () ( ( ruleOpOr ) ) )
        // InternalXtend.g:7002:5: () ( ( ruleOpOr ) )
        {
        // InternalXtend.g:7002:5: ()
        // InternalXtend.g:7003:1: 
        {
        }

        // InternalXtend.g:7003:2: ( ( ruleOpOr ) )
        // InternalXtend.g:7004:1: ( ruleOpOr )
        {
        // InternalXtend.g:7004:1: ( ruleOpOr )
        // InternalXtend.g:7005:3: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred26_InternalXtend

    // $ANTLR start synpred27_InternalXtend
    public final void synpred27_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7103:3: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalXtend.g:7103:4: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalXtend.g:7103:4: ( () ( ( ruleOpAnd ) ) )
        // InternalXtend.g:7103:5: () ( ( ruleOpAnd ) )
        {
        // InternalXtend.g:7103:5: ()
        // InternalXtend.g:7104:1: 
        {
        }

        // InternalXtend.g:7104:2: ( ( ruleOpAnd ) )
        // InternalXtend.g:7105:1: ( ruleOpAnd )
        {
        // InternalXtend.g:7105:1: ( ruleOpAnd )
        // InternalXtend.g:7106:3: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27_InternalXtend

    // $ANTLR start synpred28_InternalXtend
    public final void synpred28_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7204:3: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalXtend.g:7204:4: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalXtend.g:7204:4: ( () ( ( ruleOpEquality ) ) )
        // InternalXtend.g:7204:5: () ( ( ruleOpEquality ) )
        {
        // InternalXtend.g:7204:5: ()
        // InternalXtend.g:7205:1: 
        {
        }

        // InternalXtend.g:7205:2: ( ( ruleOpEquality ) )
        // InternalXtend.g:7206:1: ( ruleOpEquality )
        {
        // InternalXtend.g:7206:1: ( ruleOpEquality )
        // InternalXtend.g:7207:3: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred28_InternalXtend

    // $ANTLR start synpred29_InternalXtend
    public final void synpred29_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7326:4: ( ( () 'instanceof' ) )
        // InternalXtend.g:7326:5: ( () 'instanceof' )
        {
        // InternalXtend.g:7326:5: ( () 'instanceof' )
        // InternalXtend.g:7326:6: () 'instanceof'
        {
        // InternalXtend.g:7326:6: ()
        // InternalXtend.g:7327:1: 
        {
        }

        match(input,KW_Instanceof,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_InternalXtend

    // $ANTLR start synpred30_InternalXtend
    public final void synpred30_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7357:8: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalXtend.g:7357:9: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalXtend.g:7357:9: ( () ( ( ruleOpCompare ) ) )
        // InternalXtend.g:7357:10: () ( ( ruleOpCompare ) )
        {
        // InternalXtend.g:7357:10: ()
        // InternalXtend.g:7358:1: 
        {
        }

        // InternalXtend.g:7358:2: ( ( ruleOpCompare ) )
        // InternalXtend.g:7359:1: ( ruleOpCompare )
        {
        // InternalXtend.g:7359:1: ( ruleOpCompare )
        // InternalXtend.g:7360:3: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred30_InternalXtend

    // $ANTLR start synpred31_InternalXtend
    public final void synpred31_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7485:3: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalXtend.g:7485:4: ( () ( ( ruleOpOther ) ) )
        {
        // InternalXtend.g:7485:4: ( () ( ( ruleOpOther ) ) )
        // InternalXtend.g:7485:5: () ( ( ruleOpOther ) )
        {
        // InternalXtend.g:7485:5: ()
        // InternalXtend.g:7486:1: 
        {
        }

        // InternalXtend.g:7486:2: ( ( ruleOpOther ) )
        // InternalXtend.g:7487:1: ( ruleOpOther )
        {
        // InternalXtend.g:7487:1: ( ruleOpOther )
        // InternalXtend.g:7488:3: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalXtend

    // $ANTLR start synpred32_InternalXtend
    public final void synpred32_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7597:3: ( ( '>' '>' ) )
        // InternalXtend.g:7597:4: ( '>' '>' )
        {
        // InternalXtend.g:7597:4: ( '>' '>' )
        // InternalXtend.g:7598:2: '>' '>'
        {
        match(input,KW_GreaterThanSign,FOLLOW_90); if (state.failed) return ;
        match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalXtend

    // $ANTLR start synpred33_InternalXtend
    public final void synpred33_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7627:3: ( ( '<' '<' ) )
        // InternalXtend.g:7627:4: ( '<' '<' )
        {
        // InternalXtend.g:7627:4: ( '<' '<' )
        // InternalXtend.g:7628:2: '<' '<'
        {
        match(input,KW_LessThanSign,FOLLOW_51); if (state.failed) return ;
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalXtend

    // $ANTLR start synpred34_InternalXtend
    public final void synpred34_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7701:3: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalXtend.g:7701:4: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalXtend.g:7701:4: ( () ( ( ruleOpAdd ) ) )
        // InternalXtend.g:7701:5: () ( ( ruleOpAdd ) )
        {
        // InternalXtend.g:7701:5: ()
        // InternalXtend.g:7702:1: 
        {
        }

        // InternalXtend.g:7702:2: ( ( ruleOpAdd ) )
        // InternalXtend.g:7703:1: ( ruleOpAdd )
        {
        // InternalXtend.g:7703:1: ( ruleOpAdd )
        // InternalXtend.g:7704:3: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred34_InternalXtend

    // $ANTLR start synpred35_InternalXtend
    public final void synpred35_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:7809:3: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalXtend.g:7809:4: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalXtend.g:7809:4: ( () ( ( ruleOpMulti ) ) )
        // InternalXtend.g:7809:5: () ( ( ruleOpMulti ) )
        {
        // InternalXtend.g:7809:5: ()
        // InternalXtend.g:7810:1: 
        {
        }

        // InternalXtend.g:7810:2: ( ( ruleOpMulti ) )
        // InternalXtend.g:7811:1: ( ruleOpMulti )
        {
        // InternalXtend.g:7811:1: ( ruleOpMulti )
        // InternalXtend.g:7812:3: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalXtend

    // $ANTLR start synpred36_InternalXtend
    public final void synpred36_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8042:3: ( ( () 'as' ) )
        // InternalXtend.g:8042:4: ( () 'as' )
        {
        // InternalXtend.g:8042:4: ( () 'as' )
        // InternalXtend.g:8042:5: () 'as'
        {
        // InternalXtend.g:8042:5: ()
        // InternalXtend.g:8043:1: 
        {
        }

        match(input,KW_As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalXtend

    // $ANTLR start synpred37_InternalXtend
    public final void synpred37_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8102:2: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalXtend.g:8102:3: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalXtend.g:8102:3: ( () ( ( ruleOpPostfix ) ) )
        // InternalXtend.g:8102:4: () ( ( ruleOpPostfix ) )
        {
        // InternalXtend.g:8102:4: ()
        // InternalXtend.g:8103:1: 
        {
        }

        // InternalXtend.g:8103:2: ( ( ruleOpPostfix ) )
        // InternalXtend.g:8104:1: ( ruleOpPostfix )
        {
        // InternalXtend.g:8104:1: ( ruleOpPostfix )
        // InternalXtend.g:8105:3: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred37_InternalXtend

    // $ANTLR start synpred38_InternalXtend
    public final void synpred38_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8192:4: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalXtend.g:8192:5: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalXtend.g:8192:5: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalXtend.g:8192:6: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalXtend.g:8192:6: ()
        // InternalXtend.g:8193:1: 
        {
        }

        // InternalXtend.g:8193:2: ( '.' | ( ( '::' ) ) )
        int alt280=2;
        int LA280_0 = input.LA(1);

        if ( (LA280_0==KW_FullStop) ) {
            alt280=1;
        }
        else if ( (LA280_0==KW_ColonColon) ) {
            alt280=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 280, 0, input);

            throw nvae;
        }
        switch (alt280) {
            case 1 :
                // InternalXtend.g:8193:4: '.'
                {
                match(input,KW_FullStop,FOLLOW_97); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalXtend.g:8195:6: ( ( '::' ) )
                {
                // InternalXtend.g:8195:6: ( ( '::' ) )
                // InternalXtend.g:8196:1: ( '::' )
                {
                // InternalXtend.g:8196:1: ( '::' )
                // InternalXtend.g:8197:2: '::'
                {
                match(input,KW_ColonColon,FOLLOW_97); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalXtend.g:8201:3: ( ( ruleFeatureCallID ) )
        // InternalXtend.g:8202:1: ( ruleFeatureCallID )
        {
        // InternalXtend.g:8202:1: ( ruleFeatureCallID )
        // InternalXtend.g:8203:3: ruleFeatureCallID
        {
        pushFollow(FOLLOW_77);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred38_InternalXtend

    // $ANTLR start synpred39_InternalXtend
    public final void synpred39_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8273:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // InternalXtend.g:8273:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // InternalXtend.g:8273:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // InternalXtend.g:8273:10: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // InternalXtend.g:8273:10: ()
        // InternalXtend.g:8274:1: 
        {
        }

        // InternalXtend.g:8274:2: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt281=3;
        switch ( input.LA(1) ) {
        case KW_FullStop:
            {
            alt281=1;
            }
            break;
        case KW_QuestionMarkFullStop:
            {
            alt281=2;
            }
            break;
        case KW_ColonColon:
            {
            alt281=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 281, 0, input);

            throw nvae;
        }

        switch (alt281) {
            case 1 :
                // InternalXtend.g:8274:4: '.'
                {
                match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalXtend.g:8276:6: ( ( '?.' ) )
                {
                // InternalXtend.g:8276:6: ( ( '?.' ) )
                // InternalXtend.g:8277:1: ( '?.' )
                {
                // InternalXtend.g:8277:1: ( '?.' )
                // InternalXtend.g:8278:2: '?.'
                {
                match(input,KW_QuestionMarkFullStop,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalXtend.g:8283:6: ( ( '::' ) )
                {
                // InternalXtend.g:8283:6: ( ( '::' ) )
                // InternalXtend.g:8284:1: ( '::' )
                {
                // InternalXtend.g:8284:1: ( '::' )
                // InternalXtend.g:8285:2: '::'
                {
                match(input,KW_ColonColon,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred39_InternalXtend

    // $ANTLR start synpred40_InternalXtend
    public final void synpred40_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8394:4: ( ( '(' ) )
        // InternalXtend.g:8395:1: ( '(' )
        {
        // InternalXtend.g:8395:1: ( '(' )
        // InternalXtend.g:8396:2: '('
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred40_InternalXtend

    // $ANTLR start synpred41_InternalXtend
    public final void synpred41_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8415:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalXtend.g:8415:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalXtend.g:8415:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalXtend.g:8415:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalXtend.g:8415:6: ()
        // InternalXtend.g:8416:1: 
        {
        }

        // InternalXtend.g:8416:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt283=2;
        int LA283_0 = input.LA(1);

        if ( (LA283_0==KW_Package||LA283_0==KW_Class||(LA283_0>=KW_Extends && LA283_0<=KW_Implements)||(LA283_0>=KW_Interface && LA283_0<=KW_LeftParenthesis)||LA283_0==KW_EqualsSignGreaterThanSign||(LA283_0>=KW_Extension && LA283_0<=KW_Throws)||(LA283_0>=KW_Public && LA283_0<=KW_Transient)||(LA283_0>=KW_Def && LA283_0<=KW_Create)||(LA283_0>=KW_AFTER && LA283_0<=KW_Import)||LA283_0==RULE_ID) ) {
            alt283=1;
        }
        switch (alt283) {
            case 1 :
                // InternalXtend.g:8416:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalXtend.g:8416:3: ( ( ruleJvmFormalParameter ) )
                // InternalXtend.g:8417:1: ( ruleJvmFormalParameter )
                {
                // InternalXtend.g:8417:1: ( ruleJvmFormalParameter )
                // InternalXtend.g:8418:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_104);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalXtend.g:8420:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop282:
                do {
                    int alt282=2;
                    int LA282_0 = input.LA(1);

                    if ( (LA282_0==KW_Comma) ) {
                        alt282=1;
                    }


                    switch (alt282) {
                	case 1 :
                	    // InternalXtend.g:8420:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                	    // InternalXtend.g:8421:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalXtend.g:8422:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalXtend.g:8422:1: ( ruleJvmFormalParameter )
                	    // InternalXtend.g:8423:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_104);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop282;
                    }
                } while (true);


                }
                break;

        }

        // InternalXtend.g:8425:6: ( ( '|' ) )
        // InternalXtend.g:8426:1: ( '|' )
        {
        // InternalXtend.g:8426:1: ( '|' )
        // InternalXtend.g:8427:2: '|'
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_InternalXtend

    // $ANTLR start synpred42_InternalXtend
    public final void synpred42_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8494:4: ( ( () '[' ) )
        // InternalXtend.g:8494:5: ( () '[' )
        {
        // InternalXtend.g:8494:5: ( () '[' )
        // InternalXtend.g:8494:6: () '['
        {
        // InternalXtend.g:8494:6: ()
        // InternalXtend.g:8495:1: 
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalXtend

    // $ANTLR start synpred43_InternalXtend
    public final void synpred43_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8565:7: ( ( () 'synchronized' '(' ) )
        // InternalXtend.g:8565:8: ( () 'synchronized' '(' )
        {
        // InternalXtend.g:8565:8: ( () 'synchronized' '(' )
        // InternalXtend.g:8565:9: () 'synchronized' '('
        {
        // InternalXtend.g:8565:9: ()
        // InternalXtend.g:8566:1: 
        {
        }

        match(input,KW_Synchronized,FOLLOW_41); if (state.failed) return ;
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalXtend

    // $ANTLR start synpred44_InternalXtend
    public final void synpred44_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8608:7: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalXtend.g:8608:8: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalXtend.g:8608:8: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalXtend.g:8608:9: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalXtend.g:8608:9: ()
        // InternalXtend.g:8609:1: 
        {
        }

        match(input,KW_For,FOLLOW_41); if (state.failed) return ;
        match(input,KW_LeftParenthesis,FOLLOW_57); if (state.failed) return ;
        // InternalXtend.g:8611:1: ( ( ruleJvmFormalParameter ) )
        // InternalXtend.g:8612:1: ( ruleJvmFormalParameter )
        {
        // InternalXtend.g:8612:1: ( ruleJvmFormalParameter )
        // InternalXtend.g:8613:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_55);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalXtend

    // $ANTLR start synpred45_InternalXtend
    public final void synpred45_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:8726:7: ( ( () '[' ) )
        // InternalXtend.g:8726:8: ( () '[' )
        {
        // InternalXtend.g:8726:8: ( () '[' )
        // InternalXtend.g:8726:9: () '['
        {
        // InternalXtend.g:8726:9: ()
        // InternalXtend.g:8727:1: 
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalXtend

    // $ANTLR start synpred47_InternalXtend
    public final void synpred47_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:9018:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalXtend.g:9018:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalXtend.g:9018:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalXtend.g:9018:6: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalXtend.g:9018:6: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt285=2;
        int LA285_0 = input.LA(1);

        if ( (LA285_0==KW_Package||LA285_0==KW_Class||(LA285_0>=KW_Extends && LA285_0<=KW_Implements)||(LA285_0>=KW_Interface && LA285_0<=KW_LeftParenthesis)||LA285_0==KW_EqualsSignGreaterThanSign||(LA285_0>=KW_Extension && LA285_0<=KW_Throws)||(LA285_0>=KW_Public && LA285_0<=KW_Transient)||(LA285_0>=KW_Def && LA285_0<=KW_Create)||(LA285_0>=KW_AFTER && LA285_0<=KW_Import)||LA285_0==RULE_ID) ) {
            alt285=1;
        }
        switch (alt285) {
            case 1 :
                // InternalXtend.g:9018:7: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalXtend.g:9018:7: ( ( ruleJvmFormalParameter ) )
                // InternalXtend.g:9019:1: ( ruleJvmFormalParameter )
                {
                // InternalXtend.g:9019:1: ( ruleJvmFormalParameter )
                // InternalXtend.g:9020:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_104);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalXtend.g:9022:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop284:
                do {
                    int alt284=2;
                    int LA284_0 = input.LA(1);

                    if ( (LA284_0==KW_Comma) ) {
                        alt284=1;
                    }


                    switch (alt284) {
                	case 1 :
                	    // InternalXtend.g:9022:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                	    // InternalXtend.g:9023:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalXtend.g:9024:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalXtend.g:9024:1: ( ruleJvmFormalParameter )
                	    // InternalXtend.g:9025:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_104);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop284;
                    }
                } while (true);


                }
                break;

        }

        // InternalXtend.g:9027:6: ( ( '|' ) )
        // InternalXtend.g:9028:1: ( '|' )
        {
        // InternalXtend.g:9028:1: ( '|' )
        // InternalXtend.g:9029:2: '|'
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred47_InternalXtend

    // $ANTLR start synpred49_InternalXtend
    public final void synpred49_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:9388:4: ( 'else' )
        // InternalXtend.g:9388:6: 'else'
        {
        match(input,KW_Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_InternalXtend

    // $ANTLR start synpred51_InternalXtend
    public final void synpred51_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:10016:3: ( ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) ) )
        // InternalXtend.g:10016:4: ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) )
        {
        // InternalXtend.g:10016:4: ( () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) ) )
        // InternalXtend.g:10016:5: () ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) )
        {
        // InternalXtend.g:10016:5: ()
        // InternalXtend.g:10017:1: 
        {
        }

        // InternalXtend.g:10017:2: ( ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? ) | ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) ) )
        int alt291=2;
        int LA291_0 = input.LA(1);

        if ( ((LA291_0>=KW_Val && LA291_0<=KW_Var)) ) {
            alt291=1;
        }
        else if ( (LA291_0==KW_Extension) ) {
            alt291=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 291, 0, input);

            throw nvae;
        }
        switch (alt291) {
            case 1 :
                // InternalXtend.g:10017:3: ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? )
                {
                // InternalXtend.g:10017:3: ( ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )? )
                // InternalXtend.g:10017:4: ( ( ( 'var' ) ) | 'val' ) ( ( 'extension' ) )?
                {
                // InternalXtend.g:10017:4: ( ( ( 'var' ) ) | 'val' )
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( (LA288_0==KW_Var) ) {
                    alt288=1;
                }
                else if ( (LA288_0==KW_Val) ) {
                    alt288=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 288, 0, input);

                    throw nvae;
                }
                switch (alt288) {
                    case 1 :
                        // InternalXtend.g:10017:5: ( ( 'var' ) )
                        {
                        // InternalXtend.g:10017:5: ( ( 'var' ) )
                        // InternalXtend.g:10018:1: ( 'var' )
                        {
                        // InternalXtend.g:10018:1: ( 'var' )
                        // InternalXtend.g:10019:2: 'var'
                        {
                        match(input,KW_Var,FOLLOW_136); if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalXtend.g:10024:7: 'val'
                        {
                        match(input,KW_Val,FOLLOW_136); if (state.failed) return ;

                        }
                        break;

                }

                // InternalXtend.g:10025:2: ( ( 'extension' ) )?
                int alt289=2;
                int LA289_0 = input.LA(1);

                if ( (LA289_0==KW_Extension) ) {
                    alt289=1;
                }
                switch (alt289) {
                    case 1 :
                        // InternalXtend.g:10026:1: ( 'extension' )
                        {
                        // InternalXtend.g:10026:1: ( 'extension' )
                        // InternalXtend.g:10027:2: 'extension'
                        {
                        match(input,KW_Extension,FOLLOW_2); if (state.failed) return ;

                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalXtend.g:10032:6: ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) )
                {
                // InternalXtend.g:10032:6: ( ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' ) )
                // InternalXtend.g:10032:7: ( ( 'extension' ) ) ( ( ( 'var' ) ) | 'val' )
                {
                // InternalXtend.g:10032:7: ( ( 'extension' ) )
                // InternalXtend.g:10033:1: ( 'extension' )
                {
                // InternalXtend.g:10033:1: ( 'extension' )
                // InternalXtend.g:10034:2: 'extension'
                {
                match(input,KW_Extension,FOLLOW_58); if (state.failed) return ;

                }


                }

                // InternalXtend.g:10038:2: ( ( ( 'var' ) ) | 'val' )
                int alt290=2;
                int LA290_0 = input.LA(1);

                if ( (LA290_0==KW_Var) ) {
                    alt290=1;
                }
                else if ( (LA290_0==KW_Val) ) {
                    alt290=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 290, 0, input);

                    throw nvae;
                }
                switch (alt290) {
                    case 1 :
                        // InternalXtend.g:10038:3: ( ( 'var' ) )
                        {
                        // InternalXtend.g:10038:3: ( ( 'var' ) )
                        // InternalXtend.g:10039:1: ( 'var' )
                        {
                        // InternalXtend.g:10039:1: ( 'var' )
                        // InternalXtend.g:10040:2: 'var'
                        {
                        match(input,KW_Var,FOLLOW_2); if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalXtend.g:10045:7: 'val'
                        {
                        match(input,KW_Val,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred51_InternalXtend

    // $ANTLR start synpred52_InternalXtend
    public final void synpred52_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:10155:4: ( ( '(' ) )
        // InternalXtend.g:10156:1: ( '(' )
        {
        // InternalXtend.g:10156:1: ( '(' )
        // InternalXtend.g:10157:2: '('
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred52_InternalXtend

    // $ANTLR start synpred53_InternalXtend
    public final void synpred53_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:10176:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalXtend.g:10176:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalXtend.g:10176:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalXtend.g:10176:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalXtend.g:10176:6: ()
        // InternalXtend.g:10177:1: 
        {
        }

        // InternalXtend.g:10177:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt293=2;
        int LA293_0 = input.LA(1);

        if ( (LA293_0==KW_Package||LA293_0==KW_Class||(LA293_0>=KW_Extends && LA293_0<=KW_Implements)||(LA293_0>=KW_Interface && LA293_0<=KW_LeftParenthesis)||LA293_0==KW_EqualsSignGreaterThanSign||(LA293_0>=KW_Extension && LA293_0<=KW_Throws)||(LA293_0>=KW_Public && LA293_0<=KW_Transient)||(LA293_0>=KW_Def && LA293_0<=KW_Create)||(LA293_0>=KW_AFTER && LA293_0<=KW_Import)||LA293_0==RULE_ID) ) {
            alt293=1;
        }
        switch (alt293) {
            case 1 :
                // InternalXtend.g:10177:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalXtend.g:10177:3: ( ( ruleJvmFormalParameter ) )
                // InternalXtend.g:10178:1: ( ruleJvmFormalParameter )
                {
                // InternalXtend.g:10178:1: ( ruleJvmFormalParameter )
                // InternalXtend.g:10179:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_104);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalXtend.g:10181:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop292:
                do {
                    int alt292=2;
                    int LA292_0 = input.LA(1);

                    if ( (LA292_0==KW_Comma) ) {
                        alt292=1;
                    }


                    switch (alt292) {
                	case 1 :
                	    // InternalXtend.g:10181:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,KW_Comma,FOLLOW_57); if (state.failed) return ;
                	    // InternalXtend.g:10182:1: ( ( ruleJvmFormalParameter ) )
                	    // InternalXtend.g:10183:1: ( ruleJvmFormalParameter )
                	    {
                	    // InternalXtend.g:10183:1: ( ruleJvmFormalParameter )
                	    // InternalXtend.g:10184:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_104);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop292;
                    }
                } while (true);


                }
                break;

        }

        // InternalXtend.g:10186:6: ( ( '|' ) )
        // InternalXtend.g:10187:1: ( '|' )
        {
        // InternalXtend.g:10187:1: ( '|' )
        // InternalXtend.g:10188:2: '|'
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred53_InternalXtend

    // $ANTLR start synpred54_InternalXtend
    public final void synpred54_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:10255:4: ( ( () '[' ) )
        // InternalXtend.g:10255:5: ( () '[' )
        {
        // InternalXtend.g:10255:5: ( () '[' )
        // InternalXtend.g:10255:6: () '['
        {
        // InternalXtend.g:10255:6: ()
        // InternalXtend.g:10256:1: 
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred54_InternalXtend

    // $ANTLR start synpred55_InternalXtend
    public final void synpred55_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:10589:2: ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )
        // InternalXtend.g:
        {
        if ( input.LA(1)==KW_Package||(input.LA(1)>=KW_Class && input.LA(1)<=KW_LessThanSign)||(input.LA(1)>=KW_Extends && input.LA(1)<=KW_LeftCurlyBracket)||(input.LA(1)>=KW_Interface && input.LA(1)<=KW_LeftParenthesis)||(input.LA(1)>=KW_Extension && input.LA(1)<=KW_New)||(input.LA(1)>=KW_Public && input.LA(1)<=KW_Transient)||(input.LA(1)>=KW_Def && input.LA(1)<=KW_Create)||(input.LA(1)>=KW_AFTER && input.LA(1)<=KW_Import)||input.LA(1)==KW_Switch||(input.LA(1)>=KW_NumberSign && input.LA(1)<=KW_LeftSquareBracket)||(input.LA(1)>=KW_PlusSign && input.LA(1)<=KW_HyphenMinus)||input.LA(1)==KW_ExclamationMark||input.LA(1)==KW_If||(input.LA(1)>=KW_For && input.LA(1)<=KW_Try)||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_RICH_TEXT_START)||(input.LA(1)>=RULE_HEX && input.LA(1)<=RULE_DECIMAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred55_InternalXtend

    // $ANTLR start synpred56_InternalXtend
    public final void synpred56_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:10706:5: ( 'catch' )
        // InternalXtend.g:10706:7: 'catch'
        {
        match(input,KW_Catch,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_InternalXtend

    // $ANTLR start synpred57_InternalXtend
    public final void synpred57_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:10725:5: ( 'finally' )
        // InternalXtend.g:10725:7: 'finally'
        {
        match(input,KW_Finally,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_InternalXtend

    // $ANTLR start synpred60_InternalXtend
    public final void synpred60_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:10951:3: ( '.' )
        // InternalXtend.g:10952:2: '.'
        {
        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_InternalXtend

    // $ANTLR start synpred61_InternalXtend
    public final void synpred61_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:11077:2: ( ( () ruleArrayBrackets ) )
        // InternalXtend.g:11077:3: ( () ruleArrayBrackets )
        {
        // InternalXtend.g:11077:3: ( () ruleArrayBrackets )
        // InternalXtend.g:11077:4: () ruleArrayBrackets
        {
        // InternalXtend.g:11077:4: ()
        // InternalXtend.g:11078:1: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred61_InternalXtend

    // $ANTLR start synpred62_InternalXtend
    public final void synpred62_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:11262:4: ( '<' )
        // InternalXtend.g:11262:6: '<'
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_InternalXtend

    // $ANTLR start synpred63_InternalXtend
    public final void synpred63_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:11311:3: ( ( () '.' ) )
        // InternalXtend.g:11311:4: ( () '.' )
        {
        // InternalXtend.g:11311:4: ( () '.' )
        // InternalXtend.g:11311:5: () '.'
        {
        // InternalXtend.g:11311:5: ()
        // InternalXtend.g:11312:1: 
        {
        }

        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred63_InternalXtend

    // $ANTLR start synpred64_InternalXtend
    public final void synpred64_InternalXtend_fragment() throws RecognitionException {   
        // InternalXtend.g:11338:4: ( '<' )
        // InternalXtend.g:11338:6: '<'
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_InternalXtend

    // Delegated rules

    public final boolean synpred5_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA25 dfa25 = new DFA25(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA134 dfa134 = new DFA134(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA140 dfa140 = new DFA140(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA204 dfa204 = new DFA204(this);
    protected DFA206 dfa206 = new DFA206(this);
    protected DFA208 dfa208 = new DFA208(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA238 dfa238 = new DFA238(this);
    protected DFA237 dfa237 = new DFA237(this);
    protected DFA239 dfa239 = new DFA239(this);
    protected DFA243 dfa243 = new DFA243(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA261 dfa261 = new DFA261(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA271 dfa271 = new DFA271(this);
    static final String DFA25_eotS =
        "\22\uffff";
    static final String DFA25_eofS =
        "\22\uffff";
    static final String DFA25_minS =
        "\16\4\4\uffff";
    static final String DFA25_maxS =
        "\16\44\4\uffff";
    static final String DFA25_acceptS =
        "\16\uffff\1\1\1\2\1\3\1\4";
    static final String DFA25_specialS =
        "\22\uffff}>";
    static final String[] DFA25_transitionS = {
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA25_eot = DFA.unpackEncodedString(DFA25_eotS);
    static final short[] DFA25_eof = DFA.unpackEncodedString(DFA25_eofS);
    static final char[] DFA25_min = DFA.unpackEncodedStringToUnsignedChars(DFA25_minS);
    static final char[] DFA25_max = DFA.unpackEncodedStringToUnsignedChars(DFA25_maxS);
    static final short[] DFA25_accept = DFA.unpackEncodedString(DFA25_acceptS);
    static final short[] DFA25_special = DFA.unpackEncodedString(DFA25_specialS);
    static final short[][] DFA25_transition;

    static {
        int numStates = DFA25_transitionS.length;
        DFA25_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA25_transition[i] = DFA.unpackEncodedString(DFA25_transitionS[i]);
        }
    }

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = DFA25_eot;
            this.eof = DFA25_eof;
            this.min = DFA25_min;
            this.max = DFA25_max;
            this.accept = DFA25_accept;
            this.special = DFA25_special;
            this.transition = DFA25_transition;
        }
        public String getDescription() {
            return "298:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) )";
        }
    }
    static final String DFA57_eotS =
        "\32\uffff";
    static final String DFA57_eofS =
        "\23\uffff\6\16\1\uffff";
    static final String DFA57_minS =
        "\16\4\1\uffff\1\7\3\uffff\6\4\1\uffff";
    static final String DFA57_maxS =
        "\16\155\1\uffff\1\155\3\uffff\6\155\1\uffff";
    static final String DFA57_acceptS =
        "\16\uffff\1\1\1\uffff\1\2\1\3\1\4\6\uffff\1\5";
    static final String DFA57_specialS =
        "\32\uffff}>";
    static final String[] DFA57_transitionS = {
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "",
            "\1\16\10\uffff\1\25\7\uffff\1\16\20\uffff\1\24\1\uffff\1\26\1\27\1\30\14\uffff\1\16\62\uffff\1\23",
            "",
            "",
            "",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            ""
    };

    static final short[] DFA57_eot = DFA.unpackEncodedString(DFA57_eotS);
    static final short[] DFA57_eof = DFA.unpackEncodedString(DFA57_eofS);
    static final char[] DFA57_min = DFA.unpackEncodedStringToUnsignedChars(DFA57_minS);
    static final char[] DFA57_max = DFA.unpackEncodedStringToUnsignedChars(DFA57_maxS);
    static final short[] DFA57_accept = DFA.unpackEncodedString(DFA57_acceptS);
    static final short[] DFA57_special = DFA.unpackEncodedString(DFA57_specialS);
    static final short[][] DFA57_transition;

    static {
        int numStates = DFA57_transitionS.length;
        DFA57_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA57_transition[i] = DFA.unpackEncodedString(DFA57_transitionS[i]);
        }
    }

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = DFA57_eot;
            this.eof = DFA57_eof;
            this.min = DFA57_min;
            this.max = DFA57_max;
            this.accept = DFA57_accept;
            this.special = DFA57_special;
            this.transition = DFA57_transition;
        }
        public String getDescription() {
            return "1008:3: ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) )";
        }
    }
    static final String DFA35_eotS =
        "\20\uffff";
    static final String DFA35_eofS =
        "\20\uffff";
    static final String DFA35_minS =
        "\16\4\2\uffff";
    static final String DFA35_maxS =
        "\16\155\2\uffff";
    static final String DFA35_acceptS =
        "\16\uffff\1\1\1\2";
    static final String DFA35_specialS =
        "\20\uffff}>";
    static final String[] DFA35_transitionS = {
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "",
            ""
    };

    static final short[] DFA35_eot = DFA.unpackEncodedString(DFA35_eotS);
    static final short[] DFA35_eof = DFA.unpackEncodedString(DFA35_eofS);
    static final char[] DFA35_min = DFA.unpackEncodedStringToUnsignedChars(DFA35_minS);
    static final char[] DFA35_max = DFA.unpackEncodedStringToUnsignedChars(DFA35_maxS);
    static final short[] DFA35_accept = DFA.unpackEncodedString(DFA35_acceptS);
    static final short[] DFA35_special = DFA.unpackEncodedString(DFA35_specialS);
    static final short[][] DFA35_transition;

    static {
        int numStates = DFA35_transitionS.length;
        DFA35_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA35_transition[i] = DFA.unpackEncodedString(DFA35_transitionS[i]);
        }
    }

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = DFA35_eot;
            this.eof = DFA35_eof;
            this.min = DFA35_min;
            this.max = DFA35_max;
            this.accept = DFA35_accept;
            this.special = DFA35_special;
            this.transition = DFA35_transition;
        }
        public String getDescription() {
            return "1008:5: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) )";
        }
    }
    static final String DFA33_eotS =
        "\47\uffff";
    static final String DFA33_eofS =
        "\1\uffff\6\16\1\uffff\6\7\31\uffff";
    static final String DFA33_minS =
        "\1\20\6\4\1\uffff\6\4\1\uffff\30\4";
    static final String DFA33_maxS =
        "\7\155\1\uffff\6\155\1\uffff\30\155";
    static final String DFA33_acceptS =
        "\7\uffff\1\1\6\uffff\1\2\30\uffff";
    static final String DFA33_specialS =
        "\47\uffff}>";
    static final String[] DFA33_transitionS = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\43\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\42\1\uffff\1\44\1\45\1\46\12\uffff\1\16\1\uffff\1\7\62\uffff\1\41",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\43\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\42\1\uffff\1\44\1\45\1\46\12\uffff\1\16\1\uffff\1\7\62\uffff\1\41",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\2\16\3\uffff\1\7\16\16\2\uffff\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\16\1\uffff\1\7\62\uffff\1\33",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\16\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\16\62\uffff\1\17"
    };

    static final short[] DFA33_eot = DFA.unpackEncodedString(DFA33_eotS);
    static final short[] DFA33_eof = DFA.unpackEncodedString(DFA33_eofS);
    static final char[] DFA33_min = DFA.unpackEncodedStringToUnsignedChars(DFA33_minS);
    static final char[] DFA33_max = DFA.unpackEncodedStringToUnsignedChars(DFA33_maxS);
    static final short[] DFA33_accept = DFA.unpackEncodedString(DFA33_acceptS);
    static final short[] DFA33_special = DFA.unpackEncodedString(DFA33_specialS);
    static final short[][] DFA33_transition;

    static {
        int numStates = DFA33_transitionS.length;
        DFA33_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA33_transition[i] = DFA.unpackEncodedString(DFA33_transitionS[i]);
        }
    }

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = DFA33_eot;
            this.eof = DFA33_eof;
            this.min = DFA33_min;
            this.max = DFA33_max;
            this.accept = DFA33_accept;
            this.special = DFA33_special;
            this.transition = DFA33_transition;
        }
        public String getDescription() {
            return "1068:3: ( (lv_type_6_0= ruleJvmTypeReference ) )?";
        }
    }
    static final String DFA106_eotS =
        "\34\uffff";
    static final String DFA106_eofS =
        "\25\uffff\6\16\1\uffff";
    static final String DFA106_minS =
        "\16\4\1\uffff\1\7\5\uffff\6\4\1\uffff";
    static final String DFA106_maxS =
        "\16\155\1\uffff\1\155\5\uffff\6\155\1\uffff";
    static final String DFA106_acceptS =
        "\16\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\6\uffff\1\7";
    static final String DFA106_specialS =
        "\34\uffff}>";
    static final String[] DFA106_transitionS = {
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "",
            "\1\16\10\uffff\1\27\7\uffff\1\16\20\uffff\1\26\1\uffff\1\30\1\31\1\32\14\uffff\1\16\62\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\12\uffff\1\16\64\uffff\1\16",
            ""
    };

    static final short[] DFA106_eot = DFA.unpackEncodedString(DFA106_eotS);
    static final short[] DFA106_eof = DFA.unpackEncodedString(DFA106_eofS);
    static final char[] DFA106_min = DFA.unpackEncodedStringToUnsignedChars(DFA106_minS);
    static final char[] DFA106_max = DFA.unpackEncodedStringToUnsignedChars(DFA106_maxS);
    static final short[] DFA106_accept = DFA.unpackEncodedString(DFA106_acceptS);
    static final short[] DFA106_special = DFA.unpackEncodedString(DFA106_specialS);
    static final short[][] DFA106_transition;

    static {
        int numStates = DFA106_transitionS.length;
        DFA106_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA106_transition[i] = DFA.unpackEncodedString(DFA106_transitionS[i]);
        }
    }

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = DFA106_eot;
            this.eof = DFA106_eof;
            this.min = DFA106_min;
            this.max = DFA106_max;
            this.accept = DFA106_accept;
            this.special = DFA106_special;
            this.transition = DFA106_transition;
        }
        public String getDescription() {
            return "1760:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) )";
        }
    }
    static final String DFA67_eotS =
        "\24\uffff";
    static final String DFA67_eofS =
        "\24\uffff";
    static final String DFA67_minS =
        "\1\20\2\4\2\uffff\15\4\2\uffff";
    static final String DFA67_maxS =
        "\3\155\2\uffff\15\155\2\uffff";
    static final String DFA67_acceptS =
        "\3\uffff\1\2\1\4\15\uffff\1\3\1\1";
    static final String DFA67_specialS =
        "\24\uffff}>";
    static final String[] DFA67_transitionS = {
            "\2\4\1\uffff\1\4\1\uffff\1\3\17\uffff\1\1\1\2\2\uffff\1\4\1\uffff\3\4\77\uffff\1\4",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "",
            "",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "\1\10\13\uffff\2\23\1\uffff\1\23\1\uffff\1\22\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\23\1\uffff\3\23\77\uffff\1\23",
            "",
            ""
    };

    static final short[] DFA67_eot = DFA.unpackEncodedString(DFA67_eotS);
    static final short[] DFA67_eof = DFA.unpackEncodedString(DFA67_eofS);
    static final char[] DFA67_min = DFA.unpackEncodedStringToUnsignedChars(DFA67_minS);
    static final char[] DFA67_max = DFA.unpackEncodedStringToUnsignedChars(DFA67_maxS);
    static final short[] DFA67_accept = DFA.unpackEncodedString(DFA67_acceptS);
    static final short[] DFA67_special = DFA.unpackEncodedString(DFA67_specialS);
    static final short[][] DFA67_transition;

    static {
        int numStates = DFA67_transitionS.length;
        DFA67_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA67_transition[i] = DFA.unpackEncodedString(DFA67_transitionS[i]);
        }
    }

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = DFA67_eot;
            this.eof = DFA67_eof;
            this.min = DFA67_min;
            this.max = DFA67_max;
            this.accept = DFA67_accept;
            this.special = DFA67_special;
            this.transition = DFA67_transition;
        }
        public String getDescription() {
            return "1784:3: ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) )";
        }
    }
    static final String DFA61_eotS =
        "\47\uffff";
    static final String DFA61_eofS =
        "\1\uffff\6\10\2\uffff\6\7\30\uffff";
    static final String DFA61_minS =
        "\1\20\6\4\2\uffff\36\4";
    static final String DFA61_maxS =
        "\7\155\2\uffff\36\155";
    static final String DFA61_acceptS =
        "\7\uffff\1\1\1\2\36\uffff";
    static final String DFA61_specialS =
        "\47\uffff}>";
    static final String[] DFA61_transitionS = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\12\1\uffff\1\14\1\15\1\16\12\uffff\1\10\1\uffff\1\7\62\uffff\1\11",
            "",
            "",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\43\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\42\1\uffff\1\44\1\45\1\46\12\uffff\1\10\1\uffff\1\7\62\uffff\1\41",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\43\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\42\1\uffff\1\44\1\45\1\46\12\uffff\1\10\1\uffff\1\7\62\uffff\1\41",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\3\10\1\uffff\1\10\1\7\20\10\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\10\1\uffff\1\7\62\uffff\1\33",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\10\62\uffff\1\25",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\10\20\7\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\7\1\uffff\1\10\62\uffff\1\17"
    };

    static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
    static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
    static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
    static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
    static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
    static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
    static final short[][] DFA61_transition;

    static {
        int numStates = DFA61_transitionS.length;
        DFA61_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
        }
    }

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = DFA61_eot;
            this.eof = DFA61_eof;
            this.min = DFA61_min;
            this.max = DFA61_max;
            this.accept = DFA61_accept;
            this.special = DFA61_special;
            this.transition = DFA61_transition;
        }
        public String getDescription() {
            return "1820:3: ( (lv_type_6_0= ruleJvmTypeReference ) )?";
        }
    }
    static final String DFA63_eotS =
        "\41\uffff";
    static final String DFA63_eofS =
        "\1\7\6\16\32\uffff";
    static final String DFA63_minS =
        "\7\4\1\uffff\6\4\1\uffff\22\4";
    static final String DFA63_maxS =
        "\7\155\1\uffff\6\155\1\uffff\22\155";
    static final String DFA63_acceptS =
        "\7\uffff\1\2\6\uffff\1\1\22\uffff";
    static final String DFA63_specialS =
        "\41\uffff}>";
    static final String[] DFA63_transitionS = {
            "\3\7\6\uffff\3\7\1\3\1\7\1\uffff\3\7\1\uffff\1\7\1\uffff\20\7\1\2\1\uffff\1\4\1\5\1\6\12\uffff\1\7\64\uffff\1\1",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\7\1\uffff\1\16\62\uffff\1\33",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\7\1\uffff\1\16\62\uffff\1\33",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10"
    };

    static final short[] DFA63_eot = DFA.unpackEncodedString(DFA63_eotS);
    static final short[] DFA63_eof = DFA.unpackEncodedString(DFA63_eofS);
    static final char[] DFA63_min = DFA.unpackEncodedStringToUnsignedChars(DFA63_minS);
    static final char[] DFA63_max = DFA.unpackEncodedStringToUnsignedChars(DFA63_maxS);
    static final short[] DFA63_accept = DFA.unpackEncodedString(DFA63_acceptS);
    static final short[] DFA63_special = DFA.unpackEncodedString(DFA63_specialS);
    static final short[][] DFA63_transition;

    static {
        int numStates = DFA63_transitionS.length;
        DFA63_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA63_transition[i] = DFA.unpackEncodedString(DFA63_transitionS[i]);
        }
    }

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = DFA63_eot;
            this.eof = DFA63_eof;
            this.min = DFA63_min;
            this.max = DFA63_max;
            this.accept = DFA63_accept;
            this.special = DFA63_special;
            this.transition = DFA63_transition;
        }
        public String getDescription() {
            return "1927:2: ( (lv_name_12_0= ruleValidID ) )?";
        }
    }
    static final String DFA66_eotS =
        "\41\uffff";
    static final String DFA66_eofS =
        "\1\7\6\16\32\uffff";
    static final String DFA66_minS =
        "\7\4\1\uffff\6\4\1\uffff\22\4";
    static final String DFA66_maxS =
        "\7\155\1\uffff\6\155\1\uffff\22\155";
    static final String DFA66_acceptS =
        "\7\uffff\1\2\6\uffff\1\1\22\uffff";
    static final String DFA66_specialS =
        "\41\uffff}>";
    static final String[] DFA66_transitionS = {
            "\3\7\6\uffff\3\7\1\3\1\7\1\uffff\3\7\1\uffff\1\7\1\uffff\20\7\1\2\1\uffff\1\4\1\5\1\6\12\uffff\1\7\64\uffff\1\1",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\7\1\uffff\1\16\62\uffff\1\33",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\34\1\uffff\1\36\1\37\1\40\12\uffff\1\7\1\uffff\1\16\62\uffff\1\33",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\12\uffff\1\7\1\uffff\1\16\62\uffff\1\25",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\12\uffff\1\16\1\uffff\1\7\62\uffff\1\17",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\12\uffff\1\16\1\uffff\1\7\62\uffff\1\10"
    };

    static final short[] DFA66_eot = DFA.unpackEncodedString(DFA66_eotS);
    static final short[] DFA66_eof = DFA.unpackEncodedString(DFA66_eofS);
    static final char[] DFA66_min = DFA.unpackEncodedStringToUnsignedChars(DFA66_minS);
    static final char[] DFA66_max = DFA.unpackEncodedStringToUnsignedChars(DFA66_maxS);
    static final short[] DFA66_accept = DFA.unpackEncodedString(DFA66_acceptS);
    static final short[] DFA66_special = DFA.unpackEncodedString(DFA66_specialS);
    static final short[][] DFA66_transition;

    static {
        int numStates = DFA66_transitionS.length;
        DFA66_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA66_transition[i] = DFA.unpackEncodedString(DFA66_transitionS[i]);
        }
    }

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = DFA66_eot;
            this.eof = DFA66_eof;
            this.min = DFA66_min;
            this.max = DFA66_max;
            this.accept = DFA66_accept;
            this.special = DFA66_special;
            this.transition = DFA66_transition;
        }
        public String getDescription() {
            return "2033:2: ( (lv_name_18_0= ruleValidID ) )?";
        }
    }
    static final String DFA74_eotS =
        "\51\uffff";
    static final String DFA74_eofS =
        "\51\uffff";
    static final String DFA74_minS =
        "\1\7\10\0\40\uffff";
    static final String DFA74_maxS =
        "\1\155\10\0\40\uffff";
    static final String DFA74_acceptS =
        "\11\uffff\1\5\33\uffff\1\1\1\2\1\3\1\4";
    static final String DFA74_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\40\uffff}>";
    static final String[] DFA74_transitionS = {
            "\1\11\1\uffff\1\11\6\uffff\1\3\1\7\1\uffff\1\10\25\uffff\1\2\1\uffff\1\4\1\5\1\6\16\uffff\14\11\1\uffff\14\11\1\uffff\2\11\25\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
    static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
    static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
    static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
    static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
    static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
    static final short[][] DFA74_transition;

    static {
        int numStates = DFA74_transitionS.length;
        DFA74_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = DFA74_eot;
            this.eof = DFA74_eof;
            this.min = DFA74_min;
            this.max = DFA74_max;
            this.accept = DFA74_accept;
            this.special = DFA74_special;
            this.transition = DFA74_transition;
        }
        public String getDescription() {
            return "2242:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalXtend()) ) {s = 37;}

                        else if ( (synpred2_InternalXtend()) ) {s = 38;}

                        else if ( (synpred3_InternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalXtend()) ) {s = 37;}

                        else if ( (synpred2_InternalXtend()) ) {s = 38;}

                        else if ( (synpred3_InternalXtend()) ) {s = 39;}

                        else if ( (synpred4_InternalXtend()) ) {s = 40;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalXtend()) ) {s = 37;}

                        else if ( (synpred2_InternalXtend()) ) {s = 38;}

                        else if ( (synpred3_InternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalXtend()) ) {s = 37;}

                        else if ( (synpred2_InternalXtend()) ) {s = 38;}

                        else if ( (synpred3_InternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA74_5 = input.LA(1);

                         
                        int index74_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalXtend()) ) {s = 37;}

                        else if ( (synpred2_InternalXtend()) ) {s = 38;}

                        else if ( (synpred3_InternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA74_6 = input.LA(1);

                         
                        int index74_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalXtend()) ) {s = 37;}

                        else if ( (synpred2_InternalXtend()) ) {s = 38;}

                        else if ( (synpred3_InternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA74_7 = input.LA(1);

                         
                        int index74_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalXtend()) ) {s = 37;}

                        else if ( (synpred2_InternalXtend()) ) {s = 38;}

                         
                        input.seek(index74_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalXtend()) ) {s = 37;}

                        else if ( (synpred2_InternalXtend()) ) {s = 38;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA109_eotS =
        "\21\uffff";
    static final String DFA109_eofS =
        "\21\uffff";
    static final String DFA109_minS =
        "\1\20\6\7\1\uffff\1\20\2\uffff\6\7";
    static final String DFA109_maxS =
        "\1\155\6\72\1\uffff\1\155\2\uffff\6\72";
    static final String DFA109_acceptS =
        "\7\uffff\1\3\1\uffff\1\2\1\1\6\uffff";
    static final String DFA109_specialS =
        "\21\uffff}>";
    static final String[] DFA109_transitionS = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "",
            "\1\15\30\uffff\1\14\1\uffff\1\16\1\17\1\20\77\uffff\1\13",
            "",
            "",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11",
            "\1\12\20\uffff\1\10\41\uffff\1\11"
    };

    static final short[] DFA109_eot = DFA.unpackEncodedString(DFA109_eotS);
    static final short[] DFA109_eof = DFA.unpackEncodedString(DFA109_eofS);
    static final char[] DFA109_min = DFA.unpackEncodedStringToUnsignedChars(DFA109_minS);
    static final char[] DFA109_max = DFA.unpackEncodedStringToUnsignedChars(DFA109_maxS);
    static final short[] DFA109_accept = DFA.unpackEncodedString(DFA109_acceptS);
    static final short[] DFA109_special = DFA.unpackEncodedString(DFA109_specialS);
    static final short[][] DFA109_transition;

    static {
        int numStates = DFA109_transitionS.length;
        DFA109_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA109_transition[i] = DFA.unpackEncodedString(DFA109_transitionS[i]);
        }
    }

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = DFA109_eot;
            this.eof = DFA109_eof;
            this.min = DFA109_min;
            this.max = DFA109_max;
            this.accept = DFA109_accept;
            this.special = DFA109_special;
            this.transition = DFA109_transition;
        }
        public String getDescription() {
            return "3384:1: ( (this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | (this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | this_XFunctionTypeRef_6= ruleXFunctionTypeRef )";
        }
    }
    static final String DFA112_eotS =
        "\50\uffff";
    static final String DFA112_eofS =
        "\1\2\47\uffff";
    static final String DFA112_minS =
        "\1\7\1\0\46\uffff";
    static final String DFA112_maxS =
        "\1\155\1\0\46\uffff";
    static final String DFA112_acceptS =
        "\2\uffff\1\2\44\uffff\1\1";
    static final String DFA112_specialS =
        "\1\uffff\1\0\46\uffff}>";
    static final String[] DFA112_transitionS = {
            "\1\1\1\uffff\1\2\6\uffff\1\2\2\uffff\1\2\4\uffff\1\2\20\uffff\1\2\1\uffff\3\2\14\uffff\1\2\1\uffff\14\2\1\uffff\14\2\1\uffff\2\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA112_eot = DFA.unpackEncodedString(DFA112_eotS);
    static final short[] DFA112_eof = DFA.unpackEncodedString(DFA112_eofS);
    static final char[] DFA112_min = DFA.unpackEncodedStringToUnsignedChars(DFA112_minS);
    static final char[] DFA112_max = DFA.unpackEncodedStringToUnsignedChars(DFA112_maxS);
    static final short[] DFA112_accept = DFA.unpackEncodedString(DFA112_acceptS);
    static final short[] DFA112_special = DFA.unpackEncodedString(DFA112_specialS);
    static final short[][] DFA112_transition;

    static {
        int numStates = DFA112_transitionS.length;
        DFA112_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA112_transition[i] = DFA.unpackEncodedString(DFA112_transitionS[i]);
        }
    }

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = DFA112_eot;
            this.eof = DFA112_eof;
            this.min = DFA112_min;
            this.max = DFA112_max;
            this.accept = DFA112_accept;
            this.special = DFA112_special;
            this.transition = DFA112_transition;
        }
        public String getDescription() {
            return "3554:2: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_1 = input.LA(1);

                         
                        int index112_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA115_eotS =
        "\16\uffff";
    static final String DFA115_eofS =
        "\2\uffff\2\7\10\uffff\2\10";
    static final String DFA115_minS =
        "\1\7\1\uffff\1\7\1\11\10\uffff\1\7\1\11";
    static final String DFA115_maxS =
        "\1\127\1\uffff\1\24\1\113\10\uffff\1\24\1\101";
    static final String DFA115_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff";
    static final String DFA115_specialS =
        "\16\uffff}>";
    static final String[] DFA115_transitionS = {
            "\1\2\1\uffff\1\3\11\uffff\1\10\50\uffff\5\1\1\7\1\4\1\5\4\6\1\uffff\5\10\2\12\4\11\1\12\1\uffff\2\13",
            "",
            "\1\14\11\uffff\1\7\1\uffff\1\10\1\7",
            "\1\15\7\uffff\1\7\57\uffff\1\1\11\uffff\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\10\11\uffff\1\10\2\uffff\1\1",
            "\1\10\7\uffff\1\10\57\uffff\1\1"
    };

    static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
    static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
    static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
    static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
    static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
    static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
    static final short[][] DFA115_transition;

    static {
        int numStates = DFA115_transitionS.length;
        DFA115_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
        }
    }

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = DFA115_eot;
            this.eof = DFA115_eof;
            this.min = DFA115_min;
            this.max = DFA115_max;
            this.accept = DFA115_accept;
            this.special = DFA115_special;
            this.transition = DFA115_transition;
        }
        public String getDescription() {
            return "3668:1: (this_OpMultiAssign_0= ruleOpMultiAssign | this_OpOr_1= ruleOpOr | this_OpAnd_2= ruleOpAnd | this_OpEquality_3= ruleOpEquality | this_OpCompare_4= ruleOpCompare | this_OpOther_5= ruleOpOther | this_OpMulti_6= ruleOpMulti | this_OpUnary_7= ruleOpUnary | this_OpPostfix_8= ruleOpPostfix )";
        }
    }
    static final String DFA131_eotS =
        "\37\uffff";
    static final String DFA131_eofS =
        "\37\uffff";
    static final String DFA131_minS =
        "\1\4\6\0\30\uffff";
    static final String DFA131_maxS =
        "\1\155\6\0\30\uffff";
    static final String DFA131_acceptS =
        "\7\uffff\2\1\1\2\25\uffff";
    static final String DFA131_specialS =
        "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\30\uffff}>";
    static final String[] DFA131_transitionS = {
            "\1\11\1\uffff\1\11\3\uffff\2\11\2\uffff\2\11\1\3\1\7\1\uffff\1\10\2\uffff\1\11\2\uffff\14\11\2\uffff\2\11\1\2\1\uffff\1\4\1\5\1\6\1\11\76\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA131_eot = DFA.unpackEncodedString(DFA131_eotS);
    static final short[] DFA131_eof = DFA.unpackEncodedString(DFA131_eofS);
    static final char[] DFA131_min = DFA.unpackEncodedStringToUnsignedChars(DFA131_minS);
    static final char[] DFA131_max = DFA.unpackEncodedStringToUnsignedChars(DFA131_maxS);
    static final short[] DFA131_accept = DFA.unpackEncodedString(DFA131_acceptS);
    static final short[] DFA131_special = DFA.unpackEncodedString(DFA131_specialS);
    static final short[][] DFA131_transition;

    static {
        int numStates = DFA131_transitionS.length;
        DFA131_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA131_transition[i] = DFA.unpackEncodedString(DFA131_transitionS[i]);
        }
    }

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = DFA131_eot;
            this.eof = DFA131_eof;
            this.min = DFA131_min;
            this.max = DFA131_max;
            this.accept = DFA131_accept;
            this.special = DFA131_special;
            this.transition = DFA131_transition;
        }
        public String getDescription() {
            return "4628:6: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_7_0= ruleJvmTypeReference ) ) ( (lv_name_8_0= ruleInnerVarID ) ) ) ) | ( (lv_name_9_0= ruleInnerVarID ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_0 = input.LA(1);

                         
                        int index131_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA131_0==RULE_ID) ) {s = 1;}

                        else if ( (LA131_0==KW_Create) ) {s = 2;}

                        else if ( (LA131_0==KW_Annotation) ) {s = 3;}

                        else if ( (LA131_0==KW_AFTER) ) {s = 4;}

                        else if ( (LA131_0==KW_BEFORE) ) {s = 5;}

                        else if ( (LA131_0==KW_SEPARATOR) ) {s = 6;}

                        else if ( (LA131_0==KW_LeftParenthesis) && (synpred10_InternalXtend())) {s = 7;}

                        else if ( (LA131_0==KW_EqualsSignGreaterThanSign) && (synpred10_InternalXtend())) {s = 8;}

                        else if ( (LA131_0==KW_Package||LA131_0==KW_Class||(LA131_0>=KW_Extends && LA131_0<=KW_Implements)||(LA131_0>=KW_Interface && LA131_0<=KW_Enum)||LA131_0==KW_Throws||(LA131_0>=KW_Public && LA131_0<=KW_Transient)||(LA131_0>=KW_Def && LA131_0<=KW_Override)||LA131_0==KW_Import) ) {s = 9;}

                         
                        input.seek(index131_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA131_1 = input.LA(1);

                         
                        int index131_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA131_2 = input.LA(1);

                         
                        int index131_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA131_3 = input.LA(1);

                         
                        int index131_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA131_4 = input.LA(1);

                         
                        int index131_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA131_5 = input.LA(1);

                         
                        int index131_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA131_6 = input.LA(1);

                         
                        int index131_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index131_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA134_eotS =
        "\154\uffff";
    static final String DFA134_eofS =
        "\1\2\153\uffff";
    static final String DFA134_minS =
        "\1\4\1\0\152\uffff";
    static final String DFA134_maxS =
        "\1\167\1\0\152\uffff";
    static final String DFA134_acceptS =
        "\2\uffff\1\2\150\uffff\1\1";
    static final String DFA134_specialS =
        "\1\uffff\1\0\152\uffff}>";
    static final String[] DFA134_transitionS = {
            "\10\2\1\1\7\2\1\uffff\32\2\1\uffff\2\2\6\uffff\42\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA134_eot = DFA.unpackEncodedString(DFA134_eotS);
    static final short[] DFA134_eof = DFA.unpackEncodedString(DFA134_eofS);
    static final char[] DFA134_min = DFA.unpackEncodedStringToUnsignedChars(DFA134_minS);
    static final char[] DFA134_max = DFA.unpackEncodedStringToUnsignedChars(DFA134_maxS);
    static final short[] DFA134_accept = DFA.unpackEncodedString(DFA134_acceptS);
    static final short[] DFA134_special = DFA.unpackEncodedString(DFA134_specialS);
    static final short[][] DFA134_transition;

    static {
        int numStates = DFA134_transitionS.length;
        DFA134_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA134_transition[i] = DFA.unpackEncodedString(DFA134_transitionS[i]);
        }
    }

    class DFA134 extends DFA {

        public DFA134(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 134;
            this.eot = DFA134_eot;
            this.eof = DFA134_eof;
            this.min = DFA134_min;
            this.max = DFA134_max;
            this.accept = DFA134_accept;
            this.special = DFA134_special;
            this.transition = DFA134_transition;
        }
        public String getDescription() {
            return "4743:1: ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA134_1 = input.LA(1);

                         
                        int index134_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index134_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 134, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA136_eotS =
        "\154\uffff";
    static final String DFA136_eofS =
        "\1\2\153\uffff";
    static final String DFA136_minS =
        "\1\4\1\0\152\uffff";
    static final String DFA136_maxS =
        "\1\167\1\0\152\uffff";
    static final String DFA136_acceptS =
        "\2\uffff\1\2\150\uffff\1\1";
    static final String DFA136_specialS =
        "\1\uffff\1\0\152\uffff}>";
    static final String[] DFA136_transitionS = {
            "\3\2\1\1\14\2\1\uffff\32\2\1\uffff\2\2\6\uffff\42\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA136_eot = DFA.unpackEncodedString(DFA136_eotS);
    static final short[] DFA136_eof = DFA.unpackEncodedString(DFA136_eofS);
    static final char[] DFA136_min = DFA.unpackEncodedStringToUnsignedChars(DFA136_minS);
    static final char[] DFA136_max = DFA.unpackEncodedStringToUnsignedChars(DFA136_maxS);
    static final short[] DFA136_accept = DFA.unpackEncodedString(DFA136_acceptS);
    static final short[] DFA136_special = DFA.unpackEncodedString(DFA136_specialS);
    static final short[][] DFA136_transition;

    static {
        int numStates = DFA136_transitionS.length;
        DFA136_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA136_transition[i] = DFA.unpackEncodedString(DFA136_transitionS[i]);
        }
    }

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = DFA136_eot;
            this.eof = DFA136_eof;
            this.min = DFA136_min;
            this.max = DFA136_max;
            this.accept = DFA136_accept;
            this.special = DFA136_special;
            this.transition = DFA136_transition;
        }
        public String getDescription() {
            return "4823:2: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA136_1 = input.LA(1);

                         
                        int index136_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index136_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 136, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA139_eotS =
        "\154\uffff";
    static final String DFA139_eofS =
        "\1\2\153\uffff";
    static final String DFA139_minS =
        "\1\4\1\0\152\uffff";
    static final String DFA139_maxS =
        "\1\167\1\0\152\uffff";
    static final String DFA139_acceptS =
        "\2\uffff\1\2\150\uffff\1\1";
    static final String DFA139_specialS =
        "\1\uffff\1\0\152\uffff}>";
    static final String[] DFA139_transitionS = {
            "\15\2\1\1\2\2\1\uffff\32\2\1\uffff\2\2\6\uffff\42\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA139_eot = DFA.unpackEncodedString(DFA139_eotS);
    static final short[] DFA139_eof = DFA.unpackEncodedString(DFA139_eofS);
    static final char[] DFA139_min = DFA.unpackEncodedStringToUnsignedChars(DFA139_minS);
    static final char[] DFA139_max = DFA.unpackEncodedStringToUnsignedChars(DFA139_maxS);
    static final short[] DFA139_accept = DFA.unpackEncodedString(DFA139_acceptS);
    static final short[] DFA139_special = DFA.unpackEncodedString(DFA139_specialS);
    static final short[][] DFA139_transition;

    static {
        int numStates = DFA139_transitionS.length;
        DFA139_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA139_transition[i] = DFA.unpackEncodedString(DFA139_transitionS[i]);
        }
    }

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = DFA139_eot;
            this.eof = DFA139_eof;
            this.min = DFA139_min;
            this.max = DFA139_max;
            this.accept = DFA139_accept;
            this.special = DFA139_special;
            this.transition = DFA139_transition;
        }
        public String getDescription() {
            return "4872:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA139_1 = input.LA(1);

                         
                        int index139_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index139_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 139, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA138_eotS =
        "\75\uffff";
    static final String DFA138_eofS =
        "\75\uffff";
    static final String DFA138_minS =
        "\1\4\10\0\1\uffff\26\0\35\uffff";
    static final String DFA138_maxS =
        "\1\167\10\0\1\uffff\26\0\35\uffff";
    static final String DFA138_acceptS =
        "\11\uffff\1\1\26\uffff\1\1\1\2\32\uffff\1\3";
    static final String DFA138_specialS =
        "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\35\uffff}>";
    static final String[] DFA138_transitionS = {
            "\1\25\1\uffff\1\13\1\41\2\uffff\1\17\1\21\1\41\1\uffff\1\23\1\16\1\4\1\10\1\74\1\11\1\uffff\1\1\1\32\1\41\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\uffff\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\1\uffff\1\41\10\uffff\2\41\23\uffff\2\41\4\uffff\1\41\5\uffff\1\40\1\41\2\uffff\13\41\4\uffff\1\2\3\41\4\uffff\3\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA138_eot = DFA.unpackEncodedString(DFA138_eotS);
    static final short[] DFA138_eof = DFA.unpackEncodedString(DFA138_eofS);
    static final char[] DFA138_min = DFA.unpackEncodedStringToUnsignedChars(DFA138_minS);
    static final char[] DFA138_max = DFA.unpackEncodedStringToUnsignedChars(DFA138_maxS);
    static final short[] DFA138_accept = DFA.unpackEncodedString(DFA138_acceptS);
    static final short[] DFA138_special = DFA.unpackEncodedString(DFA138_specialS);
    static final short[][] DFA138_transition;

    static {
        int numStates = DFA138_transitionS.length;
        DFA138_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA138_transition[i] = DFA.unpackEncodedString(DFA138_transitionS[i]);
        }
    }

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = DFA138_eot;
            this.eof = DFA138_eof;
            this.min = DFA138_min;
            this.max = DFA138_max;
            this.accept = DFA138_accept;
            this.special = DFA138_special;
            this.transition = DFA138_transition;
        }
        public String getDescription() {
            return "4893:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_0 = input.LA(1);

                         
                        int index138_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA138_0==KW_Extension) ) {s = 1;}

                        else if ( (LA138_0==RULE_ID) ) {s = 2;}

                        else if ( (LA138_0==KW_Create) ) {s = 3;}

                        else if ( (LA138_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA138_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA138_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA138_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA138_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA138_0==KW_EqualsSignGreaterThanSign) && (synpred14_InternalXtend())) {s = 9;}

                        else if ( (LA138_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA138_0==KW_Class) ) {s = 11;}

                        else if ( (LA138_0==KW_Def) ) {s = 12;}

                        else if ( (LA138_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA138_0==KW_Enum) ) {s = 14;}

                        else if ( (LA138_0==KW_Extends) ) {s = 15;}

                        else if ( (LA138_0==KW_Final) ) {s = 16;}

                        else if ( (LA138_0==KW_Implements) ) {s = 17;}

                        else if ( (LA138_0==KW_Import) ) {s = 18;}

                        else if ( (LA138_0==KW_Interface) ) {s = 19;}

                        else if ( (LA138_0==KW_Override) ) {s = 20;}

                        else if ( (LA138_0==KW_Package) ) {s = 21;}

                        else if ( (LA138_0==KW_Public) ) {s = 22;}

                        else if ( (LA138_0==KW_Private) ) {s = 23;}

                        else if ( (LA138_0==KW_Protected) ) {s = 24;}

                        else if ( (LA138_0==KW_Static) ) {s = 25;}

                        else if ( (LA138_0==KW_Throws) ) {s = 26;}

                        else if ( (LA138_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA138_0==KW_Native) ) {s = 28;}

                        else if ( (LA138_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA138_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA138_0==KW_Transient) ) {s = 31;}

                        else if ( (LA138_0==KW_VerticalLine) && (synpred14_InternalXtend())) {s = 32;}

                        else if ( (LA138_0==KW_LessThanSign||LA138_0==KW_LeftCurlyBracket||LA138_0==KW_New||LA138_0==KW_Switch||(LA138_0>=KW_NumberSign && LA138_0<=KW_LeftSquareBracket)||(LA138_0>=KW_PlusSign && LA138_0<=KW_HyphenMinus)||LA138_0==KW_ExclamationMark||LA138_0==KW_If||(LA138_0>=KW_For && LA138_0<=KW_Try)||(LA138_0>=RULE_STRING && LA138_0<=RULE_RICH_TEXT_START)||(LA138_0>=RULE_HEX && LA138_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA138_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index138_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA138_1 = input.LA(1);

                         
                        int index138_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA138_2 = input.LA(1);

                         
                        int index138_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA138_3 = input.LA(1);

                         
                        int index138_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA138_4 = input.LA(1);

                         
                        int index138_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA138_5 = input.LA(1);

                         
                        int index138_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA138_6 = input.LA(1);

                         
                        int index138_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA138_7 = input.LA(1);

                         
                        int index138_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA138_8 = input.LA(1);

                         
                        int index138_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA138_10 = input.LA(1);

                         
                        int index138_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA138_11 = input.LA(1);

                         
                        int index138_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA138_12 = input.LA(1);

                         
                        int index138_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA138_13 = input.LA(1);

                         
                        int index138_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA138_14 = input.LA(1);

                         
                        int index138_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA138_15 = input.LA(1);

                         
                        int index138_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA138_16 = input.LA(1);

                         
                        int index138_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA138_17 = input.LA(1);

                         
                        int index138_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA138_18 = input.LA(1);

                         
                        int index138_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA138_19 = input.LA(1);

                         
                        int index138_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA138_20 = input.LA(1);

                         
                        int index138_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA138_21 = input.LA(1);

                         
                        int index138_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA138_22 = input.LA(1);

                         
                        int index138_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA138_23 = input.LA(1);

                         
                        int index138_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA138_24 = input.LA(1);

                         
                        int index138_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA138_25 = input.LA(1);

                         
                        int index138_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA138_26 = input.LA(1);

                         
                        int index138_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA138_27 = input.LA(1);

                         
                        int index138_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA138_28 = input.LA(1);

                         
                        int index138_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA138_29 = input.LA(1);

                         
                        int index138_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA138_30 = input.LA(1);

                         
                        int index138_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA138_31 = input.LA(1);

                         
                        int index138_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index138_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA140_eotS =
        "\154\uffff";
    static final String DFA140_eofS =
        "\1\2\153\uffff";
    static final String DFA140_minS =
        "\1\4\1\0\152\uffff";
    static final String DFA140_maxS =
        "\1\167\1\0\152\uffff";
    static final String DFA140_acceptS =
        "\2\uffff\1\2\150\uffff\1\1";
    static final String DFA140_specialS =
        "\1\uffff\1\0\152\uffff}>";
    static final String[] DFA140_transitionS = {
            "\20\2\1\uffff\32\2\1\uffff\2\2\6\uffff\2\2\1\1\37\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA140_eot = DFA.unpackEncodedString(DFA140_eotS);
    static final short[] DFA140_eof = DFA.unpackEncodedString(DFA140_eofS);
    static final char[] DFA140_min = DFA.unpackEncodedStringToUnsignedChars(DFA140_minS);
    static final char[] DFA140_max = DFA.unpackEncodedStringToUnsignedChars(DFA140_maxS);
    static final short[] DFA140_accept = DFA.unpackEncodedString(DFA140_acceptS);
    static final short[] DFA140_special = DFA.unpackEncodedString(DFA140_specialS);
    static final short[][] DFA140_transition;

    static {
        int numStates = DFA140_transitionS.length;
        DFA140_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA140_transition[i] = DFA.unpackEncodedString(DFA140_transitionS[i]);
        }
    }

    class DFA140 extends DFA {

        public DFA140(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 140;
            this.eot = DFA140_eot;
            this.eof = DFA140_eof;
            this.min = DFA140_min;
            this.max = DFA140_max;
            this.accept = DFA140_accept;
            this.special = DFA140_special;
            this.transition = DFA140_transition;
        }
        public String getDescription() {
            return "4972:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA140_1 = input.LA(1);

                         
                        int index140_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index140_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 140, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA146_eotS =
        "\74\uffff";
    static final String DFA146_eofS =
        "\74\uffff";
    static final String DFA146_minS =
        "\1\4\1\0\72\uffff";
    static final String DFA146_maxS =
        "\1\167\1\0\72\uffff";
    static final String DFA146_acceptS =
        "\2\uffff\1\2\70\uffff\1\1";
    static final String DFA146_specialS =
        "\1\uffff\1\0\72\uffff}>";
    static final String[] DFA146_transitionS = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\3\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\1\uffff\1\2\10\uffff\2\2\23\uffff\2\2\4\uffff\1\2\6\uffff\1\2\2\uffff\13\2\4\uffff\4\2\4\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA146_eot = DFA.unpackEncodedString(DFA146_eotS);
    static final short[] DFA146_eof = DFA.unpackEncodedString(DFA146_eofS);
    static final char[] DFA146_min = DFA.unpackEncodedStringToUnsignedChars(DFA146_minS);
    static final char[] DFA146_max = DFA.unpackEncodedStringToUnsignedChars(DFA146_maxS);
    static final short[] DFA146_accept = DFA.unpackEncodedString(DFA146_acceptS);
    static final short[] DFA146_special = DFA.unpackEncodedString(DFA146_specialS);
    static final short[][] DFA146_transition;

    static {
        int numStates = DFA146_transitionS.length;
        DFA146_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA146_transition[i] = DFA.unpackEncodedString(DFA146_transitionS[i]);
        }
    }

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = DFA146_eot;
            this.eof = DFA146_eof;
            this.min = DFA146_min;
            this.max = DFA146_max;
            this.accept = DFA146_accept;
            this.special = DFA146_special;
            this.transition = DFA146_transition;
        }
        public String getDescription() {
            return "5207:1: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_1 = input.LA(1);

                         
                        int index146_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index146_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA145_eotS =
        "\73\uffff";
    static final String DFA145_eofS =
        "\73\uffff";
    static final String DFA145_minS =
        "\1\4\10\0\1\uffff\26\0\33\uffff";
    static final String DFA145_maxS =
        "\1\167\10\0\1\uffff\26\0\33\uffff";
    static final String DFA145_acceptS =
        "\11\uffff\1\1\26\uffff\1\2\32\uffff";
    static final String DFA145_specialS =
        "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\33\uffff}>";
    static final String[] DFA145_transitionS = {
            "\1\25\1\uffff\1\13\1\40\2\uffff\1\17\1\21\1\40\1\uffff\1\23\1\16\1\4\1\10\1\uffff\1\11\1\uffff\1\1\1\32\1\40\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\uffff\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\1\uffff\1\40\10\uffff\2\40\23\uffff\2\40\4\uffff\1\40\6\uffff\1\40\2\uffff\13\40\4\uffff\1\2\3\40\4\uffff\3\40",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA145_eot = DFA.unpackEncodedString(DFA145_eotS);
    static final short[] DFA145_eof = DFA.unpackEncodedString(DFA145_eofS);
    static final char[] DFA145_min = DFA.unpackEncodedStringToUnsignedChars(DFA145_minS);
    static final char[] DFA145_max = DFA.unpackEncodedStringToUnsignedChars(DFA145_maxS);
    static final short[] DFA145_accept = DFA.unpackEncodedString(DFA145_acceptS);
    static final short[] DFA145_special = DFA.unpackEncodedString(DFA145_specialS);
    static final short[][] DFA145_transition;

    static {
        int numStates = DFA145_transitionS.length;
        DFA145_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA145_transition[i] = DFA.unpackEncodedString(DFA145_transitionS[i]);
        }
    }

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = DFA145_eot;
            this.eof = DFA145_eof;
            this.min = DFA145_min;
            this.max = DFA145_max;
            this.accept = DFA145_accept;
            this.special = DFA145_special;
            this.transition = DFA145_transition;
        }
        public String getDescription() {
            return "5262:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_0 = input.LA(1);

                         
                        int index145_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA145_0==KW_Extension) ) {s = 1;}

                        else if ( (LA145_0==RULE_ID) ) {s = 2;}

                        else if ( (LA145_0==KW_Create) ) {s = 3;}

                        else if ( (LA145_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA145_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA145_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA145_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA145_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA145_0==KW_EqualsSignGreaterThanSign) && (synpred17_InternalXtend())) {s = 9;}

                        else if ( (LA145_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA145_0==KW_Class) ) {s = 11;}

                        else if ( (LA145_0==KW_Def) ) {s = 12;}

                        else if ( (LA145_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA145_0==KW_Enum) ) {s = 14;}

                        else if ( (LA145_0==KW_Extends) ) {s = 15;}

                        else if ( (LA145_0==KW_Final) ) {s = 16;}

                        else if ( (LA145_0==KW_Implements) ) {s = 17;}

                        else if ( (LA145_0==KW_Import) ) {s = 18;}

                        else if ( (LA145_0==KW_Interface) ) {s = 19;}

                        else if ( (LA145_0==KW_Override) ) {s = 20;}

                        else if ( (LA145_0==KW_Package) ) {s = 21;}

                        else if ( (LA145_0==KW_Public) ) {s = 22;}

                        else if ( (LA145_0==KW_Private) ) {s = 23;}

                        else if ( (LA145_0==KW_Protected) ) {s = 24;}

                        else if ( (LA145_0==KW_Static) ) {s = 25;}

                        else if ( (LA145_0==KW_Throws) ) {s = 26;}

                        else if ( (LA145_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA145_0==KW_Native) ) {s = 28;}

                        else if ( (LA145_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA145_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA145_0==KW_Transient) ) {s = 31;}

                        else if ( (LA145_0==KW_LessThanSign||LA145_0==KW_LeftCurlyBracket||LA145_0==KW_New||LA145_0==KW_Switch||(LA145_0>=KW_NumberSign && LA145_0<=KW_LeftSquareBracket)||(LA145_0>=KW_PlusSign && LA145_0<=KW_HyphenMinus)||LA145_0==KW_ExclamationMark||LA145_0==KW_If||(LA145_0>=KW_For && LA145_0<=KW_Try)||(LA145_0>=RULE_STRING && LA145_0<=RULE_RICH_TEXT_START)||(LA145_0>=RULE_HEX && LA145_0<=RULE_DECIMAL)) ) {s = 32;}

                         
                        input.seek(index145_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA145_2 = input.LA(1);

                         
                        int index145_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA145_3 = input.LA(1);

                         
                        int index145_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA145_4 = input.LA(1);

                         
                        int index145_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA145_5 = input.LA(1);

                         
                        int index145_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA145_6 = input.LA(1);

                         
                        int index145_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA145_7 = input.LA(1);

                         
                        int index145_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA145_8 = input.LA(1);

                         
                        int index145_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA145_10 = input.LA(1);

                         
                        int index145_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA145_11 = input.LA(1);

                         
                        int index145_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA145_12 = input.LA(1);

                         
                        int index145_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA145_13 = input.LA(1);

                         
                        int index145_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA145_14 = input.LA(1);

                         
                        int index145_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA145_15 = input.LA(1);

                         
                        int index145_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA145_16 = input.LA(1);

                         
                        int index145_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA145_17 = input.LA(1);

                         
                        int index145_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA145_18 = input.LA(1);

                         
                        int index145_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA145_19 = input.LA(1);

                         
                        int index145_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA145_20 = input.LA(1);

                         
                        int index145_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA145_21 = input.LA(1);

                         
                        int index145_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA145_22 = input.LA(1);

                         
                        int index145_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA145_23 = input.LA(1);

                         
                        int index145_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA145_24 = input.LA(1);

                         
                        int index145_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA145_25 = input.LA(1);

                         
                        int index145_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA145_26 = input.LA(1);

                         
                        int index145_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA145_27 = input.LA(1);

                         
                        int index145_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA145_28 = input.LA(1);

                         
                        int index145_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA145_29 = input.LA(1);

                         
                        int index145_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA145_30 = input.LA(1);

                         
                        int index145_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA145_31 = input.LA(1);

                         
                        int index145_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index145_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA149_eotS =
        "\12\uffff";
    static final String DFA149_eofS =
        "\12\uffff";
    static final String DFA149_minS =
        "\1\4\1\20\1\uffff\6\0\1\uffff";
    static final String DFA149_maxS =
        "\1\167\1\155\1\uffff\6\0\1\uffff";
    static final String DFA149_acceptS =
        "\2\uffff\1\2\6\uffff\1\1";
    static final String DFA149_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\uffff}>";
    static final String[] DFA149_transitionS = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\4\2\3\uffff\2\2\1\1\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\1\uffff\1\2\10\uffff\2\2\23\uffff\2\2\4\uffff\1\2\6\uffff\1\2\2\uffff\13\2\4\uffff\4\2\4\uffff\3\2",
            "\1\5\30\uffff\1\4\1\uffff\1\6\1\7\1\10\77\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA149_eot = DFA.unpackEncodedString(DFA149_eotS);
    static final short[] DFA149_eof = DFA.unpackEncodedString(DFA149_eofS);
    static final char[] DFA149_min = DFA.unpackEncodedStringToUnsignedChars(DFA149_minS);
    static final char[] DFA149_max = DFA.unpackEncodedStringToUnsignedChars(DFA149_maxS);
    static final short[] DFA149_accept = DFA.unpackEncodedString(DFA149_acceptS);
    static final short[] DFA149_special = DFA.unpackEncodedString(DFA149_specialS);
    static final short[][] DFA149_transition;

    static {
        int numStates = DFA149_transitionS.length;
        DFA149_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA149_transition[i] = DFA.unpackEncodedString(DFA149_transitionS[i]);
        }
    }

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = DFA149_eot;
            this.eof = DFA149_eof;
            this.min = DFA149_min;
            this.max = DFA149_max;
            this.accept = DFA149_accept;
            this.special = DFA149_special;
            this.transition = DFA149_transition;
        }
        public String getDescription() {
            return "5380:1: ( ( ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall ) | this_XExpression_1= ruleXExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_3 = input.LA(1);

                         
                        int index149_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA149_4 = input.LA(1);

                         
                        int index149_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA149_5 = input.LA(1);

                         
                        int index149_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA149_6 = input.LA(1);

                         
                        int index149_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA149_7 = input.LA(1);

                         
                        int index149_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA149_8 = input.LA(1);

                         
                        int index149_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA166_eotS =
        "\47\uffff";
    static final String DFA166_eofS =
        "\1\2\46\uffff";
    static final String DFA166_minS =
        "\1\4\1\0\45\uffff";
    static final String DFA166_maxS =
        "\1\155\1\0\45\uffff";
    static final String DFA166_acceptS =
        "\2\uffff\1\2\43\uffff\1\1";
    static final String DFA166_specialS =
        "\1\uffff\1\0\45\uffff}>";
    static final String[] DFA166_transitionS = {
            "\3\2\1\uffff\1\2\4\uffff\4\2\1\1\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\21\2\1\uffff\3\2\12\uffff\1\2\2\uffff\1\2\61\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA166_eot = DFA.unpackEncodedString(DFA166_eotS);
    static final short[] DFA166_eof = DFA.unpackEncodedString(DFA166_eofS);
    static final char[] DFA166_min = DFA.unpackEncodedStringToUnsignedChars(DFA166_minS);
    static final char[] DFA166_max = DFA.unpackEncodedStringToUnsignedChars(DFA166_maxS);
    static final short[] DFA166_accept = DFA.unpackEncodedString(DFA166_acceptS);
    static final short[] DFA166_special = DFA.unpackEncodedString(DFA166_specialS);
    static final short[][] DFA166_transition;

    static {
        int numStates = DFA166_transitionS.length;
        DFA166_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA166_transition[i] = DFA.unpackEncodedString(DFA166_transitionS[i]);
        }
    }

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = DFA166_eot;
            this.eof = DFA166_eof;
            this.min = DFA166_min;
            this.max = DFA166_max;
            this.accept = DFA166_accept;
            this.special = DFA166_special;
            this.transition = DFA166_transition;
        }
        public String getDescription() {
            return "6307:2: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_1 = input.LA(1);

                         
                        int index166_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalXtend()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index166_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA165_eotS =
        "\75\uffff";
    static final String DFA165_eofS =
        "\75\uffff";
    static final String DFA165_minS =
        "\1\4\6\0\66\uffff";
    static final String DFA165_maxS =
        "\1\167\6\0\66\uffff";
    static final String DFA165_acceptS =
        "\7\uffff\1\2\63\uffff\1\3\1\1";
    static final String DFA165_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\66\uffff}>";
    static final String[] DFA165_transitionS = {
            "\1\7\1\uffff\2\7\2\uffff\3\7\1\uffff\2\7\1\3\1\7\1\73\2\uffff\3\7\1\uffff\14\7\2\uffff\2\7\1\2\1\uffff\1\4\1\5\1\6\1\7\1\uffff\1\7\7\uffff\3\7\23\uffff\2\7\4\uffff\1\7\6\uffff\1\7\2\uffff\13\7\4\uffff\1\1\3\7\4\uffff\3\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA165_eot = DFA.unpackEncodedString(DFA165_eotS);
    static final short[] DFA165_eof = DFA.unpackEncodedString(DFA165_eofS);
    static final char[] DFA165_min = DFA.unpackEncodedStringToUnsignedChars(DFA165_minS);
    static final char[] DFA165_max = DFA.unpackEncodedStringToUnsignedChars(DFA165_maxS);
    static final short[] DFA165_accept = DFA.unpackEncodedString(DFA165_acceptS);
    static final short[] DFA165_special = DFA.unpackEncodedString(DFA165_specialS);
    static final short[][] DFA165_transition;

    static {
        int numStates = DFA165_transitionS.length;
        DFA165_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA165_transition[i] = DFA.unpackEncodedString(DFA165_transitionS[i]);
        }
    }

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = DFA165_eot;
            this.eof = DFA165_eof;
            this.min = DFA165_min;
            this.max = DFA165_max;
            this.accept = DFA165_accept;
            this.special = DFA165_special;
            this.transition = DFA165_transition;
        }
        public String getDescription() {
            return "6312:2: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_1 = input.LA(1);

                         
                        int index165_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA165_2 = input.LA(1);

                         
                        int index165_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA165_3 = input.LA(1);

                         
                        int index165_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA165_4 = input.LA(1);

                         
                        int index165_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA165_5 = input.LA(1);

                         
                        int index165_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA165_6 = input.LA(1);

                         
                        int index165_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index165_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA171_eotS =
        "\74\uffff";
    static final String DFA171_eofS =
        "\74\uffff";
    static final String DFA171_minS =
        "\1\4\1\0\72\uffff";
    static final String DFA171_maxS =
        "\1\167\1\0\72\uffff";
    static final String DFA171_acceptS =
        "\2\uffff\1\2\70\uffff\1\1";
    static final String DFA171_specialS =
        "\1\uffff\1\0\72\uffff}>";
    static final String[] DFA171_transitionS = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\4\2\3\uffff\3\2\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\1\uffff\1\2\7\uffff\1\2\1\1\1\2\23\uffff\2\2\4\uffff\1\2\6\uffff\1\2\2\uffff\13\2\4\uffff\4\2\4\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA171_eot = DFA.unpackEncodedString(DFA171_eotS);
    static final short[] DFA171_eof = DFA.unpackEncodedString(DFA171_eofS);
    static final char[] DFA171_min = DFA.unpackEncodedStringToUnsignedChars(DFA171_minS);
    static final char[] DFA171_max = DFA.unpackEncodedStringToUnsignedChars(DFA171_maxS);
    static final short[] DFA171_accept = DFA.unpackEncodedString(DFA171_acceptS);
    static final short[] DFA171_special = DFA.unpackEncodedString(DFA171_specialS);
    static final short[][] DFA171_transition;

    static {
        int numStates = DFA171_transitionS.length;
        DFA171_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA171_transition[i] = DFA.unpackEncodedString(DFA171_transitionS[i]);
        }
    }

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = DFA171_eot;
            this.eof = DFA171_eof;
            this.min = DFA171_min;
            this.max = DFA171_max;
            this.accept = DFA171_accept;
            this.special = DFA171_special;
            this.transition = DFA171_transition;
        }
        public String getDescription() {
            return "6469:1: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_1 = input.LA(1);

                         
                        int index171_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index171_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA174_eotS =
        "\74\uffff";
    static final String DFA174_eofS =
        "\74\uffff";
    static final String DFA174_minS =
        "\1\4\1\0\72\uffff";
    static final String DFA174_maxS =
        "\1\167\1\0\72\uffff";
    static final String DFA174_acceptS =
        "\2\uffff\1\2\70\uffff\1\1";
    static final String DFA174_specialS =
        "\1\uffff\1\0\72\uffff}>";
    static final String[] DFA174_transitionS = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\4\2\3\uffff\3\2\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\1\uffff\1\2\7\uffff\1\2\1\1\1\2\23\uffff\2\2\4\uffff\1\2\6\uffff\1\2\2\uffff\13\2\4\uffff\4\2\4\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA174_eot = DFA.unpackEncodedString(DFA174_eotS);
    static final short[] DFA174_eof = DFA.unpackEncodedString(DFA174_eofS);
    static final char[] DFA174_min = DFA.unpackEncodedStringToUnsignedChars(DFA174_minS);
    static final char[] DFA174_max = DFA.unpackEncodedStringToUnsignedChars(DFA174_maxS);
    static final short[] DFA174_accept = DFA.unpackEncodedString(DFA174_acceptS);
    static final short[] DFA174_special = DFA.unpackEncodedString(DFA174_specialS);
    static final short[][] DFA174_transition;

    static {
        int numStates = DFA174_transitionS.length;
        DFA174_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA174_transition[i] = DFA.unpackEncodedString(DFA174_transitionS[i]);
        }
    }

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = DFA174_eot;
            this.eof = DFA174_eof;
            this.min = DFA174_min;
            this.max = DFA174_max;
            this.accept = DFA174_accept;
            this.special = DFA174_special;
            this.transition = DFA174_transition;
        }
        public String getDescription() {
            return "6589:1: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA174_1 = input.LA(1);

                         
                        int index174_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index174_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 174, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA177_eotS =
        "\40\uffff";
    static final String DFA177_eofS =
        "\1\uffff\35\36\2\uffff";
    static final String DFA177_minS =
        "\36\4\2\uffff";
    static final String DFA177_maxS =
        "\36\167\2\uffff";
    static final String DFA177_acceptS =
        "\36\uffff\1\2\1\1";
    static final String DFA177_specialS =
        "\40\uffff}>";
    static final String[] DFA177_transitionS = {
            "\1\17\1\uffff\1\4\1\36\2\uffff\1\11\1\13\1\36\1\uffff\1\15\1\10\1\3\1\36\3\uffff\1\35\1\24\1\36\1\uffff\1\20\1\21\1\22\1\2\1\23\1\7\1\12\1\25\1\26\1\27\1\30\1\31\2\uffff\1\6\1\16\1\5\1\uffff\1\32\1\33\1\34\1\14\1\uffff\1\36\10\uffff\2\36\23\uffff\2\36\4\uffff\1\36\6\uffff\1\36\2\uffff\13\36\4\uffff\1\1\3\36\4\uffff\3\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\2\36\6\uffff\42\36\1\uffff\20\36\2\uffff\13\36",
            "",
            ""
    };

    static final short[] DFA177_eot = DFA.unpackEncodedString(DFA177_eotS);
    static final short[] DFA177_eof = DFA.unpackEncodedString(DFA177_eofS);
    static final char[] DFA177_min = DFA.unpackEncodedStringToUnsignedChars(DFA177_minS);
    static final char[] DFA177_max = DFA.unpackEncodedStringToUnsignedChars(DFA177_maxS);
    static final short[] DFA177_accept = DFA.unpackEncodedString(DFA177_acceptS);
    static final short[] DFA177_special = DFA.unpackEncodedString(DFA177_specialS);
    static final short[][] DFA177_transition;

    static {
        int numStates = DFA177_transitionS.length;
        DFA177_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA177_transition[i] = DFA.unpackEncodedString(DFA177_transitionS[i]);
        }
    }

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = DFA177_eot;
            this.eof = DFA177_eof;
            this.min = DFA177_min;
            this.max = DFA177_max;
            this.accept = DFA177_accept;
            this.special = DFA177_special;
            this.transition = DFA177_transition;
        }
        public String getDescription() {
            return "6751:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )";
        }
    }
    static final String DFA176_eotS =
        "\12\uffff";
    static final String DFA176_eofS =
        "\1\10\11\uffff";
    static final String DFA176_minS =
        "\1\4\7\0\2\uffff";
    static final String DFA176_maxS =
        "\1\167\7\0\2\uffff";
    static final String DFA176_acceptS =
        "\10\uffff\1\2\1\1";
    static final String DFA176_specialS =
        "\1\uffff\1\4\1\3\1\2\1\1\1\0\1\5\1\6\2\uffff}>";
    static final String[] DFA176_transitionS = {
            "\3\10\1\6\1\10\1\7\12\10\1\uffff\32\10\1\uffff\2\10\6\uffff\4\10\1\1\1\2\1\3\1\4\1\5\31\10\1\uffff\20\10\2\uffff\13\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA176_eot = DFA.unpackEncodedString(DFA176_eotS);
    static final short[] DFA176_eof = DFA.unpackEncodedString(DFA176_eofS);
    static final char[] DFA176_min = DFA.unpackEncodedStringToUnsignedChars(DFA176_minS);
    static final char[] DFA176_max = DFA.unpackEncodedStringToUnsignedChars(DFA176_maxS);
    static final short[] DFA176_accept = DFA.unpackEncodedString(DFA176_acceptS);
    static final short[] DFA176_special = DFA.unpackEncodedString(DFA176_specialS);
    static final short[][] DFA176_transition;

    static {
        int numStates = DFA176_transitionS.length;
        DFA176_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA176_transition[i] = DFA.unpackEncodedString(DFA176_transitionS[i]);
        }
    }

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = DFA176_eot;
            this.eof = DFA176_eof;
            this.min = DFA176_min;
            this.max = DFA176_max;
            this.accept = DFA176_accept;
            this.special = DFA176_special;
            this.transition = DFA176_transition;
        }
        public String getDescription() {
            return "6808:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA176_5 = input.LA(1);

                         
                        int index176_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA176_4 = input.LA(1);

                         
                        int index176_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA176_3 = input.LA(1);

                         
                        int index176_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA176_2 = input.LA(1);

                         
                        int index176_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA176_1 = input.LA(1);

                         
                        int index176_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_1);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA176_6 = input.LA(1);

                         
                        int index176_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA176_7 = input.LA(1);

                         
                        int index176_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index176_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 176, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA186_eotS =
        "\13\uffff";
    static final String DFA186_eofS =
        "\1\1\12\uffff";
    static final String DFA186_minS =
        "\1\4\1\uffff\10\0\1\uffff";
    static final String DFA186_maxS =
        "\1\167\1\uffff\10\0\1\uffff";
    static final String DFA186_acceptS =
        "\1\uffff\1\2\10\uffff\1\1";
    static final String DFA186_specialS =
        "\2\uffff\1\3\1\7\1\0\1\1\1\2\1\5\1\6\1\4\1\uffff}>";
    static final String[] DFA186_transitionS = {
            "\3\1\1\2\1\1\1\3\11\1\1\4\1\uffff\32\1\1\uffff\2\1\6\uffff\21\1\1\5\1\6\1\7\1\10\1\11\14\1\1\uffff\20\1\2\uffff\13\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA186_eot = DFA.unpackEncodedString(DFA186_eotS);
    static final short[] DFA186_eof = DFA.unpackEncodedString(DFA186_eofS);
    static final char[] DFA186_min = DFA.unpackEncodedStringToUnsignedChars(DFA186_minS);
    static final char[] DFA186_max = DFA.unpackEncodedStringToUnsignedChars(DFA186_maxS);
    static final short[] DFA186_accept = DFA.unpackEncodedString(DFA186_acceptS);
    static final short[] DFA186_special = DFA.unpackEncodedString(DFA186_specialS);
    static final short[][] DFA186_transition;

    static {
        int numStates = DFA186_transitionS.length;
        DFA186_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA186_transition[i] = DFA.unpackEncodedString(DFA186_transitionS[i]);
        }
    }

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = DFA186_eot;
            this.eof = DFA186_eof;
            this.min = DFA186_min;
            this.max = DFA186_max;
            this.accept = DFA186_accept;
            this.special = DFA186_special;
            this.transition = DFA186_transition;
        }
        public String getDescription() {
            return "()* loopback of 7485:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA186_4 = input.LA(1);

                         
                        int index186_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA186_5 = input.LA(1);

                         
                        int index186_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA186_6 = input.LA(1);

                         
                        int index186_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA186_2 = input.LA(1);

                         
                        int index186_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA186_9 = input.LA(1);

                         
                        int index186_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA186_7 = input.LA(1);

                         
                        int index186_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA186_8 = input.LA(1);

                         
                        int index186_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA186_3 = input.LA(1);

                         
                        int index186_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index186_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 186, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA189_eotS =
        "\13\uffff";
    static final String DFA189_eofS =
        "\13\uffff";
    static final String DFA189_minS =
        "\1\7\2\uffff\1\11\7\uffff";
    static final String DFA189_maxS =
        "\1\115\2\uffff\1\113\7\uffff";
    static final String DFA189_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\6\1\3";
    static final String DFA189_specialS =
        "\13\uffff}>";
    static final String[] DFA189_transitionS = {
            "\1\6\1\uffff\1\3\11\uffff\1\5\65\uffff\1\1\1\2\1\4\1\7\1\10",
            "",
            "",
            "\1\11\101\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA189_eot = DFA.unpackEncodedString(DFA189_eotS);
    static final short[] DFA189_eof = DFA.unpackEncodedString(DFA189_eofS);
    static final char[] DFA189_min = DFA.unpackEncodedStringToUnsignedChars(DFA189_minS);
    static final char[] DFA189_max = DFA.unpackEncodedStringToUnsignedChars(DFA189_maxS);
    static final short[] DFA189_accept = DFA.unpackEncodedString(DFA189_acceptS);
    static final short[] DFA189_special = DFA.unpackEncodedString(DFA189_specialS);
    static final short[][] DFA189_transition;

    static {
        int numStates = DFA189_transitionS.length;
        DFA189_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA189_transition[i] = DFA.unpackEncodedString(DFA189_transitionS[i]);
        }
    }

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = DFA189_eot;
            this.eof = DFA189_eof;
            this.min = DFA189_min;
            this.max = DFA189_max;
            this.accept = DFA189_accept;
            this.special = DFA189_special;
            this.transition = DFA189_transition;
        }
        public String getDescription() {
            return "7550:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String DFA205_eotS =
        "\154\uffff";
    static final String DFA205_eofS =
        "\1\2\153\uffff";
    static final String DFA205_minS =
        "\1\4\1\0\152\uffff";
    static final String DFA205_maxS =
        "\1\167\1\0\152\uffff";
    static final String DFA205_acceptS =
        "\2\uffff\1\2\150\uffff\1\1";
    static final String DFA205_specialS =
        "\1\uffff\1\0\152\uffff}>";
    static final String[] DFA205_transitionS = {
            "\15\2\1\1\2\2\1\uffff\32\2\1\uffff\2\2\6\uffff\42\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA205_eot = DFA.unpackEncodedString(DFA205_eotS);
    static final short[] DFA205_eof = DFA.unpackEncodedString(DFA205_eofS);
    static final char[] DFA205_min = DFA.unpackEncodedStringToUnsignedChars(DFA205_minS);
    static final char[] DFA205_max = DFA.unpackEncodedStringToUnsignedChars(DFA205_maxS);
    static final short[] DFA205_accept = DFA.unpackEncodedString(DFA205_acceptS);
    static final short[] DFA205_special = DFA.unpackEncodedString(DFA205_specialS);
    static final short[][] DFA205_transition;

    static {
        int numStates = DFA205_transitionS.length;
        DFA205_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA205_transition[i] = DFA.unpackEncodedString(DFA205_transitionS[i]);
        }
    }

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = DFA205_eot;
            this.eof = DFA205_eof;
            this.min = DFA205_min;
            this.max = DFA205_max;
            this.accept = DFA205_accept;
            this.special = DFA205_special;
            this.transition = DFA205_transition;
        }
        public String getDescription() {
            return "8394:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA205_1 = input.LA(1);

                         
                        int index205_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index205_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA204_eotS =
        "\75\uffff";
    static final String DFA204_eofS =
        "\75\uffff";
    static final String DFA204_minS =
        "\1\4\10\0\1\uffff\26\0\35\uffff";
    static final String DFA204_maxS =
        "\1\167\10\0\1\uffff\26\0\35\uffff";
    static final String DFA204_acceptS =
        "\11\uffff\1\1\26\uffff\1\1\1\2\32\uffff\1\3";
    static final String DFA204_specialS =
        "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\35\uffff}>";
    static final String[] DFA204_transitionS = {
            "\1\25\1\uffff\1\13\1\41\2\uffff\1\17\1\21\1\41\1\uffff\1\23\1\16\1\4\1\10\1\74\1\11\1\uffff\1\1\1\32\1\41\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\uffff\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\1\uffff\1\41\10\uffff\2\41\23\uffff\2\41\4\uffff\1\41\5\uffff\1\40\1\41\2\uffff\13\41\4\uffff\1\2\3\41\4\uffff\3\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA204_eot = DFA.unpackEncodedString(DFA204_eotS);
    static final short[] DFA204_eof = DFA.unpackEncodedString(DFA204_eofS);
    static final char[] DFA204_min = DFA.unpackEncodedStringToUnsignedChars(DFA204_minS);
    static final char[] DFA204_max = DFA.unpackEncodedStringToUnsignedChars(DFA204_maxS);
    static final short[] DFA204_accept = DFA.unpackEncodedString(DFA204_acceptS);
    static final short[] DFA204_special = DFA.unpackEncodedString(DFA204_specialS);
    static final short[][] DFA204_transition;

    static {
        int numStates = DFA204_transitionS.length;
        DFA204_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA204_transition[i] = DFA.unpackEncodedString(DFA204_transitionS[i]);
        }
    }

    class DFA204 extends DFA {

        public DFA204(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 204;
            this.eot = DFA204_eot;
            this.eof = DFA204_eof;
            this.min = DFA204_min;
            this.max = DFA204_max;
            this.accept = DFA204_accept;
            this.special = DFA204_special;
            this.transition = DFA204_transition;
        }
        public String getDescription() {
            return "8415:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA204_0 = input.LA(1);

                         
                        int index204_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA204_0==KW_Extension) ) {s = 1;}

                        else if ( (LA204_0==RULE_ID) ) {s = 2;}

                        else if ( (LA204_0==KW_Create) ) {s = 3;}

                        else if ( (LA204_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA204_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA204_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA204_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA204_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA204_0==KW_EqualsSignGreaterThanSign) && (synpred41_InternalXtend())) {s = 9;}

                        else if ( (LA204_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA204_0==KW_Class) ) {s = 11;}

                        else if ( (LA204_0==KW_Def) ) {s = 12;}

                        else if ( (LA204_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA204_0==KW_Enum) ) {s = 14;}

                        else if ( (LA204_0==KW_Extends) ) {s = 15;}

                        else if ( (LA204_0==KW_Final) ) {s = 16;}

                        else if ( (LA204_0==KW_Implements) ) {s = 17;}

                        else if ( (LA204_0==KW_Import) ) {s = 18;}

                        else if ( (LA204_0==KW_Interface) ) {s = 19;}

                        else if ( (LA204_0==KW_Override) ) {s = 20;}

                        else if ( (LA204_0==KW_Package) ) {s = 21;}

                        else if ( (LA204_0==KW_Public) ) {s = 22;}

                        else if ( (LA204_0==KW_Private) ) {s = 23;}

                        else if ( (LA204_0==KW_Protected) ) {s = 24;}

                        else if ( (LA204_0==KW_Static) ) {s = 25;}

                        else if ( (LA204_0==KW_Throws) ) {s = 26;}

                        else if ( (LA204_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA204_0==KW_Native) ) {s = 28;}

                        else if ( (LA204_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA204_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA204_0==KW_Transient) ) {s = 31;}

                        else if ( (LA204_0==KW_VerticalLine) && (synpred41_InternalXtend())) {s = 32;}

                        else if ( (LA204_0==KW_LessThanSign||LA204_0==KW_LeftCurlyBracket||LA204_0==KW_New||LA204_0==KW_Switch||(LA204_0>=KW_NumberSign && LA204_0<=KW_LeftSquareBracket)||(LA204_0>=KW_PlusSign && LA204_0<=KW_HyphenMinus)||LA204_0==KW_ExclamationMark||LA204_0==KW_If||(LA204_0>=KW_For && LA204_0<=KW_Try)||(LA204_0>=RULE_STRING && LA204_0<=RULE_RICH_TEXT_START)||(LA204_0>=RULE_HEX && LA204_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA204_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index204_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA204_1 = input.LA(1);

                         
                        int index204_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA204_2 = input.LA(1);

                         
                        int index204_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA204_3 = input.LA(1);

                         
                        int index204_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA204_4 = input.LA(1);

                         
                        int index204_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA204_5 = input.LA(1);

                         
                        int index204_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA204_6 = input.LA(1);

                         
                        int index204_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA204_7 = input.LA(1);

                         
                        int index204_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA204_8 = input.LA(1);

                         
                        int index204_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA204_10 = input.LA(1);

                         
                        int index204_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA204_11 = input.LA(1);

                         
                        int index204_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA204_12 = input.LA(1);

                         
                        int index204_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA204_13 = input.LA(1);

                         
                        int index204_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA204_14 = input.LA(1);

                         
                        int index204_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA204_15 = input.LA(1);

                         
                        int index204_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA204_16 = input.LA(1);

                         
                        int index204_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA204_17 = input.LA(1);

                         
                        int index204_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA204_18 = input.LA(1);

                         
                        int index204_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA204_19 = input.LA(1);

                         
                        int index204_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA204_20 = input.LA(1);

                         
                        int index204_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA204_21 = input.LA(1);

                         
                        int index204_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA204_22 = input.LA(1);

                         
                        int index204_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA204_23 = input.LA(1);

                         
                        int index204_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA204_24 = input.LA(1);

                         
                        int index204_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA204_25 = input.LA(1);

                         
                        int index204_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA204_26 = input.LA(1);

                         
                        int index204_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA204_27 = input.LA(1);

                         
                        int index204_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA204_28 = input.LA(1);

                         
                        int index204_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA204_29 = input.LA(1);

                         
                        int index204_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA204_30 = input.LA(1);

                         
                        int index204_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA204_31 = input.LA(1);

                         
                        int index204_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index204_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 204, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA206_eotS =
        "\154\uffff";
    static final String DFA206_eofS =
        "\1\2\153\uffff";
    static final String DFA206_minS =
        "\1\4\1\0\152\uffff";
    static final String DFA206_maxS =
        "\1\167\1\0\152\uffff";
    static final String DFA206_acceptS =
        "\2\uffff\1\2\150\uffff\1\1";
    static final String DFA206_specialS =
        "\1\uffff\1\0\152\uffff}>";
    static final String[] DFA206_transitionS = {
            "\20\2\1\uffff\32\2\1\uffff\2\2\6\uffff\2\2\1\1\37\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA206_eot = DFA.unpackEncodedString(DFA206_eotS);
    static final short[] DFA206_eof = DFA.unpackEncodedString(DFA206_eofS);
    static final char[] DFA206_min = DFA.unpackEncodedStringToUnsignedChars(DFA206_minS);
    static final char[] DFA206_max = DFA.unpackEncodedStringToUnsignedChars(DFA206_maxS);
    static final short[] DFA206_accept = DFA.unpackEncodedString(DFA206_acceptS);
    static final short[] DFA206_special = DFA.unpackEncodedString(DFA206_specialS);
    static final short[][] DFA206_transition;

    static {
        int numStates = DFA206_transitionS.length;
        DFA206_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA206_transition[i] = DFA.unpackEncodedString(DFA206_transitionS[i]);
        }
    }

    class DFA206 extends DFA {

        public DFA206(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 206;
            this.eot = DFA206_eot;
            this.eof = DFA206_eof;
            this.min = DFA206_min;
            this.max = DFA206_max;
            this.accept = DFA206_accept;
            this.special = DFA206_special;
            this.transition = DFA206_transition;
        }
        public String getDescription() {
            return "8494:3: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA206_1 = input.LA(1);

                         
                        int index206_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index206_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 206, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA208_eotS =
        "\72\uffff";
    static final String DFA208_eofS =
        "\72\uffff";
    static final String DFA208_minS =
        "\1\4\3\uffff\1\0\53\uffff\1\0\11\uffff";
    static final String DFA208_maxS =
        "\1\167\3\uffff\1\0\53\uffff\1\0\11\uffff";
    static final String DFA208_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\uffff\1\5\35\uffff\1\6\13\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\4\1\10\1\11";
    static final String DFA208_specialS =
        "\4\uffff\1\0\53\uffff\1\1\11\uffff}>";
    static final String[] DFA208_transitionS = {
            "\1\5\1\uffff\2\5\2\uffff\2\5\1\2\1\uffff\3\5\1\66\3\uffff\2\5\1\1\1\uffff\12\5\1\4\1\5\2\uffff\3\5\1\uffff\4\5\1\uffff\1\3\10\uffff\2\43\40\uffff\1\57\2\uffff\1\60\1\61\1\62\1\5\4\43\1\63\1\64\1\65\4\uffff\1\5\3\43\4\uffff\3\43",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA208_eot = DFA.unpackEncodedString(DFA208_eotS);
    static final short[] DFA208_eof = DFA.unpackEncodedString(DFA208_eofS);
    static final char[] DFA208_min = DFA.unpackEncodedStringToUnsignedChars(DFA208_minS);
    static final char[] DFA208_max = DFA.unpackEncodedStringToUnsignedChars(DFA208_maxS);
    static final short[] DFA208_accept = DFA.unpackEncodedString(DFA208_acceptS);
    static final short[] DFA208_special = DFA.unpackEncodedString(DFA208_specialS);
    static final short[][] DFA208_transition;

    static {
        int numStates = DFA208_transitionS.length;
        DFA208_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA208_transition[i] = DFA.unpackEncodedString(DFA208_transitionS[i]);
        }
    }

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = DFA208_eot;
            this.eof = DFA208_eof;
            this.min = DFA208_min;
            this.max = DFA208_max;
            this.accept = DFA208_accept;
            this.special = DFA208_special;
            this.transition = DFA208_transition;
        }
        public String getDescription() {
            return "8535:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA208_4 = input.LA(1);

                         
                        int index208_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalXtend()) ) {s = 55;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index208_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA208_48 = input.LA(1);

                         
                        int index208_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalXtend()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index208_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 208, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA217_eotS =
        "\77\uffff";
    static final String DFA217_eofS =
        "\77\uffff";
    static final String DFA217_minS =
        "\1\4\10\0\1\uffff\26\0\37\uffff";
    static final String DFA217_maxS =
        "\1\167\10\0\1\uffff\26\0\37\uffff";
    static final String DFA217_acceptS =
        "\11\uffff\1\1\26\uffff\1\1\1\2\35\uffff";
    static final String DFA217_specialS =
        "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\37\uffff}>";
    static final String[] DFA217_transitionS = {
            "\1\25\1\uffff\1\13\1\41\2\uffff\1\17\1\21\1\41\1\uffff\1\23\1\16\1\4\1\10\1\uffff\1\11\1\uffff\1\1\1\32\1\41\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\41\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\1\uffff\1\41\10\uffff\3\41\22\uffff\2\41\4\uffff\1\41\5\uffff\1\40\1\41\2\uffff\13\41\4\uffff\1\2\3\41\4\uffff\3\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA217_eot = DFA.unpackEncodedString(DFA217_eotS);
    static final short[] DFA217_eof = DFA.unpackEncodedString(DFA217_eofS);
    static final char[] DFA217_min = DFA.unpackEncodedStringToUnsignedChars(DFA217_minS);
    static final char[] DFA217_max = DFA.unpackEncodedStringToUnsignedChars(DFA217_maxS);
    static final short[] DFA217_accept = DFA.unpackEncodedString(DFA217_acceptS);
    static final short[] DFA217_special = DFA.unpackEncodedString(DFA217_specialS);
    static final short[][] DFA217_transition;

    static {
        int numStates = DFA217_transitionS.length;
        DFA217_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA217_transition[i] = DFA.unpackEncodedString(DFA217_transitionS[i]);
        }
    }

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = DFA217_eot;
            this.eof = DFA217_eof;
            this.min = DFA217_min;
            this.max = DFA217_max;
            this.accept = DFA217_accept;
            this.special = DFA217_special;
            this.transition = DFA217_transition;
        }
        public String getDescription() {
            return "9018:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA217_0 = input.LA(1);

                         
                        int index217_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA217_0==KW_Extension) ) {s = 1;}

                        else if ( (LA217_0==RULE_ID) ) {s = 2;}

                        else if ( (LA217_0==KW_Create) ) {s = 3;}

                        else if ( (LA217_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA217_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA217_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA217_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA217_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA217_0==KW_EqualsSignGreaterThanSign) && (synpred47_InternalXtend())) {s = 9;}

                        else if ( (LA217_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA217_0==KW_Class) ) {s = 11;}

                        else if ( (LA217_0==KW_Def) ) {s = 12;}

                        else if ( (LA217_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA217_0==KW_Enum) ) {s = 14;}

                        else if ( (LA217_0==KW_Extends) ) {s = 15;}

                        else if ( (LA217_0==KW_Final) ) {s = 16;}

                        else if ( (LA217_0==KW_Implements) ) {s = 17;}

                        else if ( (LA217_0==KW_Import) ) {s = 18;}

                        else if ( (LA217_0==KW_Interface) ) {s = 19;}

                        else if ( (LA217_0==KW_Override) ) {s = 20;}

                        else if ( (LA217_0==KW_Package) ) {s = 21;}

                        else if ( (LA217_0==KW_Public) ) {s = 22;}

                        else if ( (LA217_0==KW_Private) ) {s = 23;}

                        else if ( (LA217_0==KW_Protected) ) {s = 24;}

                        else if ( (LA217_0==KW_Static) ) {s = 25;}

                        else if ( (LA217_0==KW_Throws) ) {s = 26;}

                        else if ( (LA217_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA217_0==KW_Native) ) {s = 28;}

                        else if ( (LA217_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA217_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA217_0==KW_Transient) ) {s = 31;}

                        else if ( (LA217_0==KW_VerticalLine) && (synpred47_InternalXtend())) {s = 32;}

                        else if ( (LA217_0==KW_LessThanSign||LA217_0==KW_LeftCurlyBracket||LA217_0==KW_New||(LA217_0>=KW_Val && LA217_0<=KW_Var)||LA217_0==KW_Switch||(LA217_0>=KW_NumberSign && LA217_0<=KW_RightSquareBracket)||(LA217_0>=KW_PlusSign && LA217_0<=KW_HyphenMinus)||LA217_0==KW_ExclamationMark||LA217_0==KW_If||(LA217_0>=KW_For && LA217_0<=KW_Try)||(LA217_0>=RULE_STRING && LA217_0<=RULE_RICH_TEXT_START)||(LA217_0>=RULE_HEX && LA217_0<=RULE_DECIMAL)) ) {s = 33;}

                         
                        input.seek(index217_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA217_1 = input.LA(1);

                         
                        int index217_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA217_2 = input.LA(1);

                         
                        int index217_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA217_3 = input.LA(1);

                         
                        int index217_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA217_4 = input.LA(1);

                         
                        int index217_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA217_5 = input.LA(1);

                         
                        int index217_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA217_6 = input.LA(1);

                         
                        int index217_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA217_7 = input.LA(1);

                         
                        int index217_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA217_8 = input.LA(1);

                         
                        int index217_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA217_10 = input.LA(1);

                         
                        int index217_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA217_11 = input.LA(1);

                         
                        int index217_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA217_12 = input.LA(1);

                         
                        int index217_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA217_13 = input.LA(1);

                         
                        int index217_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA217_14 = input.LA(1);

                         
                        int index217_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA217_15 = input.LA(1);

                         
                        int index217_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA217_16 = input.LA(1);

                         
                        int index217_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA217_17 = input.LA(1);

                         
                        int index217_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA217_18 = input.LA(1);

                         
                        int index217_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA217_19 = input.LA(1);

                         
                        int index217_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA217_20 = input.LA(1);

                         
                        int index217_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA217_21 = input.LA(1);

                         
                        int index217_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA217_22 = input.LA(1);

                         
                        int index217_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA217_23 = input.LA(1);

                         
                        int index217_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA217_24 = input.LA(1);

                         
                        int index217_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA217_25 = input.LA(1);

                         
                        int index217_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA217_26 = input.LA(1);

                         
                        int index217_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA217_27 = input.LA(1);

                         
                        int index217_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA217_28 = input.LA(1);

                         
                        int index217_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA217_29 = input.LA(1);

                         
                        int index217_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA217_30 = input.LA(1);

                         
                        int index217_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA217_31 = input.LA(1);

                         
                        int index217_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index217_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 217, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA238_eotS =
        "\154\uffff";
    static final String DFA238_eofS =
        "\1\2\153\uffff";
    static final String DFA238_minS =
        "\1\4\1\0\152\uffff";
    static final String DFA238_maxS =
        "\1\167\1\0\152\uffff";
    static final String DFA238_acceptS =
        "\2\uffff\1\2\150\uffff\1\1";
    static final String DFA238_specialS =
        "\1\uffff\1\0\152\uffff}>";
    static final String[] DFA238_transitionS = {
            "\15\2\1\1\2\2\1\uffff\32\2\1\uffff\2\2\6\uffff\42\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA238_eot = DFA.unpackEncodedString(DFA238_eotS);
    static final short[] DFA238_eof = DFA.unpackEncodedString(DFA238_eofS);
    static final char[] DFA238_min = DFA.unpackEncodedStringToUnsignedChars(DFA238_minS);
    static final char[] DFA238_max = DFA.unpackEncodedStringToUnsignedChars(DFA238_maxS);
    static final short[] DFA238_accept = DFA.unpackEncodedString(DFA238_acceptS);
    static final short[] DFA238_special = DFA.unpackEncodedString(DFA238_specialS);
    static final short[][] DFA238_transition;

    static {
        int numStates = DFA238_transitionS.length;
        DFA238_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA238_transition[i] = DFA.unpackEncodedString(DFA238_transitionS[i]);
        }
    }

    class DFA238 extends DFA {

        public DFA238(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 238;
            this.eot = DFA238_eot;
            this.eof = DFA238_eof;
            this.min = DFA238_min;
            this.max = DFA238_max;
            this.accept = DFA238_accept;
            this.special = DFA238_special;
            this.transition = DFA238_transition;
        }
        public String getDescription() {
            return "10155:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA238_1 = input.LA(1);

                         
                        int index238_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index238_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 238, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA237_eotS =
        "\75\uffff";
    static final String DFA237_eofS =
        "\75\uffff";
    static final String DFA237_minS =
        "\1\4\10\0\1\uffff\26\0\35\uffff";
    static final String DFA237_maxS =
        "\1\167\10\0\1\uffff\26\0\35\uffff";
    static final String DFA237_acceptS =
        "\11\uffff\1\1\26\uffff\1\1\1\2\32\uffff\1\3";
    static final String DFA237_specialS =
        "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\35\uffff}>";
    static final String[] DFA237_transitionS = {
            "\1\25\1\uffff\1\13\1\41\2\uffff\1\17\1\21\1\41\1\uffff\1\23\1\16\1\4\1\10\1\74\1\11\1\uffff\1\1\1\32\1\41\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\uffff\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\1\uffff\1\41\10\uffff\2\41\23\uffff\2\41\4\uffff\1\41\5\uffff\1\40\1\41\2\uffff\13\41\4\uffff\1\2\3\41\4\uffff\3\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA237_eot = DFA.unpackEncodedString(DFA237_eotS);
    static final short[] DFA237_eof = DFA.unpackEncodedString(DFA237_eofS);
    static final char[] DFA237_min = DFA.unpackEncodedStringToUnsignedChars(DFA237_minS);
    static final char[] DFA237_max = DFA.unpackEncodedStringToUnsignedChars(DFA237_maxS);
    static final short[] DFA237_accept = DFA.unpackEncodedString(DFA237_acceptS);
    static final short[] DFA237_special = DFA.unpackEncodedString(DFA237_specialS);
    static final short[][] DFA237_transition;

    static {
        int numStates = DFA237_transitionS.length;
        DFA237_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA237_transition[i] = DFA.unpackEncodedString(DFA237_transitionS[i]);
        }
    }

    class DFA237 extends DFA {

        public DFA237(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 237;
            this.eot = DFA237_eot;
            this.eof = DFA237_eof;
            this.min = DFA237_min;
            this.max = DFA237_max;
            this.accept = DFA237_accept;
            this.special = DFA237_special;
            this.transition = DFA237_transition;
        }
        public String getDescription() {
            return "10176:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA237_0 = input.LA(1);

                         
                        int index237_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA237_0==KW_Extension) ) {s = 1;}

                        else if ( (LA237_0==RULE_ID) ) {s = 2;}

                        else if ( (LA237_0==KW_Create) ) {s = 3;}

                        else if ( (LA237_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA237_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA237_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA237_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA237_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA237_0==KW_EqualsSignGreaterThanSign) && (synpred53_InternalXtend())) {s = 9;}

                        else if ( (LA237_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA237_0==KW_Class) ) {s = 11;}

                        else if ( (LA237_0==KW_Def) ) {s = 12;}

                        else if ( (LA237_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA237_0==KW_Enum) ) {s = 14;}

                        else if ( (LA237_0==KW_Extends) ) {s = 15;}

                        else if ( (LA237_0==KW_Final) ) {s = 16;}

                        else if ( (LA237_0==KW_Implements) ) {s = 17;}

                        else if ( (LA237_0==KW_Import) ) {s = 18;}

                        else if ( (LA237_0==KW_Interface) ) {s = 19;}

                        else if ( (LA237_0==KW_Override) ) {s = 20;}

                        else if ( (LA237_0==KW_Package) ) {s = 21;}

                        else if ( (LA237_0==KW_Public) ) {s = 22;}

                        else if ( (LA237_0==KW_Private) ) {s = 23;}

                        else if ( (LA237_0==KW_Protected) ) {s = 24;}

                        else if ( (LA237_0==KW_Static) ) {s = 25;}

                        else if ( (LA237_0==KW_Throws) ) {s = 26;}

                        else if ( (LA237_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA237_0==KW_Native) ) {s = 28;}

                        else if ( (LA237_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA237_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA237_0==KW_Transient) ) {s = 31;}

                        else if ( (LA237_0==KW_VerticalLine) && (synpred53_InternalXtend())) {s = 32;}

                        else if ( (LA237_0==KW_LessThanSign||LA237_0==KW_LeftCurlyBracket||LA237_0==KW_New||LA237_0==KW_Switch||(LA237_0>=KW_NumberSign && LA237_0<=KW_LeftSquareBracket)||(LA237_0>=KW_PlusSign && LA237_0<=KW_HyphenMinus)||LA237_0==KW_ExclamationMark||LA237_0==KW_If||(LA237_0>=KW_For && LA237_0<=KW_Try)||(LA237_0>=RULE_STRING && LA237_0<=RULE_RICH_TEXT_START)||(LA237_0>=RULE_HEX && LA237_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA237_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index237_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA237_1 = input.LA(1);

                         
                        int index237_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA237_2 = input.LA(1);

                         
                        int index237_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA237_3 = input.LA(1);

                         
                        int index237_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA237_4 = input.LA(1);

                         
                        int index237_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA237_5 = input.LA(1);

                         
                        int index237_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA237_6 = input.LA(1);

                         
                        int index237_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA237_7 = input.LA(1);

                         
                        int index237_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA237_8 = input.LA(1);

                         
                        int index237_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA237_10 = input.LA(1);

                         
                        int index237_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA237_11 = input.LA(1);

                         
                        int index237_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA237_12 = input.LA(1);

                         
                        int index237_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA237_13 = input.LA(1);

                         
                        int index237_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA237_14 = input.LA(1);

                         
                        int index237_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA237_15 = input.LA(1);

                         
                        int index237_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA237_16 = input.LA(1);

                         
                        int index237_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA237_17 = input.LA(1);

                         
                        int index237_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA237_18 = input.LA(1);

                         
                        int index237_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA237_19 = input.LA(1);

                         
                        int index237_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA237_20 = input.LA(1);

                         
                        int index237_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA237_21 = input.LA(1);

                         
                        int index237_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA237_22 = input.LA(1);

                         
                        int index237_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA237_23 = input.LA(1);

                         
                        int index237_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA237_24 = input.LA(1);

                         
                        int index237_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA237_25 = input.LA(1);

                         
                        int index237_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA237_26 = input.LA(1);

                         
                        int index237_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA237_27 = input.LA(1);

                         
                        int index237_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA237_28 = input.LA(1);

                         
                        int index237_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA237_29 = input.LA(1);

                         
                        int index237_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA237_30 = input.LA(1);

                         
                        int index237_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA237_31 = input.LA(1);

                         
                        int index237_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index237_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 237, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA239_eotS =
        "\154\uffff";
    static final String DFA239_eofS =
        "\1\2\153\uffff";
    static final String DFA239_minS =
        "\1\4\1\0\152\uffff";
    static final String DFA239_maxS =
        "\1\167\1\0\152\uffff";
    static final String DFA239_acceptS =
        "\2\uffff\1\2\150\uffff\1\1";
    static final String DFA239_specialS =
        "\1\uffff\1\0\152\uffff}>";
    static final String[] DFA239_transitionS = {
            "\20\2\1\uffff\32\2\1\uffff\2\2\6\uffff\2\2\1\1\37\2\1\uffff\20\2\2\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA239_eot = DFA.unpackEncodedString(DFA239_eotS);
    static final short[] DFA239_eof = DFA.unpackEncodedString(DFA239_eofS);
    static final char[] DFA239_min = DFA.unpackEncodedStringToUnsignedChars(DFA239_minS);
    static final char[] DFA239_max = DFA.unpackEncodedStringToUnsignedChars(DFA239_maxS);
    static final short[] DFA239_accept = DFA.unpackEncodedString(DFA239_acceptS);
    static final short[] DFA239_special = DFA.unpackEncodedString(DFA239_specialS);
    static final short[][] DFA239_transition;

    static {
        int numStates = DFA239_transitionS.length;
        DFA239_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA239_transition[i] = DFA.unpackEncodedString(DFA239_transitionS[i]);
        }
    }

    class DFA239 extends DFA {

        public DFA239(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 239;
            this.eot = DFA239_eot;
            this.eof = DFA239_eof;
            this.min = DFA239_min;
            this.max = DFA239_max;
            this.accept = DFA239_accept;
            this.special = DFA239_special;
            this.transition = DFA239_transition;
        }
        public String getDescription() {
            return "10255:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA239_1 = input.LA(1);

                         
                        int index239_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index239_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 239, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA243_eotS =
        "\154\uffff";
    static final String DFA243_eofS =
        "\1\72\153\uffff";
    static final String DFA243_minS =
        "\1\4\71\0\62\uffff";
    static final String DFA243_maxS =
        "\1\167\71\0\62\uffff";
    static final String DFA243_acceptS =
        "\72\uffff\1\2\60\uffff\1\1";
    static final String DFA243_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\62\uffff}>";
    static final String[] DFA243_transitionS = {
            "\1\17\1\72\1\4\1\44\2\72\1\11\1\13\1\42\1\72\1\15\1\10\1\3\1\71\2\72\1\uffff\1\35\1\24\1\41\1\72\1\20\1\21\1\22\1\2\1\23\1\7\1\12\1\25\1\26\1\27\1\30\1\31\2\72\1\6\1\16\1\5\1\72\1\32\1\33\1\34\1\14\1\uffff\1\43\1\72\6\uffff\1\72\1\46\1\47\23\72\1\40\1\37\4\72\1\36\5\72\1\uffff\1\62\2\72\1\63\1\64\1\65\1\45\1\50\1\51\1\55\1\61\1\66\1\67\1\70\2\72\2\uffff\1\1\1\56\1\57\1\60\4\72\1\52\1\53\1\54",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA243_eot = DFA.unpackEncodedString(DFA243_eotS);
    static final short[] DFA243_eof = DFA.unpackEncodedString(DFA243_eofS);
    static final char[] DFA243_min = DFA.unpackEncodedStringToUnsignedChars(DFA243_minS);
    static final char[] DFA243_max = DFA.unpackEncodedStringToUnsignedChars(DFA243_maxS);
    static final short[] DFA243_accept = DFA.unpackEncodedString(DFA243_acceptS);
    static final short[] DFA243_special = DFA.unpackEncodedString(DFA243_specialS);
    static final short[][] DFA243_transition;

    static {
        int numStates = DFA243_transitionS.length;
        DFA243_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA243_transition[i] = DFA.unpackEncodedString(DFA243_transitionS[i]);
        }
    }

    class DFA243 extends DFA {

        public DFA243(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 243;
            this.eot = DFA243_eot;
            this.eof = DFA243_eof;
            this.min = DFA243_min;
            this.max = DFA243_max;
            this.accept = DFA243_accept;
            this.special = DFA243_special;
            this.transition = DFA243_transition;
        }
        public String getDescription() {
            return "10589:1: ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA243_1 = input.LA(1);

                         
                        int index243_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA243_2 = input.LA(1);

                         
                        int index243_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA243_3 = input.LA(1);

                         
                        int index243_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA243_4 = input.LA(1);

                         
                        int index243_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA243_5 = input.LA(1);

                         
                        int index243_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA243_6 = input.LA(1);

                         
                        int index243_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA243_7 = input.LA(1);

                         
                        int index243_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA243_8 = input.LA(1);

                         
                        int index243_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA243_9 = input.LA(1);

                         
                        int index243_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA243_10 = input.LA(1);

                         
                        int index243_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA243_11 = input.LA(1);

                         
                        int index243_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA243_12 = input.LA(1);

                         
                        int index243_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA243_13 = input.LA(1);

                         
                        int index243_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA243_14 = input.LA(1);

                         
                        int index243_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA243_15 = input.LA(1);

                         
                        int index243_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA243_16 = input.LA(1);

                         
                        int index243_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA243_17 = input.LA(1);

                         
                        int index243_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA243_18 = input.LA(1);

                         
                        int index243_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA243_19 = input.LA(1);

                         
                        int index243_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA243_20 = input.LA(1);

                         
                        int index243_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA243_21 = input.LA(1);

                         
                        int index243_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA243_22 = input.LA(1);

                         
                        int index243_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA243_23 = input.LA(1);

                         
                        int index243_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA243_24 = input.LA(1);

                         
                        int index243_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA243_25 = input.LA(1);

                         
                        int index243_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA243_26 = input.LA(1);

                         
                        int index243_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA243_27 = input.LA(1);

                         
                        int index243_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA243_28 = input.LA(1);

                         
                        int index243_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA243_29 = input.LA(1);

                         
                        int index243_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA243_30 = input.LA(1);

                         
                        int index243_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA243_31 = input.LA(1);

                         
                        int index243_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA243_32 = input.LA(1);

                         
                        int index243_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA243_33 = input.LA(1);

                         
                        int index243_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA243_34 = input.LA(1);

                         
                        int index243_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA243_35 = input.LA(1);

                         
                        int index243_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA243_36 = input.LA(1);

                         
                        int index243_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA243_37 = input.LA(1);

                         
                        int index243_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA243_38 = input.LA(1);

                         
                        int index243_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA243_39 = input.LA(1);

                         
                        int index243_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA243_40 = input.LA(1);

                         
                        int index243_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA243_41 = input.LA(1);

                         
                        int index243_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA243_42 = input.LA(1);

                         
                        int index243_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA243_43 = input.LA(1);

                         
                        int index243_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA243_44 = input.LA(1);

                         
                        int index243_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA243_45 = input.LA(1);

                         
                        int index243_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA243_46 = input.LA(1);

                         
                        int index243_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA243_47 = input.LA(1);

                         
                        int index243_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA243_48 = input.LA(1);

                         
                        int index243_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA243_49 = input.LA(1);

                         
                        int index243_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA243_50 = input.LA(1);

                         
                        int index243_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA243_51 = input.LA(1);

                         
                        int index243_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA243_52 = input.LA(1);

                         
                        int index243_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA243_53 = input.LA(1);

                         
                        int index243_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA243_54 = input.LA(1);

                         
                        int index243_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA243_55 = input.LA(1);

                         
                        int index243_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA243_56 = input.LA(1);

                         
                        int index243_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA243_57 = input.LA(1);

                         
                        int index243_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalXtend()) ) {s = 107;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index243_57);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 243, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA247_eotS =
        "\12\uffff";
    static final String DFA247_eofS =
        "\1\1\11\uffff";
    static final String DFA247_minS =
        "\1\4\1\uffff\1\4\6\0\1\uffff";
    static final String DFA247_maxS =
        "\1\167\1\uffff\1\155\6\0\1\uffff";
    static final String DFA247_acceptS =
        "\1\uffff\1\2\7\uffff\1\1";
    static final String DFA247_specialS =
        "\3\uffff\1\5\1\2\1\1\1\0\1\3\1\4\1\uffff}>";
    static final String[] DFA247_transitionS = {
            "\24\1\1\2\31\1\6\uffff\42\1\1\uffff\20\1\1\uffff\14\1",
            "",
            "\1\1\1\uffff\2\1\2\uffff\2\1\2\uffff\2\1\1\4\4\uffff\2\1\2\uffff\14\1\2\uffff\2\1\1\5\1\uffff\1\6\1\7\1\10\1\1\41\uffff\1\1\20\uffff\1\1\13\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA247_eot = DFA.unpackEncodedString(DFA247_eotS);
    static final short[] DFA247_eof = DFA.unpackEncodedString(DFA247_eofS);
    static final char[] DFA247_min = DFA.unpackEncodedStringToUnsignedChars(DFA247_minS);
    static final char[] DFA247_max = DFA.unpackEncodedStringToUnsignedChars(DFA247_maxS);
    static final short[] DFA247_accept = DFA.unpackEncodedString(DFA247_acceptS);
    static final short[] DFA247_special = DFA.unpackEncodedString(DFA247_specialS);
    static final short[][] DFA247_transition;

    static {
        int numStates = DFA247_transitionS.length;
        DFA247_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA247_transition[i] = DFA.unpackEncodedString(DFA247_transitionS[i]);
        }
    }

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = DFA247_eot;
            this.eof = DFA247_eof;
            this.min = DFA247_min;
            this.max = DFA247_max;
            this.accept = DFA247_accept;
            this.special = DFA247_special;
            this.transition = DFA247_transition;
        }
        public String getDescription() {
            return "()* loopback of 10951:1: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA247_6 = input.LA(1);

                         
                        int index247_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA247_5 = input.LA(1);

                         
                        int index247_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA247_4 = input.LA(1);

                         
                        int index247_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA247_7 = input.LA(1);

                         
                        int index247_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA247_8 = input.LA(1);

                         
                        int index247_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA247_3 = input.LA(1);

                         
                        int index247_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index247_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 247, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA261_eotS =
        "\157\uffff";
    static final String DFA261_eofS =
        "\1\2\156\uffff";
    static final String DFA261_minS =
        "\1\4\1\0\155\uffff";
    static final String DFA261_maxS =
        "\1\167\1\0\155\uffff";
    static final String DFA261_acceptS =
        "\2\uffff\1\2\153\uffff\1\1";
    static final String DFA261_specialS =
        "\1\uffff\1\0\155\uffff}>";
    static final String[] DFA261_transitionS = {
            "\3\2\1\1\52\2\6\uffff\42\2\1\uffff\20\2\1\uffff\14\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA261_eot = DFA.unpackEncodedString(DFA261_eotS);
    static final short[] DFA261_eof = DFA.unpackEncodedString(DFA261_eofS);
    static final char[] DFA261_min = DFA.unpackEncodedStringToUnsignedChars(DFA261_minS);
    static final char[] DFA261_max = DFA.unpackEncodedStringToUnsignedChars(DFA261_maxS);
    static final short[] DFA261_accept = DFA.unpackEncodedString(DFA261_acceptS);
    static final short[] DFA261_special = DFA.unpackEncodedString(DFA261_specialS);
    static final short[][] DFA261_transition;

    static {
        int numStates = DFA261_transitionS.length;
        DFA261_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA261_transition[i] = DFA.unpackEncodedString(DFA261_transitionS[i]);
        }
    }

    class DFA261 extends DFA {

        public DFA261(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 261;
            this.eot = DFA261_eot;
            this.eof = DFA261_eof;
            this.min = DFA261_min;
            this.max = DFA261_max;
            this.accept = DFA261_accept;
            this.special = DFA261_special;
            this.transition = DFA261_transition;
        }
        public String getDescription() {
            return "11262:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA261_1 = input.LA(1);

                         
                        int index261_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalXtend()) ) {s = 110;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index261_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 261, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA260_eotS =
        "\12\uffff";
    static final String DFA260_eofS =
        "\1\1\11\uffff";
    static final String DFA260_minS =
        "\1\4\1\uffff\1\4\6\0\1\uffff";
    static final String DFA260_maxS =
        "\1\167\1\uffff\1\155\6\0\1\uffff";
    static final String DFA260_acceptS =
        "\1\uffff\1\2\7\uffff\1\1";
    static final String DFA260_specialS =
        "\3\uffff\1\1\1\3\1\0\1\5\1\2\1\4\1\uffff}>";
    static final String[] DFA260_transitionS = {
            "\24\1\1\2\31\1\6\uffff\42\1\1\uffff\20\1\1\uffff\14\1",
            "",
            "\1\1\1\uffff\2\1\2\uffff\2\1\2\uffff\2\1\1\4\4\uffff\2\1\2\uffff\14\1\2\uffff\2\1\1\5\1\uffff\1\6\1\7\1\10\1\1\62\uffff\1\1\13\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA260_eot = DFA.unpackEncodedString(DFA260_eotS);
    static final short[] DFA260_eof = DFA.unpackEncodedString(DFA260_eofS);
    static final char[] DFA260_min = DFA.unpackEncodedStringToUnsignedChars(DFA260_minS);
    static final char[] DFA260_max = DFA.unpackEncodedStringToUnsignedChars(DFA260_maxS);
    static final short[] DFA260_accept = DFA.unpackEncodedString(DFA260_acceptS);
    static final short[] DFA260_special = DFA.unpackEncodedString(DFA260_specialS);
    static final short[][] DFA260_transition;

    static {
        int numStates = DFA260_transitionS.length;
        DFA260_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA260_transition[i] = DFA.unpackEncodedString(DFA260_transitionS[i]);
        }
    }

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = DFA260_eot;
            this.eof = DFA260_eof;
            this.min = DFA260_min;
            this.max = DFA260_max;
            this.accept = DFA260_accept;
            this.special = DFA260_special;
            this.transition = DFA260_transition;
        }
        public String getDescription() {
            return "()* loopback of 11311:1: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA260_5 = input.LA(1);

                         
                        int index260_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA260_3 = input.LA(1);

                         
                        int index260_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA260_7 = input.LA(1);

                         
                        int index260_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA260_4 = input.LA(1);

                         
                        int index260_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA260_8 = input.LA(1);

                         
                        int index260_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA260_6 = input.LA(1);

                         
                        int index260_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 260, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA259_eotS =
        "\157\uffff";
    static final String DFA259_eofS =
        "\1\2\156\uffff";
    static final String DFA259_minS =
        "\1\4\1\0\155\uffff";
    static final String DFA259_maxS =
        "\1\167\1\0\155\uffff";
    static final String DFA259_acceptS =
        "\2\uffff\1\2\153\uffff\1\1";
    static final String DFA259_specialS =
        "\1\uffff\1\0\155\uffff}>";
    static final String[] DFA259_transitionS = {
            "\3\2\1\1\52\2\6\uffff\42\2\1\uffff\20\2\1\uffff\14\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA259_eot = DFA.unpackEncodedString(DFA259_eotS);
    static final short[] DFA259_eof = DFA.unpackEncodedString(DFA259_eofS);
    static final char[] DFA259_min = DFA.unpackEncodedStringToUnsignedChars(DFA259_minS);
    static final char[] DFA259_max = DFA.unpackEncodedStringToUnsignedChars(DFA259_maxS);
    static final short[] DFA259_accept = DFA.unpackEncodedString(DFA259_acceptS);
    static final short[] DFA259_special = DFA.unpackEncodedString(DFA259_specialS);
    static final short[][] DFA259_transition;

    static {
        int numStates = DFA259_transitionS.length;
        DFA259_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA259_transition[i] = DFA.unpackEncodedString(DFA259_transitionS[i]);
        }
    }

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = DFA259_eot;
            this.eof = DFA259_eof;
            this.min = DFA259_min;
            this.max = DFA259_max;
            this.accept = DFA259_accept;
            this.special = DFA259_special;
            this.transition = DFA259_transition;
        }
        public String getDescription() {
            return "11338:2: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA259_1 = input.LA(1);

                         
                        int index259_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalXtend()) ) {s = 110;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index259_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 259, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA271_eotS =
        "\21\uffff";
    static final String DFA271_eofS =
        "\2\uffff\6\11\3\uffff\6\11";
    static final String DFA271_minS =
        "\1\20\1\uffff\6\4\1\20\2\uffff\6\4";
    static final String DFA271_maxS =
        "\1\155\1\uffff\6\70\1\155\2\uffff\6\70";
    static final String DFA271_acceptS =
        "\1\uffff\1\1\7\uffff\1\2\1\3\6\uffff";
    static final String DFA271_specialS =
        "\21\uffff}>";
    static final String[] DFA271_transitionS = {
            "\1\4\14\uffff\1\1\13\uffff\1\3\1\uffff\1\5\1\6\1\7\77\uffff\1\2",
            "",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\1\15\30\uffff\1\14\1\uffff\1\16\1\17\1\20\42\uffff\1\12\34\uffff\1\13",
            "",
            "",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\11\uffff\1\11"
    };

    static final short[] DFA271_eot = DFA.unpackEncodedString(DFA271_eotS);
    static final short[] DFA271_eof = DFA.unpackEncodedString(DFA271_eofS);
    static final char[] DFA271_min = DFA.unpackEncodedStringToUnsignedChars(DFA271_minS);
    static final char[] DFA271_max = DFA.unpackEncodedStringToUnsignedChars(DFA271_maxS);
    static final short[] DFA271_accept = DFA.unpackEncodedString(DFA271_acceptS);
    static final short[] DFA271_special = DFA.unpackEncodedString(DFA271_specialS);
    static final short[][] DFA271_transition;

    static {
        int numStates = DFA271_transitionS.length;
        DFA271_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA271_transition[i] = DFA.unpackEncodedString(DFA271_transitionS[i]);
        }
    }

    class DFA271 extends DFA {

        public DFA271(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 271;
            this.eot = DFA271_eot;
            this.eof = DFA271_eof;
            this.min = DFA271_min;
            this.max = DFA271_max;
            this.accept = DFA271_accept;
            this.special = DFA271_special;
            this.transition = DFA271_transition;
        }
        public String getDescription() {
            return "11886:1: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x00003A0000010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0100401FFE01C072L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0100401FFE01C052L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0100001FFE01C052L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0100001FFE01C050L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000001FFE000050L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000001C80L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000300L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000001C00L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000001800L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x00003A00000B0000L,0x0000200000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000001100L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x01003BFFFEABE050L,0x0000200000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000001FFE004010L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000001480L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000001400L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000001FFE008010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x00003A0000012020L,0x0000200000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000002120L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000001FFE010010L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x01003A7FFE2BE050L,0x0000200000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x00003A7FFE2F0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000040100L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00003A7FFE2B0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x01003A7FFE2BC050L,0x0000200000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000007FFE000010L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000100022L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x07017B9FFEE3DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x01003BFFFEABC050L,0x0000200000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00003A0000110022L,0x0000200000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000001FFE200010L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000019FFE000010L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0xF0003BFFFE2B0290L,0x0000200000DFFEFFL});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x01003A7FFE2F0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x01003A7FFE2B0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000401022L,0x0001C00000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000001122L,0x0001C00000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000001FFE800010L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000020080L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000401000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x00003A7FFE2B0010L,0x0000280000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000001000082L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000BA0000010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x00007BFFFE6BCC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000006000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x00007B9FFE41CC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000001002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0400000000020082L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0400000000020002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x07017BFFFEEFDCD0L,0x00E1E1FFCC10C000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x07017BFFFEEBDCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00023E7FFE2B2110L,0x0000200020000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x07157BFFFEE3DCD0L,0x00FFE1FFC810C000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x07157BFFFEE3DCD2L,0x00E7E1FFC810C000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000380000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x00E0000000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x07017B9FFEE7DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0F017B9FFEE3DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0800000000000100L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0xF000000000000282L,0x0000000000000001L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000200L,0x0000000000000002L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x00000000000000F0L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000282L,0x0000000000000102L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000080282L,0x0000000000003E00L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000080080L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000002L,0x000000000000C000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x00000000000F0000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0xF0003BFFFE2B0292L,0x0000200000DFFEFFL});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000001000002L,0x0000000003000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x00007B9FFE61CC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x00007B9FFE61CCD0L,0x0000200200000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0400000001020002L,0x0000000003000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0400000001000002L,0x0000000003000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x07017B9FFEE3FCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000002100L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0F017BFFFEEBDCD0L,0x00E1E1FFCC10C000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000100L,0x0000000004000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0F017BFFFEE3DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x07017BFFFEE3DCF2L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x07017BFFFEE3DCD2L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000040000000100L,0x0000000020000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000040000000100L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x07017BFFFEE3DCF0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000120L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x07017BFFFEE3DCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x07017B9FFEE3DCF0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x07017BFFFEE3FCD0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x07017BFFFEE3FCF0L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0400000000040000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x07017B9FFEE3DCD2L,0x00E1E1FFC810C000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000060000000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x0000060000000000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000402L,0x0000000200000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x00003A0020010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x00003A0000210000L,0x0000200000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x00003A0000010000L,0x0000200000010000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x00003A0000010002L,0x0000200000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000200002L});

}