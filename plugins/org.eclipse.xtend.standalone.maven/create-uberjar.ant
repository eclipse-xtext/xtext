<project default="run">
	<!--
	 1. Where to get bundles  = bundles.folder
	 2. standalone jar Version to use = maven.version
	 3. Where to put output = output.folder
	-->
	<property name="bundles.folder" value="./dependencies/plugins/" />
	<property name="maven.version" value="2.4.2-SNAPSHOT" />
	<property name="output.folder" value="output" />

	<property name="binJarTemp" value="binJarTemp" />
	<property name="sourceJarTemp" value="sourceJarTemp" />
	<property name="javadocJarTemp" value="javadocJarTemp" />
	<property name="deploy.dir" value="${user.home}/.m2/repository/org/eclipse/xtend/org.eclipse.xtend.standalone/${maven.version}/" />

	<target name="run" depends="clean,createSourcesUberjar,createFakeJavadoc">
		<echo>Using version: ${maven.version}</echo>
		<echo>Working with: ${bundles.folder}</echo>

		<loadfile property="modifiedPomXml" srcFile="pom-template.pom">
			<filterchain>
				<expandproperties />
			</filterchain>
		</loadfile>
		<echo file="${output.folder}/org.eclipse.xtend.standalone-${maven.version}.pom">${modifiedPomXml}</echo>
		<echo>Pom stored: ${output.folder}/org.eclipse.xtend.standalone-${maven.version}.pom</echo>
		<echo>Run deploy.artifacts target to deploy!</echo>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: deploy.artifacts                      
         - - - - - - - - - - - - - - - - - -->
	<target name="deploy.artifacts">
		<!--<mkdir dir="${user.home}/.m2/repository/org/eclipse/xtend/org.eclipse.xtend.standalone/${maven.version}/" />-->
		<copy verbose="true" overwrite="true" todir="${deploy.dir}">
			<fileset dir="${output.folder}">
				<include name="org.eclipse.xtend.standalone-${maven.version}.jar" />
				<include name="org.eclipse.xtend.standalone-${maven.version}-sources.jar" />
				<include name="org.eclipse.xtend.standalone-${maven.version}-javadoc.jar" />
				<include name="org.eclipse.xtend.standalone-${maven.version}.pom" />
			</fileset>
		</copy>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
         - - - - - - - - - - - - - - - - - -->
	<target name="clean">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${output.folder}">
				<include name="**" />
			</fileset>
			<fileset dir="${binJarTemp}">
				<include name="**" />
			</fileset>
			<fileset dir="${sourceJarTemp}">
				<include name="**" />
			</fileset>
			<fileset dir="${javadocJarTemp}">
				<include name="**" />
			</fileset>
		</delete>
	</target>

	<!-- ================================= 
          target: createUberjar    Binary           
         ================================= -->
	<target name="createUberjar">
		<!-- TP bundles -->
		<fileset dir="${bundles.folder}" id="binJars">
			<include name="org.eclipse.emf.common_*.jar" />
			<include name="org.eclipse.emf.codegen_*.jar" />
			<include name="org.eclipse.emf.ecore.xmi_*.jar" />
			<include name="org.eclipse.emf.ecore_*.jar" />
			<include name="org.eclipse.jdt.core_*.jar" />
			<include name="org.eclipse.jdt.annotation_*.jar" />
			<!-- Xtext bundles -->
			<include name="org.antlr.runtime_3.2.0*.jar" />
			<include name="org.eclipse.xtend.core_2.4*.jar" />
			<include name="org.eclipse.xtend.lib_2.4*.jar" />
			<include name="org.eclipse.xtext.common.types_2.4*.jar" />
			<include name="org.eclipse.xtext.util_2.4*.jar" />
			<include name="org.eclipse.xtext.xbase.lib_2.4*.jar" />
			<include name="org.eclipse.xtext.xbase_2.4*.jar" />
			<include name="org.eclipse.xtext_2.4*.jar" />
			<include name="org.eclipse.xtext.smap_2.4*.jar" />
			<include name="org.eclipse.xtext.junit4_2.4*.jar" />
			<include name="org.eclipse.xtext.xbase.junit_2.4*.jar" />
		</fileset>

		<unzip dest="${binJarTemp}">
			<fileset refid="binJars" />
		</unzip>

		<antcall target="cleanUpContent">
			<param name="contentDir" value="${binJarTemp}" />
		</antcall>

		<!-- EMF logs error if this property is not found -->
		<echo file="${binJarTemp}/plugin.properties">_UI_DiagnosticRoot_diagnostic=_UI_DiagnosticRoot_diagnostic</echo>
		<!-- Jar uber jar -->
		<jar destfile="${output.folder}/org.eclipse.xtend.standalone-${maven.version}.jar" basedir="${binJarTemp}" />
		
	</target>
	
	<target name="createFakeJavadoc">
		<!-- Readme -->
		<echo file="${javadocJarTemp}/readme.txt">Xtext javadoc can be found here: http://www.eclipse.org/modeling/tmf/javadoc/</echo>
		<!-- Jar readme file as javadoc jar -->
		<jar destfile="${output.folder}/org.eclipse.xtend.standalone-${maven.version}-javadoc.jar" basedir="${javadocJarTemp}" />
		
	</target>


	<!-- ================================= 
	          target: createSourcesUberjar     Sources   
	         ================================= -->
	<target name="createSourcesUberjar" depends="createUberjar">
		<!-- TP bundles -->
		<fileset dir="${bundles.folder}" id="sourceJars">
			<include name="org.eclipse.emf.common.source_*.jar" />
			<include name="org.eclipse.emf.codegen_.source_*.jar" />
			<include name="org.eclipse.emf.ecore.source_*.jar" />
			<include name="org.eclipse.emf.ecore.xmi.source_*.jar" />
			<include name="org.eclipse.jdt.core.source_*.jar" />
			<include name="org.eclipse.jdt.annotation.source_*.jar" />
			<!-- Xtext bundles -->
			<include name="org.antlr.runtime.source_3.2.0*.jar" />
			<include name="org.eclipse.xtend.core.source_2.4*.jar" />
			<include name="org.eclipse.xtend.lib.source_2.4*.jar" />
			<include name="org.eclipse.xtext.common.types.source_2.4*.jar" />
			<include name="org.eclipse.xtext.source_2.4*.jar" />
			<include name="org.eclipse.xtext.util.source_2.4*.jar" />
			<include name="org.eclipse.xtext.xbase.lib.source_2.4*.jar" />
			<include name="org.eclipse.xtext.xbase.source_2.4*.jar" />
			<include name="org.eclipse.xtext.smap.source_2.4*.jar" />
			<include name="org.eclipse.xtext.junit4.source_2.4*.jar" />
			<include name="org.eclipse.xtext.xbase.junit.source_2.4*.jar" />
		</fileset>

		<unzip dest="${sourceJarTemp}" overwrite="true">
			<fileset refid="sourceJars" />
		</unzip>

		<antcall target="cleanUpContent">
			<param name="contentDir" value="${sourceJarTemp}" />
		</antcall>

		<!-- Jar uber jar -->
		<jar destfile="${output.folder}/org.eclipse.xtend.standalone-${maven.version}-sources.jar" basedir="${sourceJarTemp}">
			<exclude name="META-INF/*" />
		</jar>
	</target>

	<!-- clean up equinox stuff, ecore file and some other -->
	<target name="cleanUpContent">
		<delete failonerror="false" verbose="true">
			<fileset dir="${contentDir}">
				<include name="about*" />
				<include name=".*" />
				<include name="plugin.*" />
				<include name="*.png" />
				<include name="**/*.ecore" />
				<include name="META-INF/**" />
			</fileset>
		</delete>
		<delete dir="${contentDir}/about_files" />
	</target>

</project>