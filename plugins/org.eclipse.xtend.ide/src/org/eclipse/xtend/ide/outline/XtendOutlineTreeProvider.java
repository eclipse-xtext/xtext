/*
* generated by Xtext
*/
package org.eclipse.xtend.ide.outline;

import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.IOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.IOutlineTreeStructureProvider;
import org.eclipse.xtext.ui.editor.outline.impl.OutlineMode;
import org.eclipse.xtext.ui.editor.preferences.IPreferenceStoreAccess;

import com.google.inject.Inject;

/**
 * Composite TreeProvider which delegates to the active {@link AbstractMultiModeOutlineTreeProvider} implementation
 * 
 * @author Dennis Huebner
 */
public class XtendOutlineTreeProvider implements IOutlineTreeStructureProvider, IOutlineTreeProvider,
		IOutlineTreeProvider.ModeAware {

	@Inject
	private XtendOutlineSourceTreeProvider sourceTreeProvider;

	@Inject
	private XtendOutlineJvmTreeProvider jvmTreeProvider;

	@Inject
	private IPreferenceStoreAccess preferenceStoreAccess;

	private boolean showJvmModel;

	public IOutlineNode createRoot(IXtextDocument document) {
		readCurrentModeFromPrefStore();
		return treeProviderInUse().createRoot(document);
	}

	public void createChildren(IOutlineNode parentNode, EObject modelElement) {
		readCurrentModeFromPrefStore();
		treeProviderInUse().createChildren(parentNode, modelElement);
	}

	private void readCurrentModeFromPrefStore() {
		this.showJvmModel = preferenceStoreAccess.getPreferenceStore().getBoolean(
				SwitchOutlineModeContribution.PREFERENCE_KEY);
	}

	private AbstractMultiModeOutlineTreeProvider treeProviderInUse() {
		if (showJvmModel) {
			return jvmTreeProvider;
		}
		return sourceTreeProvider;
	}

	public List<OutlineMode> getOutlineModes() {
		return treeProviderInUse().getModeAware().getOutlineModes();
	}

	public OutlineMode getCurrentMode() {
		return treeProviderInUse().getModeAware().getCurrentMode();
	}

	public OutlineMode getNextMode() {
		return treeProviderInUse().getModeAware().getNextMode();
	}

	public void setCurrentMode(OutlineMode outlineMode) {
		treeProviderInUse().getModeAware().setCurrentMode(outlineMode);
	}

}
